"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[5314],{70697:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var t=r(11527),o=r(88672);const i={},s="\u53c2\u8003\u6587\u7ae0",a={id:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790",title:"SpringCloudConfig\u6e90\u7801\u5206\u6790",description:"\u8981\u60f3\u4e86\u89e3spring cloud config\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u4e86\u89e3springboot\u4e2denvironment\u73af\u5883\u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002",source:"@site/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790.md",sourceDirName:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790",slug:"/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"spring",previous:{title:"SpringCloudZuul",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud/SpringCloudZuul"},next:{title:"SpringCloudEureka\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790"}},c={},p=[];function l(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"\u8981\u60f3\u4e86\u89e3spring cloud config\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u4e86\u89e3springboot\u4e2denvironment\u73af\u5883\u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"SpringApplication.run(AppApiApplication.class, args);\n\npublic static ConfigurableApplicationContext run(Class<?>[] primarySources,\n            String[] args) {\n    return new SpringApplication(primarySources).run(args);\n}\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728",(0,t.jsx)(e.code,{children:"SpringApplication\u7684\u6784\u9020\u65b9\u6cd5\u4e2d"}),"\uff0c\u6709\u8fd9\u4e48\u4e00\u6bb5\u4ee3\u7801"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"setInitializers((Collection) getSpringFactoriesInstances(\n                ApplicationContextInitializer.class));\n        setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"Set<String> names = new LinkedHashSet<>(\n                SpringFactoriesLoader.loadFactoryNames(type, classLoader));\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u5c31\u662f\u4eceMETA-INF\u76ee\u5f55\u4e0b\u9762\u83b7\u53d6",(0,t.jsx)(e.code,{children:"ApplicationListener\u548cApplicationContextInitializer"}),"\u7c7b\u578b\u7684\u6240\u6709\u7c7b\u3002\n\u5728spring-boot.jar\u4e0b\u9762spring.factories\u4e2d\u914d\u7f6e\u4e86",(0,t.jsx)(e.code,{children:"ConfigFileApplicationListener"}),"\u8fd9\u4e2a\u7c7b\uff0c\u914d\u7f6e\u73af\u5883\u4e5f\u5c31\u662fapplication\u6587\u4ef6\u7684\u52a0\u8f7d\u90fd\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u7c7b"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Application Listeners\norg.springframework.context.ApplicationListener=\\\norg.springframework.boot.context.config.ConfigFileApplicationListener,\\\n\n# Run Listeners\norg.springframework.boot.SpringApplicationRunListener=\\\norg.springframework.boot.context.event.EventPublishingRunListener\n\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u7ee7\u7eed\u8fdb\u5165springboot\u542f\u52a8\u9636\u6bb5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    public ConfigurableApplicationContext run(String... args) {\n        StopWatch stopWatch = new StopWatch();\n        stopWatch.start();\n        ConfigurableApplicationContext context = null;\n        Collection<SpringBootExceptionReporter> exceptionReporters = new ArrayList<>();\n        configureHeadlessProperty();\n        SpringApplicationRunListeners listeners = getRunListeners(args);\n        listeners.starting();\n        try {\n            ApplicationArguments applicationArguments = new DefaultApplicationArguments(\n                    args);\n            ConfigurableEnvironment environment = prepareEnvironment(listeners,\n                    applicationArguments);\n            configureIgnoreBeanInfo(environment);\n            Banner printedBanner = printBanner(environment);\n            context = createApplicationContext();\n            exceptionReporters = getSpringFactoriesInstances(\n                    SpringBootExceptionReporter.class,\n                    new Class[] { ConfigurableApplicationContext.class }, context);\n            prepareContext(context, environment, listeners, applicationArguments,\n                    printedBanner);\n            refreshContext(context);\n            afterRefresh(context, applicationArguments);\n            stopWatch.stop();\n            if (this.logStartupInfo) {\n                new StartupInfoLogger(this.mainApplicationClass)\n                        .logStarted(getApplicationLog(), stopWatch);\n            }\n            listeners.started(context);\n            callRunners(context, applicationArguments);\n        }\n        catch (Throwable ex) {\n            handleRunFailure(context, ex, exceptionReporters, listeners);\n            throw new IllegalStateException(ex);\n        }\n\n        try {\n            listeners.running(context);\n        }\n        catch (Throwable ex) {\n            handleRunFailure(context, ex, exceptionReporters, null);\n            throw new IllegalStateException(ex);\n        }\n        return context;\n    }\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"ConfigurableEnvironment environment = prepareEnvironment(listeners,\n                    applicationArguments);\nprepareContext(context, environment, listeners, applicationArguments,\n                    printedBanner);\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u4e0a\u9762\u8fd9\u4e24\u6bb5\u4ee3\u7801\u5c31\u662f\u88c5\u8f7d\u73af\u5883\u7684\u4ee3\u7801\n\u5728",(0,t.jsx)(e.code,{children:"prepareEnvironment"}),"\u65b9\u6cd5\u4e2d\u521d\u59cb\u5316\u4e86",(0,t.jsx)(e.code,{children:"environment"}),"\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    private ConfigurableEnvironment getOrCreateEnvironment() {\n        if (this.environment != null) {\n            return this.environment;\n        }\n        switch (this.webApplicationType) {\n        case SERVLET:\n            return new StandardServletEnvironment();\n        case REACTIVE:\n            return new StandardReactiveWebEnvironment();\n        default:\n            return new StandardEnvironment();\n        }\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56e0\u4e3a\u6211\u4eecservlet\u670d\u52a1\uff0c\u6240\u4ee5",(0,t.jsx)(e.code,{children:"Environment"}),"\u4e3a",(0,t.jsx)(e.code,{children:"StandardServletEnvironment"}),"\uff0c\u5e76\u4e14\u5728\u7236\u7c7b\u7684\u7684\u6784\u9020\u5176\u4e2d\u6267\u884c\u4e86",(0,t.jsx)(e.code,{children:"customizePropertySources"}),"\u65b9\u6cd5"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    public AbstractEnvironment() {\n        customizePropertySources(this.propertySources);\n        if (logger.isDebugEnabled()) {\n            logger.debug("Initialized " + getClass().getSimpleName() + " with PropertySources " + this.propertySources);\n        }\n    }\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    protected void customizePropertySources(MutablePropertySources propertySources) {\n        propertySources.addLast(new StubPropertySource(SERVLET_CONFIG_PROPERTY_SOURCE_NAME));\n        propertySources.addLast(new StubPropertySource(SERVLET_CONTEXT_PROPERTY_SOURCE_NAME));\n        if (JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable()) {\n            propertySources.addLast(new JndiPropertySource(JNDI_PROPERTY_SOURCE_NAME));\n        }\n        super.customizePropertySources(propertySources);\n    }\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    @Override\n    protected void customizePropertySources(MutablePropertySources propertySources) {\n        propertySources.addLast(new MapPropertySource(SYSTEM_PROPERTIES_PROPERTY_SOURCE_NAME, getSystemProperties()));\n        propertySources.addLast(new SystemEnvironmentPropertySource(SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME, getSystemEnvironment()));\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5230\u8fd9\u91cc,\u6211\u4eec\u5f97\u5230\u4e86",(0,t.jsx)(e.code,{children:"StandardServletEnvironment"}),"\u5e76\u4e14\u52a0\u8f7d\u7684\u914d\u7f6e\u987a\u5e8f\u662f"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"servletConfigInitParams"}),"\n",(0,t.jsx)(e.li,{children:"servletContextInitParams"}),"\n",(0,t.jsx)(e.li,{children:"jndiProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemEnvironment"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    protected void configureEnvironment(ConfigurableEnvironment environment,\n            String[] args) {\n        configurePropertySources(environment, args);\n        configureProfiles(environment, args);\n    }\n\n    protected void configurePropertySources(ConfigurableEnvironment environment,\n            String[] args) {\n        MutablePropertySources sources = environment.getPropertySources();\n        if (this.defaultProperties != null && !this.defaultProperties.isEmpty()) {\n            sources.addLast(\n                    new MapPropertySource("defaultProperties", this.defaultProperties));\n        }\n        if (this.addCommandLineProperties && args.length > 0) {\n            String name = CommandLinePropertySource.COMMAND_LINE_PROPERTY_SOURCE_NAME;\n            if (sources.contains(name)) {\n                PropertySource<?> source = sources.get(name);\n                CompositePropertySource composite = new CompositePropertySource(name);\n                composite.addPropertySource(new SimpleCommandLinePropertySource(\n                        "springApplicationCommandLineArgs", args));\n                composite.addPropertySource(source);\n                sources.replace(name, composite);\n            }\n            else {\n                sources.addFirst(new SimpleCommandLinePropertySource(args));\n            }\n        }\n    }\n\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u800c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53c8\u52a0\u5165\u4e86",(0,t.jsx)(e.code,{children:"defaultProperties"}),"\u914d\u7f6e\u5728\u6700\u540e\u9762\u4ee5\u53ca",(0,t.jsx)(e.code,{children:"SimpleCommandLinePropertySource"}),"\u547d\u4ee4\u884c\u53c2\u6570\u5728\u6700\u524d\u9762\u3002\u56e0\u6b64\uff0c\u73b0\u5728\u7684\u987a\u5e8f\u662f"]}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"SimpleCommandLinePropertySourcem\u547d\u4ee4\u884c\u914d\u7f6e"}),"\n",(0,t.jsx)(e.li,{children:"servletConfigInitParams"}),"\n",(0,t.jsx)(e.li,{children:"servletContextInitParams"}),"\n",(0,t.jsx)(e.li,{children:"jndiProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemEnvironment"}),"\n",(0,t.jsx)(e.li,{children:"defaultProperties"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    public void environmentPrepared(ConfigurableEnvironment environment) {\n        for (SpringApplicationRunListener listener : this.listeners) {\n            listener.environmentPrepared(environment);\n        }\n    }\n\n    @Override\n    public void environmentPrepared(ConfigurableEnvironment environment) {\n        this.initialMulticaster.multicastEvent(new ApplicationEnvironmentPreparedEvent(\n                this.application, this.args, environment));\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728\u8fd9\u91cc",(0,t.jsx)(e.code,{children:"SpringApplicationRunListener"}),"\u4e3a",(0,t.jsx)(e.code,{children:"EventPublishingRunListener"}),",\u6765\u81ea\u4e8e\u524d\u9762\u7684",(0,t.jsx)(e.code,{children:"getRunListeners"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    private SpringApplicationRunListeners getRunListeners(String[] args) {\n        Class<?>[] types = new Class<?>[] { SpringApplication.class, String[].class };\n        return new SpringApplicationRunListeners(logger, getSpringFactoriesInstances(\n                SpringApplicationRunListener.class, types, this, args));\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u800c\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f20\u5165\u4e86this\uff0c\u6240\u4ee5\u6700\u7ec8",(0,t.jsx)(e.code,{children:"initialMulticaster"}),"\u4e2d\u7684listener\u4e3aapplication\u4e2d\u7684listener"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    public EventPublishingRunListener(SpringApplication application, String[] args) {\n        this.application = application;\n        this.args = args;\n        this.initialMulticaster = new SimpleApplicationEventMulticaster();\n        for (ApplicationListener<?> listener : application.getListeners()) {\n            this.initialMulticaster.addApplicationListener(listener);\n        }\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u6240\u4ee5\u8fd9\u91cc\u4f1a\u53d1\u9001\u4e2a\u4e8b\u4ef6\u901a\u77e5\uff0c\u6765\u5230\u4e86",(0,t.jsx)(e.code,{children:"ConfigFileApplicationListener"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    @Override\n    public void onApplicationEvent(ApplicationEvent event) {\n        if (event instanceof ApplicationEnvironmentPreparedEvent) {\n            onApplicationEnvironmentPreparedEvent(\n                    (ApplicationEnvironmentPreparedEvent) event);\n        }\n        if (event instanceof ApplicationPreparedEvent) {\n            onApplicationPreparedEvent(event);\n        }\n    }\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    private void onApplicationEnvironmentPreparedEvent(\n            ApplicationEnvironmentPreparedEvent event) {\n        List<EnvironmentPostProcessor> postProcessors = loadPostProcessors();\n        postProcessors.add(this);\n        AnnotationAwareOrderComparator.sort(postProcessors);\n        for (EnvironmentPostProcessor postProcessor : postProcessors) {\n            postProcessor.postProcessEnvironment(event.getEnvironment(),\n                    event.getSpringApplication());\n        }\n    }\n\n    List<EnvironmentPostProcessor> loadPostProcessors() {\n        return SpringFactoriesLoader.loadFactories(EnvironmentPostProcessor.class,\n                getClass().getClassLoader());\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728\u8fd9\u91cc\u6709\u6709\u4e2a\u6269\u5c55\u70b9\uff0c\u901a\u8fc7\u83b7\u53d6",(0,t.jsx)(e.code,{children:"spring.factories"}),"\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684",(0,t.jsx)(e.code,{children:"EnvironmentPostProcessor"}),"\u7c7b\u8c03\u7528",(0,t.jsx)(e.code,{children:"postProcessEnvironment"}),"\u65b9\u6cd5\uff0c\u81ea\u5df1\u672c\u8eab\u4e5f\u52a0\u5165\u5230\u4e86",(0,t.jsx)(e.code,{children:"postProcessors"}),"\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u6700\u7ec8\u53c8\u4f1a\u8d70\u5230",(0,t.jsx)(e.code,{children:"postProcessors"}),"\u65b9\u6cd5"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"    @Override\n    public void postProcessEnvironment(ConfigurableEnvironment environment,\n            SpringApplication application) {\n        addPropertySources(environment, application.getResourceLoader());\n    }\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    protected void addPropertySources(ConfigurableEnvironment environment,\n            ResourceLoader resourceLoader) {\n        RandomValuePropertySource.addToEnvironment(environment);\n        new Loader(environment, resourceLoader).load();\n    }\n\n    public static void addToEnvironment(ConfigurableEnvironment environment) {\n        environment.getPropertySources().addAfter(\n                StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n                new RandomValuePropertySource(RANDOM_PROPERTY_SOURCE_NAME));\n        logger.trace("RandomValuePropertySource add to Environment");\n    }\n\n        public void load() {\n            this.profiles = new LinkedList<>();\n            this.processedProfiles = new LinkedList<>();\n            this.activatedProfiles = false;\n            this.loaded = new LinkedHashMap<>();\n            initializeProfiles();\n            while (!this.profiles.isEmpty()) {\n                Profile profile = this.profiles.poll();\n                if (profile != null && !profile.isDefaultProfile()) {\n                    addProfileToEnvironment(profile.getName());\n                }\n                load(profile, this::getPositiveProfileFilter,\n                        addToLoaded(MutablePropertySources::addLast, false));\n                this.processedProfiles.add(profile);\n            }\n            resetEnvironmentProfiles(this.processedProfiles);\n            load(null, this::getNegativeProfileFilter,\n                    addToLoaded(MutablePropertySources::addFirst, true));\n            addLoadedPropertySources();\n        }\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u5728\u8fd9\u91cc\uff0c\u53c8\u5c06random\u914d\u7f6e\u52a0\u5165\u5230systemEnvironment\u4e4b\u540e\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f\u6210\u4e86\ndefaultProperties"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"SimpleCommandLinePropertySourcem\u547d\u4ee4\u884c\u914d\u7f6e"}),"\n",(0,t.jsx)(e.li,{children:"servletConfigInitParams"}),"\n",(0,t.jsx)(e.li,{children:"servletContextInitParams"}),"\n",(0,t.jsx)(e.li,{children:"jndiProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemProperties"}),"\n",(0,t.jsx)(e.li,{children:"systemEnvironment"}),"\n",(0,t.jsx)(e.li,{children:"RandomValuePropertySource"}),"\n",(0,t.jsx)(e.li,{children:"defaultProperties"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u8def\u5f84"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"classpath:/,classpath:/config/,file:./,file:./config/\nspring.config.location=\nspring.config.additional-location="}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"\u6587\u4ef6\u540d\u9ed8\u8ba4\u4e3aapplication"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"\u5982\u679c\u914d\u7f6e\u4e86spring.config.name=\n\u6587\u4ef6\u540d\u5219\u4e3aspring.config.name\u914d\u7f6e\u7684\u540d\u79f0"}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u5e76\u4e14\u901a\u8fc7",(0,t.jsx)(e.code,{children:"load"}),"\u65b9\u6cd5\u5c06\u4e0a\u8ff0\u8def\u5f84\u548c\u6587\u4ef6\u540d\u7684\u6587\u4ef6\u52a0\u5165\u5230",(0,t.jsx)(e.code,{children:"environment\u4e2d"}),"\uff0c\u5982\u679c\u914d\u7f6e\u4e86",(0,t.jsx)(e.code,{children:"spring.profiles.active"}),'\uff0c\u5e76\u4e14\u52a0\u8f7dprefix + "-" + profile + fileExtension\u6587\u4ef6\uff0c\u4e5f\u5c31\u662f',(0,t.jsx)(e.code,{children:"application-<spring.profiles.active>.properties"}),"\u548c",(0,t.jsx)(e.code,{children:"y"}),"\u6587\u4ef6"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'        private void load(Profile profile, DocumentFilterFactory filterFactory,\n                DocumentConsumer consumer) {\n            getSearchLocations().forEach((location) -> {\n                boolean isFolder = location.endsWith("/");\n                Set<String> names = isFolder ? getSearchNames() : NO_SEARCH_NAMES;\n                names.forEach(\n                        (name) -> load(location, name, profile, filterFactory, consumer));\n            });\n        }\n\n        private void load(String location, String name, Profile profile,\n                DocumentFilterFactory filterFactory, DocumentConsumer consumer) {\n            if (!StringUtils.hasText(name)) {\n                for (PropertySourceLoader loader : this.propertySourceLoaders) {\n                    if (canLoadFileExtension(loader, location)) {\n                        load(loader, location, profile,\n                                filterFactory.getDocumentFilter(profile), consumer);\n                        return;\n                    }\n                }\n            }\n            Set<String> processed = new HashSet<>();\n            for (PropertySourceLoader loader : this.propertySourceLoaders) {\n                for (String fileExtension : loader.getFileExtensions()) {\n                    if (processed.add(fileExtension)) {\n                        loadForFileExtension(loader, location + name, "." + fileExtension,\n                                profile, filterFactory, consumer);\n                    }\n                }\n            }\n        }\n\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728\u8fd9\u91cc\u901a\u8fc7",(0,t.jsx)(e.code,{children:"this.propertySourceLoaders"}),"\u904d\u5386\u5224\u65ad\u662f\u5426\u7b26\u5408\u8be5SourceLoader\u7684\u540e\u7f00\uff0c\u5982\u679c\u7b26\u5408\uff0c\u5c31\u5c06\u8d44\u6e90\u52a0\u8f7d\u8fdb\u6765,\u800c",(0,t.jsx)(e.code,{children:"propertySourceLoaders"}),"\u6765\u81ea\u4e8e",(0,t.jsx)(e.code,{children:"Loader"}),"\u6784\u9020\u65b9\u6cd5"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"        Loader(ConfigurableEnvironment environment, ResourceLoader resourceLoader) {\n            this.environment = environment;\n            this.resourceLoader = (resourceLoader != null) ? resourceLoader\n                    : new DefaultResourceLoader();\n            this.propertySourceLoaders = SpringFactoriesLoader.loadFactories(\n                    PropertySourceLoader.class, getClass().getClassLoader());\n        }\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# PropertySource Loaders\norg.springframework.boot.env.PropertySourceLoader=\\\norg.springframework.boot.env.PropertiesPropertySourceLoader,\\\norg.springframework.boot.env.YamlPropertySourceLoader\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u56e0\u6b64\u53ef\u4ee5\u52a0\u8f7d",(0,t.jsx)(e.code,{children:"yml"}),"\u6587\u4ef6\u548c",(0,t.jsx)(e.code,{children:"properties"}),"\u6587\u4ef6"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"        private void addLoadedPropertySources() {\n            MutablePropertySources destination = this.environment.getPropertySources();\n            List<MutablePropertySources> loaded = new ArrayList<>(this.loaded.values());\n            Collections.reverse(loaded);\n            String lastAdded = null;\n            Set<String> added = new HashSet<>();\n            for (MutablePropertySources sources : loaded) {\n                for (PropertySource<?> source : sources) {\n                    if (added.add(source.getName())) {\n                        addLoadedPropertySource(destination, lastAdded, source);\n                        lastAdded = source.getName();\n                    }\n                }\n            }\n        }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u6700\u7ec8\u653e\u5165\u5230\u4e86",(0,t.jsx)(e.code,{children:"environment"})]}),"\n",(0,t.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u770b\u4e0bSpring cloud config"}),"\n",(0,t.jsxs)(e.p,{children:["\u5728",(0,t.jsx)(e.code,{children:"spring-cloud-context"}),"\u7684jar\u4e2d\uff0c",(0,t.jsx)(e.code,{children:"spring.factories"}),"\u4e2d\u5f15\u5165\u4e86\u4e2a",(0,t.jsx)(e.code,{children:"BootstrapApplicationListener"}),"\n\u5e76\u4e14\u8be5\u914d\u7f6e\u4f18\u5148\u4e8e",(0,t.jsx)(e.code,{children:"ConfigFileApplicationListener"}),"\uff0c\u56e0\u6b64\u5982\u679c\u6211\u4eec\u5f15\u5165\u4e86springcloud\u7ec4\u4ef6\uff0c\u90a3\u4e48\n\u4e8b\u4ef6\u76d1\u542c\u4f1a\u4f18\u5148\u8d70",(0,t.jsx)(e.code,{children:"BootstrapApplicationListener"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Application Listeners\norg.springframework.context.ApplicationListener=\\\norg.springframework.cloud.bootstrap.BootstrapApplicationListener,\\\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    @Override\n    public void onApplicationEvent(ApplicationEnvironmentPreparedEvent event) {\n        ConfigurableEnvironment environment = event.getEnvironment();\n        if (!environment.getProperty("spring.cloud.bootstrap.enabled", Boolean.class,\n                true)) {\n            return;\n        }\n        // don\'t listen to events in a bootstrap context\n        if (environment.getPropertySources().contains(BOOTSTRAP_PROPERTY_SOURCE_NAME)) {\n            return;\n        }\n        ConfigurableApplicationContext context = null;\n        String configName = environment\n                .resolvePlaceholders("${spring.cloud.bootstrap.name:bootstrap}");\n        for (ApplicationContextInitializer<?> initializer : event.getSpringApplication()\n                .getInitializers()) {\n            if (initializer instanceof ParentContextApplicationContextInitializer) {\n                context = findBootstrapContext(\n                        (ParentContextApplicationContextInitializer) initializer,\n                        configName);\n            }\n        }\n        if (context == null) {\n            context = bootstrapServiceContext(environment, event.getSpringApplication(),\n                    configName);\n        }\n        apply(context, event.getSpringApplication(), environment);\n    }\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    private ConfigurableApplicationContext bootstrapServiceContext(\n            ConfigurableEnvironment environment, final SpringApplication application,\n            String configName) {\n        StandardEnvironment bootstrapEnvironment = new StandardEnvironment();\n        MutablePropertySources bootstrapProperties = bootstrapEnvironment\n                .getPropertySources();\n        for (PropertySource<?> source : bootstrapProperties) {\n            bootstrapProperties.remove(source.getName());\n        }\n        String configLocation = environment\n                .resolvePlaceholders("${spring.cloud.bootstrap.location:}");\n        Map<String, Object> bootstrapMap = new HashMap<>();\n        bootstrapMap.put("spring.config.name", configName);\n        // if an app (or test) uses spring.main.web-application-type=reactive, bootstrap will fail\n        // force the environment to use none, because if though it is set below in the builder\n        // the environment overrides it\n        bootstrapMap.put("spring.main.web-application-type", "none");\n        if (StringUtils.hasText(configLocation)) {\n            bootstrapMap.put("spring.config.location", configLocation);\n        }\n        bootstrapProperties.addFirst(\n                new MapPropertySource(BOOTSTRAP_PROPERTY_SOURCE_NAME, bootstrapMap));\n        for (PropertySource<?> source : environment.getPropertySources()) {\n            if (source instanceof StubPropertySource) {\n                continue;\n            }\n            bootstrapProperties.addLast(source);\n        }\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        // Use names and ensure unique to protect against duplicates\n        List<String> names = new ArrayList<>(SpringFactoriesLoader\n                .loadFactoryNames(BootstrapConfiguration.class, classLoader));\n        for (String name : StringUtils.commaDelimitedListToStringArray(\n                environment.getProperty("spring.cloud.bootstrap.sources", ""))) {\n            names.add(name);\n        }\n        // TODO: is it possible or sensible to share a ResourceLoader?\n        SpringApplicationBuilder builder = new SpringApplicationBuilder()\n                .profiles(environment.getActiveProfiles()).bannerMode(Mode.OFF)\n                .environment(bootstrapEnvironment)\n                // Don\'t use the default properties in this builder\n                .registerShutdownHook(false).logStartupInfo(false)\n                .web(WebApplicationType.NONE);\n        final SpringApplication builderApplication = builder.application();\n        if(builderApplication.getMainApplicationClass() == null){\n            // gh_425:\n            // SpringApplication cannot deduce the MainApplicationClass here\n            // if it is booted from SpringBootServletInitializer due to the\n            // absense of the "main" method in stackTraces.\n            // But luckily this method\'s second parameter "application" here\n            // carries the real MainApplicationClass which has been explicitly\n            // set by SpringBootServletInitializer itself already.\n            builder.main(application.getMainApplicationClass());\n        }\n        if (environment.getPropertySources().contains("refreshArgs")) {\n            // If we are doing a context refresh, really we only want to refresh the\n            // Environment, and there are some toxic listeners (like the\n            // LoggingApplicationListener) that affect global static state, so we need a\n            // way to switch those off.\n            builderApplication\n                    .setListeners(filterListeners(builderApplication.getListeners()));\n        }\n        List<Class<?>> sources = new ArrayList<>();\n        for (String name : names) {\n            Class<?> cls = ClassUtils.resolveClassName(name, null);\n            try {\n                cls.getDeclaredAnnotations();\n            }\n            catch (Exception e) {\n                continue;\n            }\n            sources.add(cls);\n        }\n        AnnotationAwareOrderComparator.sort(sources);\n        builder.sources(sources.toArray(new Class[sources.size()]));\n        final ConfigurableApplicationContext context = builder.run();\n        // gh-214 using spring.application.name=bootstrap to set the context id via\n        // `ContextIdApplicationContextInitializer` prevents apps from getting the actual\n        // spring.application.name\n        // during the bootstrap phase.\n        context.setId("bootstrap");\n        // Make the bootstrap context a parent of the app context\n        addAncestorInitializer(application, context);\n        // It only has properties in it now that we don\'t want in the parent so remove\n        // it (and it will be added back later)\n        bootstrapProperties.remove(BOOTSTRAP_PROPERTY_SOURCE_NAME);\n        mergeDefaultProperties(environment.getPropertySources(), bootstrapProperties);\n        return context;\n    }\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u8fd9\u91cc\u4e3b\u8981\u505a\u7684\u4e8b\u60c5\u6709\u4e24\u70b9"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"\u521b\u5efaEnvironment\u5bf9\u8c61\uff0c\u8bbe\u7f6espring.config.name=bootstrap"}),"\n",(0,t.jsx)(e.li,{children:"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684SpringApplication\u542f\u52a8\u5668\uff0c\u5e76\u4e14\u8bbe\u7f6esources\u4e3a\u6269\u5c55\u70b9\u4e0b\u7684BootstrapConfiguration\u914d\u7f6e\u7c7b"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"List<String> names = new ArrayList<>(SpringFactoriesLoader\n                .loadFactoryNames(BootstrapConfiguration.class, classLoader));\n\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u7b80\u5355\u7684\u5c31\u662f\u53ef\u4ee5\u7406\u89e3\u4e3a\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u542f\u52a8\u5668\uff0c\u542f\u52a8\u7c7b\u4e3aBootstrapConfiguration\u914d\u7f6e\u7684\u7c7b\u3002\u5e76\u4e14\u901a\u8fc7run\u65b9\u6cd5\u5f97\u5230\u4e86\u521d\u59cb\u5316\u540e\u7684BeanFactory\u5bb9\u5668\u5e76\u4e14\u5c06contenxt\u5c01\u88c5\u6210AncestorInitializer\u52a0\u5165\u5230\u4e86\u6211\u4eec\u81ea\u5df1\u7684SpringApplication\u4e2d"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"application.addInitializers(new AncestorInitializer(context));\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u800c\u5728",(0,t.jsx)(e.code,{children:"apply"}),"\u65b9\u6cd5\u4e2d,\u83b7\u53d6\u4e86",(0,t.jsx)(e.code,{children:"ApplicationContextInitializer"}),"\u7c7b\u578b\u7684\u6240\u6709\u5bf9\u8c61\u52a0\u5165\u5230\u4e86\u6211\u4eec\u5f53\u524d\u7684",(0,t.jsx)(e.code,{children:"SpringApplication"}),"\u4e2d"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    private void apply(ConfigurableApplicationContext context,\n            SpringApplication application, ConfigurableEnvironment environment) {\n        @SuppressWarnings("rawtypes")\n        List<ApplicationContextInitializer> initializers = getOrderedBeansOfType(context,\n                ApplicationContextInitializer.class);\n        application.addInitializers(initializers\n                .toArray(new ApplicationContextInitializer[initializers.size()]));\n        addBootstrapDecryptInitializer(application);\n    }\n\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728",(0,t.jsx)(e.code,{children:"spring-cloud-context"}),"\u5305\u4e2d\uff0c",(0,t.jsx)(e.code,{children:"spring.factories"}),"\u914d\u7f6e\u4e0b\u9762\u8fd9\u4e2a\u7c7b"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"org.springframework.cloud.bootstrap.BootstrapConfiguration=\\\norg.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration,\\\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5230\u8fd9\u91cc\u6211\u4eec\u542f\u52a8\u7c7b",(0,t.jsx)(e.code,{children:"SpringApplication"}),"\u4e2d\u5df2\u7ecf\u6709\u4e86",(0,t.jsx)(e.code,{children:"AncestorInitializer,PropertySourceBootstrapConfiguration"}),"\u4e24\u4e2aApplicationContextInitializer"]}),"\n",(0,t.jsx)(e.p,{children:"\u8fd4\u56de\u5230\u6211\u4eec\u542f\u52a8\u7c7b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    private void prepareContext(ConfigurableApplicationContext context,\n            ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,\n            ApplicationArguments applicationArguments, Banner printedBanner) {\n        context.setEnvironment(environment);\n        postProcessApplicationContext(context);\n        applyInitializers(context);\n        listeners.contextPrepared(context);\n        if (this.logStartupInfo) {\n            logStartupInfo(context.getParent() == null);\n            logStartupProfileInfo(context);\n        }\n\n        // Add boot specific singleton beans\n        context.getBeanFactory().registerSingleton("springApplicationArguments",\n                applicationArguments);\n        if (printedBanner != null) {\n            context.getBeanFactory().registerSingleton("springBootBanner", printedBanner);\n        }\n\n        // Load the sources\n        Set<Object> sources = getAllSources();\n        Assert.notEmpty(sources, "Sources must not be empty");\n        load(context, sources.toArray(new Object[0]));\n        listeners.contextLoaded(context);\n    }\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    protected void applyInitializers(ConfigurableApplicationContext context) {\n        for (ApplicationContextInitializer initializer : getInitializers()) {\n            Class<?> requiredType = GenericTypeResolver.resolveTypeArgument(\n                    initializer.getClass(), ApplicationContextInitializer.class);\n            Assert.isInstanceOf(requiredType, context, "Unable to call initializer.");\n            initializer.initialize(context);\n        }\n    }\n\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5728\u8fd9\u91cc\u5c31\u4f1a\u8c03\u7528\u5230",(0,t.jsx)(e.code,{children:"ApplicationContextInitializer.initialize"}),"\u65b9\u6cd5\n\u5c31\u4f1a\u5148\u6765\u5230",(0,t.jsx)(e.code,{children:"AncestorInitializer"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"        @Override\n        public void initialize(ConfigurableApplicationContext context) {\n            while (context.getParent() != null && context.getParent() != context) {\n                context = (ConfigurableApplicationContext) context.getParent();\n            }\n            reorderSources(context.getEnvironment());\n            new ParentContextApplicationContextInitializer(this.parent)\n                    .initialize(context);\n        }\n\n    @Override\n    public void initialize(ConfigurableApplicationContext applicationContext) {\n        if (applicationContext != this.parent) {\n            applicationContext.setParent(this.parent);\n            applicationContext.addApplicationListener(EventPublisher.INSTANCE);\n        }\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5c06BootStrap\u521b\u5efa\u7684\u5bb9\u5668\u4f5c\u4e3a\u6211\u4eec\u5f53\u524d\u5bb9\u5668\u7684\u7236\u5bb9\u5668\uff0c\u5e76\u4e14\u7236\u5bb9\u5668\u4e2d\u7684\u5bf9\u8c61\u90fd\u521d\u59cb\u5316\u597d\u4e86\uff0c",(0,t.jsx)(e.code,{children:"PropertySourceBootstrapConfiguration"}),"\u7684\u4e5f\u521d\u59cb\u5316\u597d\u4e86,\u5e76\u4e14\u8be5",(0,t.jsx)(e.code,{children:"ApplicationContextInitializer"}),"\u52a0\u5165\u5230\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u542f\u52a8\u7c7b\u91cc\u9762\uff0c\u56e0\u6b64\u4f1a\u8c03\u7528\u521d\u59cb\u5316\u597d\u4e86\u7684",(0,t.jsx)(e.code,{children:"PropertySourceBootstrapConfiguration.initialize"}),",\u800c",(0,t.jsx)(e.code,{children:"PropertySourceLocator"}),"\u662f\u6ce8\u5165\u8fdb\u6765\u7684"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"# Bootstrap components\norg.springframework.cloud.bootstrap.BootstrapConfiguration=\\\norg.springframework.cloud.config.client.ConfigServiceBootstrapConfiguration,\\\n\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    @Bean\n    @ConditionalOnMissingBean(ConfigServicePropertySourceLocator.class)\n    @ConditionalOnProperty(value = "spring.cloud.config.enabled", matchIfMissing = true)\n    public ConfigServicePropertySourceLocator configServicePropertySource(ConfigClientProperties properties) {\n        ConfigServicePropertySourceLocator locator = new ConfigServicePropertySourceLocator(\n                properties);\n        return locator;\n    }\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    @Autowired(required = false)\n    private List<PropertySourceLocator> propertySourceLocators = new ArrayList<>();\n\n    @Override\n    public void initialize(ConfigurableApplicationContext applicationContext) {\n        CompositePropertySource composite = new CompositePropertySource(\n                BOOTSTRAP_PROPERTY_SOURCE_NAME);\n        AnnotationAwareOrderComparator.sort(this.propertySourceLocators);\n        boolean empty = true;\n        ConfigurableEnvironment environment = applicationContext.getEnvironment();\n        for (PropertySourceLocator locator : this.propertySourceLocators) {\n            PropertySource<?> source = null;\n            source = locator.locate(environment);\n            if (source == null) {\n                continue;\n            }\n            logger.info("Located property source: " + source);\n            composite.addPropertySource(source);\n            empty = false;\n        }\n        if (!empty) {\n            MutablePropertySources propertySources = environment.getPropertySources();\n            String logConfig = environment.resolvePlaceholders("${logging.config:}");\n            LogFile logFile = LogFile.get(environment);\n            if (propertySources.contains(BOOTSTRAP_PROPERTY_SOURCE_NAME)) {\n                propertySources.remove(BOOTSTRAP_PROPERTY_SOURCE_NAME);\n            }\n            insertPropertySources(propertySources, composite);\n            reinitializeLoggingSystem(environment, logConfig, logFile);\n            setLogLevels(applicationContext, environment);\n            handleIncludedProfiles(environment);\n        }\n    }\n\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u56e0\u6b64\u6700\u7ec8\u4f1a\u6765\u5230",(0,t.jsx)(e.code,{children:"ConfigServicePropertySourceLocator"}),"\u4e2d"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'    private Environment getRemoteEnvironment(RestTemplate restTemplate,\n            ConfigClientProperties properties, String label, String state) {\n        String path = "/{name}/{profile}";\n        String name = properties.getName();\n        String profile = properties.getProfile();\n        String token = properties.getToken();\n        int noOfUrls = properties.getUri().length;\n        if (noOfUrls > 1) {\n            logger.info("Multiple Config Server Urls found listed.");\n        }\n\n        Object[] args = new String[] { name, profile };\n        if (StringUtils.hasText(label)) {\n            if (label.contains("/")) {\n                label = label.replace("/", "(_)");\n            }\n            args = new String[] { name, profile, label };\n            path = path + "/{label}";\n        }\n        ResponseEntity<Environment> response = null;\n\n        for (int i = 0; i < noOfUrls; i++) {\n            Credentials credentials = properties.getCredentials(i);\n            String uri = credentials.getUri();\n            String username = credentials.getUsername();\n            String password = credentials.getPassword();\n\n            logger.info("Fetching config from server at : " + uri);\n\n            try {\n                HttpHeaders headers = new HttpHeaders();\n                addAuthorizationToken(properties, headers, username, password);\n                if (StringUtils.hasText(token)) {\n                    headers.add(TOKEN_HEADER, token);\n                }\n                if (StringUtils.hasText(state) && properties.isSendState()) {\n                    headers.add(STATE_HEADER, state);\n                }\n\n                final HttpEntity<Void> entity = new HttpEntity<>((Void) null, headers);\n                response = restTemplate.exchange(uri + path, HttpMethod.GET, entity,\n                        Environment.class, args);\n            }\n            catch (HttpClientErrorException e) {\n                if (e.getStatusCode() != HttpStatus.NOT_FOUND) {\n                    throw e;\n                }\n            }\n            catch (ResourceAccessException e) {\n                logger.info("Connect Timeout Exception on Url - " + uri\n                        + ". Will be trying the next url if available");\n                if (i == noOfUrls - 1)\n                    throw e;\n                else\n                    continue;\n            }\n\n            if (response == null || response.getStatusCode() != HttpStatus.OK) {\n                return null;\n            }\n\n            Environment result = response.getBody();\n            return result;\n        }\n\n        return null;\n    }\n\n'})}),"\n",(0,t.jsx)(e.p,{children:"\u53ef\u4ee5\u770b\u5230\u6700\u540e\u5c31\u662f\u8c03\u7528\u670d\u52a1\u7aef\u7684\u63a5\u53e3\u83b7\u53d6\u6700\u65b0\u7684\u914d\u7f6e\u3002\n\u800c\u8fd9\u4e2a\u5916\u90e8\u914d\u7f6e\u6700\u540e\u4f1a\u653e\u5230systemEnvironment\u4e4b\u524d\uff0c\u56e0\u6b64\u5c31\u4f1a\u8986\u76d6\u672c\u5730\u914d\u7f6e\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u63a7\u5236"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'@ConfigurationProperties("spring.cloud.config")\npublic class PropertySourceBootstrapProperties {\n\n    /**\n     * Flag to indicate that the external properties should override system properties.\n     * Default true.\n     */\n    private boolean overrideSystemProperties = true;\n\n    /**\n     * Flag to indicate that {@link #isOverrideSystemProperties()\n     * systemPropertiesOverride} can be used. Set to false to prevent users from changing\n     * the default accidentally. Default true.\n     */\n    private boolean allowOverride = true;\n\n    /**\n     * Flag to indicate that when {@link #setAllowOverride(boolean) allowOverride} is\n     * true, external properties should take lowest priority, and not override any\n     * existing property sources (including local config files). Default false.\n     */\n    private boolean overrideNone = false;\n\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"if (!remoteProperties.isAllowOverride() || (!remoteProperties.isOverrideNone()\n                && remoteProperties.isOverrideSystemProperties())) {\n            propertySources.addFirst(composite);\n            return;\n        }\n        if (remoteProperties.isOverrideNone()) {\n            propertySources.addLast(composite);\n            return;\n        }\n        if (propertySources\n                .contains(StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME)) {\n            if (!remoteProperties.isOverrideSystemProperties()) {\n                propertySources.addAfter(\n                        StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n                        composite);\n            }\n            else {\n                propertySources.addBefore(\n                        StandardEnvironment.SYSTEM_ENVIRONMENT_PROPERTY_SOURCE_NAME,\n                        composite);\n            }\n        }\n        else {\n            propertySources.addLast(composite);\n        }\n\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"\u603b\u7ed3"})}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:["\u6269\u5c55\u70b9\n1.1 ",(0,t.jsx)(e.code,{children:"EnvironmentPostProcessor"}),"\n\u5bf9\u73af\u5883\u505a\u5904\u7406\n1.2 ",(0,t.jsx)(e.code,{children:"PropertySourceLoader"}),"\n\u89e3\u6790\u4e0d\u540c\u7684\u683c\u5f0f\u7684\u6587\u4ef6\n1.2 ",(0,t.jsx)(e.code,{children:"ApplicationListener"}),"\nspring-cloud\u5305\u4e2d\u901a\u8fc7\u65b0\u589e\u6269\u5c55BootstrapApplicationListener\n1.3 ",(0,t.jsx)(e.code,{children:"BootstrapConfiguration"}),"\n\u901a\u8fc7\u6269\u5c55\u70b9\u52a0\u8f7d\u542f\u52a8\u7c7b"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsx)(e.p,{children:"\u6587\u4ef6\u52a0\u8f7d\u8fc7\u7a0b\n\u901a\u8fc7ApplicationListener\u4e8b\u4ef6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684SpringApliction\u542f\u52a8\u7c7b\u5c06BootstrapConfiguration\u6269\u5c55\u7c7b\u4f5c\u4e3a\u542f\u52a8\u914d\u7f6e\u7c7b\uff0c\u7136\u540e\u83b7\u5f97\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u4e86\u7684BootStrap\u5bb9\u5668\uff0c\u5c06\u8be5\u5bb9\u5668\u5c01\u88c5\u6210AncestorInitializer\u7c7b\u52a0\u5165\u5230\u6211\u4eec\u81ea\u5df1\u7684\u542f\u52a8\u7c7b\u4e2d\uff0c\u4f5c\u7528\u5c31\u662f\u5c06\u6211\u4eec\u81ea\u5df1\u5bb9\u5668\u7684\u7236\u5bb9\u5668\u8bbe\u7f6e\u4e3aBootStrap\u5bb9\u5668\u3002\u901a\u8fc7BootStrap\u5bb9\u5668\u83b7\u5f97\u521d\u59cb\u5316\u597d\u540e\u7684ApplicationContextInitializer\u7c7b\u578b\u5bf9\u8c61\uff0c\u800c\u8be5\u7c7b\u6765\u81ea\u4e8ePropertySourceBootstrapConfiguration\u542f\u52a8\u914d\u7f6e\u7c7b\uff0c\u8be5\u7c7b\u4e2d\u53c8\u6ce8\u5165\u4e86PropertySourceLocator\u7c7b\uff0c\u800c\u5728ConfigServiceBootstrapConfiguration\u542f\u52a8\u914d\u7f6e\u7c7b\u4e2d\u914d\u7f6ebean\u5bf9\u8c61\nConfigServicePropertySourceLocator\uff0c\u6240\u4ee5\u6700\u7ec8\u4f1a\u5c06BootStrap\u4e2d\u521d\u59cb\u597d\u7684PropertySourceBootstrapConfiguration\u52a0\u5165\u5230\u6211\u4eec\u81ea\u5df1\u7684\u542f\u52a8\u7c7b\u4e2d\u8c03\u7528\uff0c\u6700\u7ec8\u8c03\u7528initialize\u65b9\u6cd5\u7136\u540e\u8c03\u7528ConfigServicePropertySourceLocator.locate\u65b9\u6cd5\u53bbConfig server\u670d\u52a1\u83b7\u53d6\u914d\u7f6e\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["\u4f5c\u8005\uff1a\u62e5\u62b1\u5b64\u72ec_to\n\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://www.jianshu.com/p/60c6ab0e79d5",children:"https://www.jianshu.com/p/60c6ab0e79d5"}),"\n\u6765\u6e90\uff1a\u7b80\u4e66\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002"]}),"\n",(0,t.jsx)(e.h1,{id:"\u53c2\u8003\u6587\u7ae0",children:"\u53c2\u8003\u6587\u7ae0"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF",children:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF"}),"\n",(0,t.jsx)(e.a,{href:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA",children:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA"}),"\n",(0,t.jsx)(e.a,{href:"https://juejin.cn/post/6931922457741770760",children:"https://juejin.cn/post/6931922457741770760"}),"\n",(0,t.jsx)(e.a,{href:"https://github.com/D2C-Cai/herring",children:"https://github.com/D2C-Cai/herring"}),"\n",(0,t.jsx)(e.a,{href:"http://c.biancheng.net/springcloud",children:"http://c.biancheng.net/springcloud"}),"\n",(0,t.jsx)(e.a,{href:"https://github.com/macrozheng/springcloud-learning",children:"https://github.com/macrozheng/springcloud-learning"})]})]})}function d(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},88672:(n,e,r)=>{r.d(e,{Z:()=>a,a:()=>s});var t=r(50959);const o={},i=t.createContext(o);function s(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);