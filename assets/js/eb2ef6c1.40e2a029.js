"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[9289],{86891:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=r(11527),i=r(88672);const a={},o=void 0,s={id:"distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58",title:"\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58",description:"\u672c\u6587\u5185\u5bb9\u53c2\u8003\u7f51\u7edc\uff0c\u4fb5\u5220",source:"@site/docs/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58.md",sourceDirName:"distributed/practice",slug:"/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58",permalink:"/code-note-blog/docs/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aSpringBoot\u4f7f\u7528\u6ce8\u89e3\u96c6\u6210Redis\u7f13\u5b58.md",tags:[],version:"current",frontMatter:{},sidebar:"distributed",previous:{title:"\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aLVS\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u7684\u539f\u7406\u4e0e\u5b9e\u8df5",permalink:"/code-note-blog/docs/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aLVS\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u7684\u539f\u7406\u4e0e\u5b9e\u8df5"},next:{title:"\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aZAB\u534f\u8bae\u6982\u8ff0\u4e0e\u9009\u4e3b\u6d41\u7a0b\u8be6\u89e3",permalink:"/code-note-blog/docs/distributed/practice/\u641e\u61c2\u5206\u5e03\u5f0f\u6280\u672f\uff1aZAB\u534f\u8bae\u6982\u8ff0\u4e0e\u9009\u4e3b\u6d41\u7a0b\u8be6\u89e3"}},c={},p=[{value:"\u4e00\u3001\u521b\u5efa Caching \u914d\u7f6e\u7c7b",id:"\u4e00\u521b\u5efa-caching-\u914d\u7f6e\u7c7b",level:3},{value:"\u4e8c\u3001\u521b\u5efa\u9700\u8981\u7f13\u5b58\u6570\u636e\u7684\u7c7b",id:"\u4e8c\u521b\u5efa\u9700\u8981\u7f13\u5b58\u6570\u636e\u7684\u7c7b",level:3},{value:"\u4e09\u3001\u6d4b\u8bd5\u65b9\u6cd5",id:"\u4e09\u6d4b\u8bd5\u65b9\u6cd5",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"\u672c\u6587\u5185\u5bb9\u53c2\u8003\u7f51\u7edc\uff0c\u4fb5\u5220"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u7cfb\u5217\u6587\u7ae0\u5c06\u6574\u7406\u5230\u6211\u5728GitHub\u4e0a\u7684\u300aJava\u9762\u8bd5\u6307\u5357\u300b\u4ed3\u5e93\uff0c\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bf7\u5230\u6211\u7684\u4ed3\u5e93\u91cc\u67e5\u770b"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/h2pl/Java-Tutorial",children:"https://github.com/h2pl/Java-Tutorial"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u559c\u6b22\u7684\u8bdd\u9ebb\u70e6\u70b9\u4e0bStar\u54c8"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6587\u4e5f\u5c06\u540c\u6b65\u5230\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff1a"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://www.how2playlife.com",children:"www.how2playlife.com"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u66f4\u591aJava\u6280\u672f\u6587\u7ae0\u5c06\u9646\u7eed\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\u3010Java\u6280\u672f\u6c5f\u6e56\u3011\u66f4\u65b0\uff0c\u656c\u8bf7\u5173\u6ce8\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u8be5\u7cfb\u5217\u535a\u6587\u4f1a\u544a\u8bc9\u4f60\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u8fd9\u5bf9\u540e\u7aef\u5de5\u7a0b\u5e08\u6765\u8bf4\u662f\u5f88\u91cd\u8981\u7684\u4e00\u95e8\u5b66\u95ee\uff0c\u6211\u4eec\u4f1a\u9010\u6b65\u4e86\u89e3\u5e38\u89c1\u7684\u5206\u5e03\u5f0f\u6280\u672f\u3001\u4ee5\u53ca\u4e00\u4e9b\u8f83\u4e3a\u5e38\u89c1\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u6982\u5ff5\uff0c\u540c\u65f6\u4e5f\u9700\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3zookeeper\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u3001\u5206\u5e03\u5f0f\u9501\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\u6280\u672f\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u66f4\u5b8c\u6574\u5730\u4e86\u89e3\u5206\u5e03\u5f0f\u6280\u672f\u7684\u5177\u4f53\u5b9e\u6218\u65b9\u6cd5\uff0c\u4e3a\u771f\u6b63\u5e94\u7528\u5206\u5e03\u5f0f\u6280\u672f\u505a\u597d\u51c6\u5907\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u5bf9\u672c\u7cfb\u5217\u6587\u7ae0\u6709\u4ec0\u4e48\u5efa\u8bae\uff0c\u6216\u8005\u662f\u6709\u4ec0\u4e48\u7591\u95ee\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7\u3010Java\u6280\u672f\u6c5f\u6e56\u3011\u8054\u7cfb\u4f5c\u8005\uff0c\u6b22\u8fce\u4f60\u53c2\u4e0e\u672c\u7cfb\u5217\u535a\u6587\u7684\u521b\u4f5c\u548c\u4fee\u8ba2\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6587\u8f6c\u8f7d\u81ea linkedkeeper.com"}),"\n",(0,t.jsx)(n.p,{children:"Spring Boot \u719f\u6089\u540e\uff0c\u96c6\u6210\u4e00\u4e2a\u5916\u90e8\u6269\u5c55\u662f\u4e00\u4ef6\u5f88\u5bb9\u6613\u7684\u4e8b\uff0c\u96c6\u6210Redis\u4e5f\u5f88\u7b80\u5355\uff0c\u770b\u4e0b\u9762\u6b65\u9aa4\u914d\u7f6e\uff1a"}),"\n",(0,t.jsx)(n.p,{children:"\u4e00\u3001\u6dfb\u52a0pom\u4f9d\u8d56"}),"\n",(0,t.jsxs)("dependency",{children:[(0,t.jsx)("groupId",{children:"org.springframework.boot"}),(0,t.jsx)("artifactId",{children:"spring-boot-starter-redis"})]}),"\n",(0,t.jsx)(n.p,{children:"\u4e8c\u3001\u521b\u5efa RedisClient.java\n\u6ce8\u610f\u8be5\u7c7b\u5b58\u653e\u7684package"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    package org.springframework.data.redis.connection.jedis;\n    \n    import java.io.ByteArrayInputStream;\n    import java.io.ByteArrayOutputStream;\n    import java.io.IOException;\n    import java.io.ObjectInputStream;\n    import java.io.ObjectOutputStream;\n    import java.io.UnsupportedEncodingException;\n    \n    import org.apache.commons.lang3.StringUtils;\n    import org.slf4j.Logger;\n    import org.slf4j.LoggerFactory;\n    \n    import redis.clients.jedis.Jedis;\n    import redis.clients.jedis.Protocol;\n    import redis.clients.jedis.exceptions.JedisException;\n    \n    /**\n     * \u5de5\u5177\u7c7b RedisClient\n     * \u56e0\u4e3a\u672c\u7c7b\u4e2d\u83b7\u53d6JedisPool\u8c03\u7528\u7684\u662fJedisConnectionFactory\u4e2dprotected\u4fee\u9970\u7684\u65b9\u6cd5fetchJedisConnector()\n     * \u6240\u4ee5\u8be5\u7c7b\u9700\u8981\u4e0eJedisConnectionFactory\u5728\u540c\u4e00\u4e2apackage\u4e2d\n     *\n     * @author \u5355\u7ea2\u5b87(CSDN CATOOP)\n     * @create 2017\u5e744\u67089\u65e5\n     */\n    public class RedisClient {\n    \n        private static Logger logger = LoggerFactory.getLogger(RedisClient.class);\n    \n        private JedisConnectionFactory factory;\n    \n        public RedisClient(JedisConnectionFactory factory) {\n            super();\n            this.factory = factory;\n        }\n    \n        /**\n         * put\u64cd\u4f5c\uff08\u5b58\u50a8\u5e8f\u5217\u5316\u5bf9\u8c61\uff09+ \u751f\u6548\u65f6\u95f4\n         * \n         * @param key\n         * @param value\n         * @return\n         */\n        public void putObject(final String key, final Object value, final int cacheSeconds) {\n            if (StringUtils.isNotBlank(key)) {\n                redisTemplete(key, new RedisExecute<Object>() {\n                    @Override\n                    public Object doInvoker(Jedis jedis) {\n                        try {\n                            jedis.setex(key.getBytes(Protocol.CHARSET), cacheSeconds, serialize(value));\n                        } catch (UnsupportedEncodingException e) {\n                        }\n    \n                        return null;\n                    }\n                });\n            }\n        }\n    \n        /**\n         * get\u64cd\u4f5c\uff08\u83b7\u53d6\u5e8f\u5217\u5316\u5bf9\u8c61\uff09\n         * \n         * @param key\n         * @return\n         */\n        public Object getObject(final String key) {\n            return redisTemplete(key, new RedisExecute<Object>() {\n                @Override\n                public Object doInvoker(Jedis jedis) {\n                    try {\n                        byte[] byteKey = key.getBytes(Protocol.CHARSET);\n                        byte[] byteValue = jedis.get(byteKey);\n                        if (byteValue != null) {\n                            return deserialize(byteValue);\n                        }\n                    } catch (UnsupportedEncodingException e) {\n                        return null;\n                    }\n                    return null;\n                }\n            });\n        }\n    \n        /**\n         * setex\u64cd\u4f5c\n         * \n         * @param key\n         *            \u952e\n         * @param value\n         *            \u503c\n         * @param cacheSeconds\n         *            \u8d85\u65f6\u65f6\u95f4\uff0c0\u4e3a\u4e0d\u8d85\u65f6\n         * @return\n         */\n        public String set(final String key, final String value, final int cacheSeconds) {\n            return redisTemplete(key, new RedisExecute<String>() {\n                @Override\n                public String doInvoker(Jedis jedis) {\n                    if (cacheSeconds == 0) {\n                        return jedis.set(key, value);\n                    }\n                    return jedis.setex(key, cacheSeconds, value);\n                }\n            });\n        }\n    \n        /**\n         * get\u64cd\u4f5c\n         * \n         * @param key\n         *            \u952e\n         * @return \u503c\n         */\n        public String get(final String key) {\n            return redisTemplete(key, new RedisExecute<String>() {\n                @Override\n                public String doInvoker(Jedis jedis) {\n                    String value = jedis.get(key);\n                    return StringUtils.isNotBlank(value) && !"nil".equalsIgnoreCase(value) ? value : null;\n                }\n            });\n        }\n    \n        /**\n         * del\u64cd\u4f5c\n         * \n         * @param key\n         *            \u952e\n         * @return\n         */\n        public long del(final String key) {\n            return redisTemplete(key, new RedisExecute<Long>() {\n                @Override\n                public Long doInvoker(Jedis jedis) {\n                    return jedis.del(key);\n                }\n            });\n        }\n    \n        /**\n         * \u83b7\u53d6\u8d44\u6e90\n         * \n         * @return\n         * @throws JedisException\n         */\n        public Jedis getResource() throws JedisException {\n            Jedis jedis = null;\n            try {\n                jedis = factory.fetchJedisConnector();\n            } catch (JedisException e) {\n                logger.error("getResource.", e);\n                returnBrokenResource(jedis);\n                throw e;\n            }\n            return jedis;\n        }\n    \n        /**\n         * \u83b7\u53d6\u8d44\u6e90\n         * \n         * @return\n         * @throws JedisException\n         */\n        public Jedis getJedis() throws JedisException {\n            return getResource();\n        }\n    \n        /**\n         * \u5f52\u8fd8\u8d44\u6e90\n         * \n         * @param jedis\n         * @param isBroken\n         */\n        public void returnBrokenResource(Jedis jedis) {\n            if (jedis != null) {\n                jedis.close();\n            }\n        }\n    \n        /**\n         * \u91ca\u653e\u8d44\u6e90\n         * \n         * @param jedis\n         * @param isBroken\n         */\n        public void returnResource(Jedis jedis) {\n            if (jedis != null) {\n                jedis.close();\n            }\n        }\n    \n        /**\n         * \u64cd\u4f5cjedis\u5ba2\u6237\u7aef\u6a21\u677f\n         * \n         * @param key\n         * @param execute\n         * @return\n         */\n        public <R> R redisTemplete(String key, RedisExecute<R> execute) {\n            Jedis jedis = null;\n            try {\n                jedis = getResource();\n                if (jedis == null) {\n                    return null;\n                }\n    \n                return execute.doInvoker(jedis);\n            } catch (Exception e) {\n                logger.error("operator redis api fail,{}", key, e);\n            } finally {\n                returnResource(jedis);\n            }\n            return null;\n        }\n    \n        /**\n         * \u529f\u80fd\u7b80\u8ff0: \u5bf9\u5b9e\u4f53Bean\u8fdb\u884c\u5e8f\u5217\u5316\u64cd\u4f5c.\n         * \n         * @param source\n         *            \u5f85\u8f6c\u6362\u7684\u5b9e\u4f53\n         * @return \u8f6c\u6362\u4e4b\u540e\u7684\u5b57\u8282\u6570\u7ec4\n         * @throws Exception\n         */\n        public static byte[] serialize(Object source) {\n            ByteArrayOutputStream byteOut = null;\n            ObjectOutputStream ObjOut = null;\n            try {\n                byteOut = new ByteArrayOutputStream();\n                ObjOut = new ObjectOutputStream(byteOut);\n                ObjOut.writeObject(source);\n                ObjOut.flush();\n            } catch (IOException e) {\n                e.printStackTrace();\n            } finally {\n                try {\n                    if (null != ObjOut) {\n                        ObjOut.close();\n                    }\n                } catch (IOException e) {\n                    ObjOut = null;\n                }\n            }\n            return byteOut.toByteArray();\n        }\n    \n        /**\n         * \u529f\u80fd\u7b80\u8ff0: \u5c06\u5b57\u8282\u6570\u7ec4\u53cd\u5e8f\u5217\u5316\u4e3a\u5b9e\u4f53Bean.\n         * \n         * @param source\n         *            \u9700\u8981\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u7684\u5b57\u8282\u6570\u7ec4\n         * @return \u53cd\u5e8f\u5217\u5316\u540e\u7684\u5b9e\u4f53Bean\n         * @throws Exception\n         */\n        public static Object deserialize(byte[] source) {\n            ObjectInputStream ObjIn = null;\n            Object retVal = null;\n            try {\n                ByteArrayInputStream byteIn = new ByteArrayInputStream(source);\n                ObjIn = new ObjectInputStream(byteIn);\n                retVal = ObjIn.readObject();\n            } catch (Exception e) {\n                e.printStackTrace();\n            } finally {\n                try {\n                    if (null != ObjIn) {\n                        ObjIn.close();\n                    }\n                } catch (IOException e) {\n                    ObjIn = null;\n                }\n            }\n            return retVal;\n        }\n    \n        interface RedisExecute<T> {\n            T doInvoker(Jedis jedis);\n        }\n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u4e09\u3001\u521b\u5efaRedis\u914d\u7f6e\u7c7b"}),"\n",(0,t.jsx)(n.p,{children:"RedisConfig.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    package com.shanhy.example.redis;\n    \n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;\n    import org.springframework.data.redis.connection.jedis.RedisClient;\n    import org.springframework.data.redis.core.RedisTemplate;\n    import org.springframework.data.redis.serializer.StringRedisSerializer;\n    \n    /**\n     * Redis\u914d\u7f6e\n     * \n     * @author \u5355\u7ea2\u5b87(CSDN catoop)\n     * @create 2016\u5e749\u670812\u65e5\n     */\n    @Configuration\n    public class RedisConfig {\n    \n        @Bean\n        public RedisTemplate<String, Object> redisTemplate(JedisConnectionFactory factory) {\n            RedisTemplate<String, Object> template = new RedisTemplate<String, Object>();\n            template.setConnectionFactory(factory);\n            template.setKeySerializer(new StringRedisSerializer());\n            template.setValueSerializer(new RedisObjectSerializer());\n            template.afterPropertiesSet();\n            return template;\n        }\n    \n        @Bean\n        public RedisClient redisClient(JedisConnectionFactory factory){\n            return new RedisClient(factory);\n        }\n    }\n\n    RedisObjectSerializer.java\n    \n    package com.shanhy.example.redis;\n    \n    import org.springframework.core.convert.converter.Converter;\n    import org.springframework.core.serializer.support.DeserializingConverter;\n    import org.springframework.core.serializer.support.SerializingConverter;\n    import org.springframework.data.redis.serializer.RedisSerializer;\n    import org.springframework.data.redis.serializer.SerializationException;\n\n    /**\n     * \u5b9e\u73b0\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u63a5\u53e3\n     * @author   \u5355\u7ea2\u5b87(365384722)\n     * @myblog  http://blog.csdn.net/catoop/\n     * @create    2017\u5e744\u67089\u65e5\n     */\n    public class RedisObjectSerializer implements RedisSerializer<Object> {\n    \n        private Converter<Object, byte[]> serializer = new SerializingConverter();\n        private Converter<byte[], Object> deserializer = new DeserializingConverter();\n    \n        static final byte[] EMPTY_ARRAY = new byte[0];\n    \n        @Override\n        public Object deserialize(byte[] bytes) {\n            if (isEmpty(bytes)) {\n                return null;\n            }\n    \n            try {\n                return deserializer.convert(bytes);\n            } catch (Exception ex) {\n                throw new SerializationException("Cannot deserialize", ex);\n            }\n        }\n    \n        @Override\n        public byte[] serialize(Object object) {\n            if (object == null) {\n                return EMPTY_ARRAY;\n            }\n    \n            try {\n                return serializer.convert(object);\n            } catch (Exception ex) {\n                return EMPTY_ARRAY;\n            }\n        }\n    \n        private boolean isEmpty(byte[] data) {\n            return (data == null || data.length == 0);\n        }\n    \n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u56db\u3001\u521b\u5efa\u6d4b\u8bd5\u65b9\u6cd5\n\u4e0b\u9762\u4ee3\u7801\u968f\u4fbf\u653e\u4e00\u4e2aController\u91cc"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'    @Autowired\n    private RedisTemplate<String, Object> redisTemplate;\n\n    /**\n     * \u7f13\u5b58\u6d4b\u8bd5\n     *\n     * @return\n     * @author  SHANHY\n     * @create  2016\u5e749\u670812\u65e5\n     */\n    @RequestMapping("/redisTest")\n    public String redisTest() {\n        try {\n            redisTemplate.opsForValue().set("test-key", "redis\u6d4b\u8bd5\u5185\u5bb9", 2, TimeUnit.SECONDS);// \u7f13\u5b58\u6709\u6548\u671f2\u79d2\n\n            logger.info("\u4eceRedis\u4e2d\u8bfb\u53d6\u6570\u636e\uff1a" + redisTemplate.opsForValue().get("test-key").toString());\n\n            TimeUnit.SECONDS.sleep(3);\n\n            logger.info("\u7b49\u5f853\u79d2\u540e\u5c1d\u8bd5\u8bfb\u53d6\u8fc7\u671f\u7684\u6570\u636e\uff1a" + redisTemplate.opsForValue().get("test-key"));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        return "OK";\n    }\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u4e94\u3001\u914d\u7f6e\u6587\u4ef6\u914d\u7f6eRedis\napplication.yml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    spring:\n      # Redis\u914d\u7f6e\n      redis:\n        host: 192.168.1.101\n        port: 6379\n        password:\n        # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u6beb\u79d2\uff09\n        timeout: 10000\n        pool:\n          max-idle: 20\n          min-idle: 5\n          max-active: 20\n          max-wait: 2\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86Redis\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 redisTemplate \u4e86\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u4e00\u521b\u5efa-caching-\u914d\u7f6e\u7c7b",children:"\u4e00\u3001\u521b\u5efa Caching \u914d\u7f6e\u7c7b"}),"\n",(0,t.jsx)(n.p,{children:"RedisKeys.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'package com.shanhy.example.redis;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.annotation.PostConstruct;\n\nimport org.springframework.stereotype.Component;\n\n/**\n * \u65b9\u6cd5\u7f13\u5b58key\u5e38\u91cf\n * \n * @author SHANHY\n */\n@Component\npublic class RedisKeys {\n\n    // \u6d4b\u8bd5 begin\n    public static final String _CACHE_TEST = "_cache_test";// \u7f13\u5b58key\n    public static final Long _CACHE_TEST_SECOND = 20L;// \u7f13\u5b58\u65f6\u95f4\n    // \u6d4b\u8bd5 end\n\n    // \u6839\u636ekey\u8bbe\u5b9a\u5177\u4f53\u7684\u7f13\u5b58\u65f6\u95f4\n    private Map<String, Long> expiresMap = null;\n\n    @PostConstruct\n    public void init(){\n        expiresMap = new HashMap<>();\n        expiresMap.put(_CACHE_TEST, _CACHE_TEST_SECOND);\n    }\n\n    public Map<String, Long> getExpiresMap(){\n        return this.expiresMap;\n    }\n}\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"CachingConfig.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'package com.shanhy.example.redis;\n\nimport java.lang.reflect.Method;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.cache.CacheManager;\nimport org.springframework.cache.annotation.CachingConfigurerSupport;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.cache.interceptor.KeyGenerator;\nimport org.springframework.cache.interceptor.SimpleKeyGenerator;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.cache.RedisCacheManager;\nimport org.springframework.data.redis.core.RedisTemplate;\n\n/**\n * \u6ce8\u89e3\u5f0f\u73af\u5883\u7ba1\u7406\n * \n * @author \u5355\u7ea2\u5b87(CSDN catoop)\n * @create 2016\u5e749\u670812\u65e5\n */\n@Configuration\n@EnableCaching\npublic class CachingConfig extends CachingConfigurerSupport {\n\n    /**\n     * \u5728\u4f7f\u7528@Cacheable\u65f6\uff0c\u5982\u679c\u4e0d\u6307\u5b9akey\uff0c\u5219\u4f7f\u7528\u627e\u4e2a\u9ed8\u8ba4\u7684key\u751f\u6210\u5668\u751f\u6210\u7684key\n     *\n     * @return\n     * \n     * @author \u5355\u7ea2\u5b87(CSDN CATOOP)\n     * @create 2017\u5e743\u670811\u65e5\n     */\n    @Override\n    public KeyGenerator keyGenerator() {\n        return new SimpleKeyGenerator() {\n\n            /**\n             * \u5bf9\u53c2\u6570\u8fdb\u884c\u62fc\u63a5\u540eMD5\n             */\n            @Override\n            public Object generate(Object target, Method method, Object... params) {\n                StringBuilder sb = new StringBuilder();\n                sb.append(target.getClass().getName());\n                sb.append(".").append(method.getName());\n\n                StringBuilder paramsSb = new StringBuilder();\n                for (Object param : params) {\n                    // \u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u751f\u6210\u5305\u542b\u5230\u952e\u503c\u4e2d\n                    if (param != null) {\n                        paramsSb.append(param.toString());\n                    }\n                }\n\n                if (paramsSb.length() > 0) {\n                    sb.append("_").append(paramsSb);\n                }\n                return sb.toString();\n            }\n\n        };\n\n    }\n\n    /**\n     * \u7ba1\u7406\u7f13\u5b58\n     *\n     * @param redisTemplate\n     * @return\n     */\n    @Bean\n    public CacheManager cacheManager(RedisTemplate<String, Object> redisTemplate, RedisKeys redisKeys) {\n        RedisCacheManager rcm = new RedisCacheManager(redisTemplate);\n        // \u8bbe\u7f6e\u7f13\u5b58\u9ed8\u8ba4\u8fc7\u671f\u65f6\u95f4\uff08\u5168\u5c40\u7684\uff09\n        rcm.setDefaultExpiration(1800);// 30\u5206\u949f\n\n        // \u6839\u636ekey\u8bbe\u5b9a\u5177\u4f53\u7684\u7f13\u5b58\u65f6\u95f4\uff0ckey\u7edf\u4e00\u653e\u5728\u5e38\u91cf\u7c7bRedisKeys\u4e2d\n        rcm.setExpires(redisKeys.getExpiresMap());\n\n        List<String> cacheNames = new ArrayList<String>(redisKeys.getExpiresMap().keySet());\n        rcm.setCacheNames(cacheNames);\n\n        return rcm;\n    }\n\n}\n\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u4e8c\u521b\u5efa\u9700\u8981\u7f13\u5b58\u6570\u636e\u7684\u7c7b",children:"\u4e8c\u3001\u521b\u5efa\u9700\u8981\u7f13\u5b58\u6570\u636e\u7684\u7c7b"}),"\n",(0,t.jsx)(n.p,{children:"TestService.java"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'package com.shanhy.example.service;\n\nimport org.apache.commons.lang3.RandomStringUtils;\nimport org.springframework.cache.annotation.Cacheable;\nimport org.springframework.stereotype.Service;\n\nimport com.shanhy.example.redis.RedisKeys;\n\n@Service\npublic class TestService {\n\n    /**\n     * \u56fa\u5b9akey\n     *\n     * @return\n     * @author SHANHY\n     * @create  2017\u5e744\u67089\u65e5\n     */\n    @Cacheable(value = RedisKeys._CACHE_TEST, key = "\'" + RedisKeys._CACHE_TEST + "\'")\n    public String testCache() {\n        return RandomStringUtils.randomNumeric(4);\n    }\n\n    /**\n     * \u5b58\u50a8\u5728Redis\u4e2d\u7684key\u81ea\u52a8\u751f\u6210\uff0c\u751f\u6210\u89c4\u5219\u8be6\u89c1CachingConfig.keyGenerator()\u65b9\u6cd5\n     *\n     * @param str1\n     * @param str2\n     * @return\n     * @author SHANHY\n     * @create  2017\u5e744\u67089\u65e5\n     */\n    @Cacheable(value = RedisKeys._CACHE_TEST)\n    public String testCache2(String str1, String str2) {\n        return RandomStringUtils.randomNumeric(4);\n    }\n}\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u8bf4\u660e\u4e00\u4e0b\uff0c\u5176\u4e2d @Cacheable \u4e2d\u7684 value \u503c\u662f\u5728 CachingConfig\u7684cacheManager \u4e2d\u914d\u7f6e\u7684\uff0c\u90a3\u91cc\u662f\u4e3a\u4e86\u914d\u7f6e\u6211\u4eec\u7684\u7f13\u5b58\u6709\u6548\u65f6\u95f4\u3002\u5176\u4e2d methodKeyGenerator \u4e3a CachingConfig \u4e2d\u58f0\u660e\u7684 KeyGenerator\u3002\n\u53e6\u5916\uff0cCache \u76f8\u5173\u7684\u6ce8\u89e3\u8fd8\u6709\u51e0\u4e2a\uff0c\u5927\u5bb6\u53ef\u4ee5\u4e86\u89e3\u4e0b\uff0c\u4e0d\u8fc7\u6211\u4eec\u5e38\u7528\u7684\u5c31\u662f @Cacheable\uff0c\u4e00\u822c\u60c5\u51b5\u4e5f\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u5927\u90e8\u5206\u9700\u6c42\u4e86\u3002\u8fd8\u6709 @Cacheable \u4e5f\u53ef\u4ee5\u914d\u7f6e\u8868\u8fbe\u5f0f\u6839\u636e\u6211\u4eec\u4f20\u9012\u7684\u53c2\u6570\u503c\u5224\u65ad\u662f\u5426\u9700\u8981\u7f13\u5b58\u3002\n\u6ce8\uff1a TestService \u4e2d testCache \u4e2d\u7684 mapper.get \u5927\u5bb6\u4e0d\u7528\u5173\u5fc3\uff0c\u8fd9\u91cc\u9762\u6211\u53ea\u662f\u8bbf\u95ee\u4e86\u4e00\u4e0b\u6570\u636e\u5e93\u800c\u5df2\uff0c\u4f60\u53ea\u9700\u8981\u5728\u8fd9\u91cc\u505a\u81ea\u5df1\u7684\u4e1a\u52a1\u4ee3\u7801\u5373\u53ef\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"\u4e09\u6d4b\u8bd5\u65b9\u6cd5",children:"\u4e09\u3001\u6d4b\u8bd5\u65b9\u6cd5"}),"\n",(0,t.jsx)(n.p,{children:"\u4e0b\u9762\u4ee3\u7801\uff0c\u968f\u4fbf\u653e\u4e00\u4e2a Controller \u4e2d"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'package com.shanhy.example.controller;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.connection.jedis.RedisClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.shanhy.example.service.TestService;\n\n/**\n * \u6d4b\u8bd5Controller\n * \n * @author \u5355\u7ea2\u5b87(365384722)\n * @myblog http://blog.csdn.net/catoop/\n * @create 2017\u5e744\u67089\u65e5\n */\n@RestController\n@RequestMapping("/test")\npublic class TestController {\n\n    private static final Logger LOG = LoggerFactory.getLogger(TestController.class);\n\n    @Autowired\n    private RedisClient redisClient;\n\n    @Autowired\n    private TestService testService;\n\n    @GetMapping("/redisCache")\n    public String redisCache() {\n        redisClient.set("shanhy", "hello,shanhy", 100);\n        LOG.info("getRedisValue = {}", redisClient.get("shanhy"));\n        testService.testCache2("aaa", "bbb");\n        return testService.testCache();\n    }\n}\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u81f3\u6b64\u5b8c\u6bd5\uff01"}),"\n",(0,t.jsx)(n.p,{children:"\u6700\u540e\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u4e2a @Cacheable \u57fa\u672c\u662f\u53ef\u4ee5\u653e\u5728\u6240\u6709\u65b9\u6cd5\u4e0a\u7684\uff0cController \u7684\u65b9\u6cd5\u4e0a\u4e5f\u662f\u53ef\u4ee5\u7684\uff08\u8fd9\u4e2a\u6211\u6ca1\u6709\u6d4b\u8bd5 ^_^\uff09\u3002"})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},88672:(e,n,r)=>{r.d(n,{Z:()=>s,a:()=>o});var t=r(50959);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);