"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[1958],{94757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>o,frontMatter:()=>s,metadata:()=>h,toc:()=>l});var i=n(11527),d=n(88672);const s={},c=void 0,h={id:"cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict",title:"\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict",description:"\u672c\u6587\u8f6c\u81ea\u4e92\u8054\u7f51",source:"@site/docs/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict.md",sourceDirName:"cache",slug:"/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict",permalink:"/code-note-blog/docs/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014dict.md",tags:[],version:"current",frontMatter:{},sidebar:"cache",previous:{title:"\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u96c6\u7fa4\u673a\u5236\u53ca\u4e00\u4e2aRedis\u67b6\u6784\u6f14\u8fdb\u5b9e\u4f8b",permalink:"/code-note-blog/docs/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u96c6\u7fa4\u673a\u5236\u53ca\u4e00\u4e2aRedis\u67b6\u6784\u6f14\u8fdb\u5b9e\u4f8b"},next:{title:"\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014intset",permalink:"/code-note-blog/docs/cache/\u63a2\u7d22Redis\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff1aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u2014\u2014intset"}},r={},l=[{value:"dict\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49",id:"dict\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49",level:2},{value:"dict\u7684\u521b\u5efa\uff08dictCreate\uff09",id:"dict\u7684\u521b\u5efadictcreate",level:2},{value:"dict\u7684\u67e5\u627e\uff08dictFind\uff09",id:"dict\u7684\u67e5\u627edictfind",level:2},{value:"dict\u7684\u63d2\u5165\uff08dictAdd\u548cdictReplace\uff09",id:"dict\u7684\u63d2\u5165dictadd\u548cdictreplace",level:2},{value:"dict\u7684\u5220\u9664\uff08dictDelete\uff09",id:"dict\u7684\u5220\u9664dictdelete",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"\u672c\u6587\u8f6c\u81ea\u4e92\u8054\u7f51"}),"\n",(0,i.jsx)(t.p,{children:"\u672c\u6587\u5c06\u6574\u7406\u5230\u6211\u5728GitHub\u4e0a\u7684\u300aJava\u9762\u8bd5\u6307\u5357\u300b\u4ed3\u5e93\uff0c\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bf7\u5230\u6211\u7684\u4ed3\u5e93\u91cc\u67e5\u770b"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/h2pl/Java-Tutorial",children:"https://github.com/h2pl/Java-Tutorial"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u559c\u6b22\u7684\u8bdd\u9ebb\u70e6\u70b9\u4e0bStar\u54c8"}),"\n",(0,i.jsx)(t.p,{children:"\u672c\u6587\u90e8\u5206\u5185\u5bb9\u6765\u6e90\u4e8e\u7f51\u7edc\uff0c\u4e3a\u4e86\u628a\u672c\u6587\u4e3b\u9898\u8bb2\u5f97\u6e05\u6670\u900f\u5f7b\uff0c\u4e5f\u6574\u5408\u4e86\u5f88\u591a\u6211\u8ba4\u4e3a\u4e0d\u9519\u7684\u6280\u672f\u535a\u5ba2\u5185\u5bb9\uff0c\u5f15\u7528\u5176\u4e2d\u4e86\u4e00\u4e9b\u6bd4\u8f83\u597d\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u4f5c\u8005\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u8be5\u7cfb\u5217\u535a\u6587\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u4ece\u5165\u95e8\u5230\u8fdb\u9636\uff0cRedis\u57fa\u672c\u7684\u4f7f\u7528\u65b9\u6cd5\uff0cRedis\u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8fdb\u9636\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u540c\u65f6\u4e5f\u9700\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3Redis\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\uff0c\u518d\u63a5\u7740\uff0c\u8fd8\u4f1a\u5e26\u6765Redis\u4e3b\u4ece\u590d\u5236\u3001\u96c6\u7fa4\u3001\u5206\u5e03\u5f0f\u9501\u7b49\u65b9\u9762\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u4ee5\u53ca\u4f5c\u4e3a\u7f13\u5b58\u7684\u4e00\u4e9b\u4f7f\u7528\u65b9\u6cd5\u548c\u6ce8\u610f\u4e8b\u9879\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u66f4\u5b8c\u6574\u5730\u4e86\u89e3\u6574\u4e2aRedis\u76f8\u5173\u7684\u6280\u672f\u4f53\u7cfb\uff0c\u5f62\u6210\u81ea\u5df1\u7684\u77e5\u8bc6\u6846\u67b6\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u5982\u679c\u5bf9\u672c\u7cfb\u5217\u6587\u7ae0\u6709\u4ec0\u4e48\u5efa\u8bae\uff0c\u6216\u8005\u662f\u6709\u4ec0\u4e48\u7591\u95ee\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7\u3010Java\u6280\u672f\u6c5f\u6e56\u3011\u8054\u7cfb\u4f5c\u8005\uff0c\u6b22\u8fce\u4f60\u53c2\u4e0e\u672c\u7cfb\u5217\u535a\u6587\u7684\u521b\u4f5c\u548c\u4fee\u8ba2\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u5982\u679c\u4f60\u4f7f\u7528\u8fc7Redis\uff0c\u4e00\u5b9a\u4f1a\u50cf\u6211\u4e00\u6837\u5bf9\u5b83\u7684\u5185\u90e8\u5b9e\u73b0\u4ea7\u751f\u5174\u8da3\u3002\u300aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u300b\u662f\u6211\u51c6\u5907\u5199\u7684\u4e00\u4e2a\u7cfb\u5217\uff0c\u4e5f\u662f\u6211\u4e2a\u4eba\u5bf9\u4e8e\u4e4b\u524d\u7814\u7a76Redis\u7684\u4e00\u4e2a\u9636\u6bb5\u6027\u603b\u7ed3\uff0c\u7740\u91cd\u8bb2\u89e3Redis\u5728\u5185\u5b58\u4e2d\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff08\u6682\u4e0d\u6d89\u53ca\u6301\u4e45\u5316\u7684\u8bdd\u9898\uff09\u3002Redis\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668\uff08data structures server\uff09\uff0c\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e86\u591a\u79cd\u73b0\u6210\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7814\u7a76\u5b83\u7684\u6570\u636e\u7ed3\u6784\u548c\u57fa\u4e8e\u5176\u4e0a\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6211\u4eec\u81ea\u5df1\u63d0\u5347\u5c40\u90e8\u7b97\u6cd5\u7684\u7f16\u7a0b\u6c34\u5e73\u6709\u5f88\u91cd\u8981\u7684\u53c2\u8003\u610f\u4e49\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u5f53\u6211\u4eec\u5728\u672c\u6587\u4e2d\u63d0\u5230Redis\u7684\u201c\u6570\u636e\u7ed3\u6784\u201d\uff0c\u53ef\u80fd\u662f\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5c42\u9762\u6765\u8ba8\u8bba\u5b83\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u7b2c\u4e00\u4e2a\u5c42\u9762\uff0c\u662f\u4ece\u4f7f\u7528\u8005\u7684\u89d2\u5ea6\u3002\u6bd4\u5982\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"string"}),"\n",(0,i.jsx)(t.li,{children:"list"}),"\n",(0,i.jsx)(t.li,{children:"hash"}),"\n",(0,i.jsx)(t.li,{children:"set"}),"\n",(0,i.jsx)(t.li,{children:"sorted set"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u8fd9\u4e00\u5c42\u9762\u4e5f\u662fRedis\u66b4\u9732\u7ed9\u5916\u90e8\u7684\u8c03\u7528\u63a5\u53e3\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u7b2c\u4e8c\u4e2a\u5c42\u9762\uff0c\u662f\u4ece\u5185\u90e8\u5b9e\u73b0\u7684\u89d2\u5ea6\uff0c\u5c5e\u4e8e\u66f4\u5e95\u5c42\u7684\u5b9e\u73b0\u3002\u6bd4\u5982\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"dict"}),"\n",(0,i.jsx)(t.li,{children:"sds"}),"\n",(0,i.jsx)(t.li,{children:"ziplist"}),"\n",(0,i.jsx)(t.li,{children:"quicklist"}),"\n",(0,i.jsx)(t.li,{children:"skiplist"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["\u7b2c\u4e00\u4e2a\u5c42\u9762\u7684\u201c\u6570\u636e\u7ed3\u6784\u201d\uff0cRedis\u7684\u5b98\u65b9\u6587\u6863(",(0,i.jsx)(t.a,{href:"http://redis.io/topics/data-types-intro",children:"http://redis.io/topics/data-types-intro"}),")\u6709\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\u672c\u6587\u7684\u91cd\u70b9\u5728\u4e8e\u8ba8\u8bba\u7b2c\u4e8c\u4e2a\u5c42\u9762\uff0cRedis\u6570\u636e\u7ed3\u6784\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u4ee5\u53ca\u8fd9\u4e24\u4e2a\u5c42\u9762\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u5173\u7cfb\uff1aRedis\u5982\u4f55\u901a\u8fc7\u7ec4\u5408\u7b2c\u4e8c\u4e2a\u5c42\u9762\u7684\u5404\u79cd\u57fa\u7840\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\u7b2c\u4e00\u4e2a\u5c42\u9762\u7684\u66f4\u9ad8\u5c42\u7684\u6570\u636e\u7ed3\u6784\u3002"]}),"\n",(0,i.jsx)(t.p,{children:"\u5728\u8ba8\u8bba\u4efb\u4f55\u4e00\u4e2a\u7cfb\u7edf\u7684\u5185\u90e8\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u8981\u5148\u660e\u786e\u5b83\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u66f4\u6df1\u523b\u5730\u7406\u89e3\u5b83\u4e3a\u4ec0\u4e48\u4f1a\u8fdb\u884c\u5982\u6b64\u8bbe\u8ba1\u7684\u771f\u6b63\u610f\u56fe\u3002\u5728\u672c\u6587\u63a5\u4e0b\u6765\u7684\u8ba8\u8bba\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u4ee5\u4e0b\u51e0\u70b9\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u5b58\u50a8\u6548\u7387\uff08memory efficiency\uff09\u3002Redis\u662f\u4e13\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u7684\uff0c\u5b83\u5bf9\u4e8e\u8ba1\u7b97\u673a\u8d44\u6e90\u7684\u4e3b\u8981\u6d88\u8017\u5c31\u5728\u4e8e\u5185\u5b58\uff0c\u56e0\u6b64\u8282\u7701\u5185\u5b58\u662f\u5b83\u975e\u5e38\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u65b9\u9762\u3002\u8fd9\u610f\u5473\u7740Redis\u4e00\u5b9a\u662f\u975e\u5e38\u7cbe\u7ec6\u5730\u8003\u8651\u4e86\u538b\u7f29\u6570\u636e\u3001\u51cf\u5c11\u5185\u5b58\u788e\u7247\u7b49\u95ee\u9898\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\uff08fast response time\uff09\u3002\u4e0e\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\u76f8\u5bf9\u7684\uff0c\u662f\u9ad8\u541e\u5410\u91cf\uff08high throughput\uff09\u3002Redis\u662f\u7528\u4e8e\u63d0\u4f9b\u5728\u7ebf\u8bbf\u95ee\u7684\uff0c\u5bf9\u4e8e\u5355\u4e2a\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u8981\u6c42\u5f88\u9ad8\uff0c\u56e0\u6b64\uff0c\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\u662f\u6bd4\u9ad8\u541e\u5410\u91cf\u66f4\u91cd\u8981\u7684\u76ee\u6807\u3002\u6709\u65f6\u5019\uff0c\u8fd9\u4e24\u4e2a\u76ee\u6807\u662f\u77db\u76fe\u7684\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5355\u7ebf\u7a0b\uff08single-threaded\uff09\u3002Redis\u7684\u6027\u80fd\u74f6\u9888\u4e0d\u5728\u4e8eCPU\u8d44\u6e90\uff0c\u800c\u5728\u4e8e\u5185\u5b58\u8bbf\u95ee\u548c\u7f51\u7edcIO\u3002\u800c\u91c7\u7528\u5355\u7ebf\u7a0b\u7684\u8bbe\u8ba1\u5e26\u6765\u7684\u597d\u5904\u662f\uff0c\u6781\u5927\u7b80\u5316\u4e86\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u76f8\u53cd\uff0cRedis\u901a\u8fc7\u5f02\u6b65IO\u548cpipelining\u7b49\u673a\u5236\u6765\u5b9e\u73b0\u9ad8\u901f\u7684\u5e76\u53d1\u8bbf\u95ee\u3002\u663e\u7136\uff0c\u5355\u7ebf\u7a0b\u7684\u8bbe\u8ba1\uff0c\u5bf9\u4e8e\u5355\u4e2a\u8bf7\u6c42\u7684\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\u4e5f\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u672c\u6587\u662f\u300aRedis\u5185\u90e8\u6570\u636e\u7ed3\u6784\u8be6\u89e3\u300b\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7\uff0c\u8bb2\u8ff0Redis\u4e00\u4e2a\u91cd\u8981\u7684\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff1adict\u3002"}),"\n",(0,i.jsx)(t.p,{children:"dict\u662f\u4e00\u4e2a\u7528\u4e8e\u7ef4\u62a4key\u548cvalue\u6620\u5c04\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e0e\u5f88\u591a\u8bed\u8a00\u4e2d\u7684Map\u6216dictionary\u7c7b\u4f3c\u3002Redis\u7684\u4e00\u4e2adatabase\u4e2d\u6240\u6709key\u5230value\u7684\u6620\u5c04\uff0c\u5c31\u662f\u4f7f\u7528\u4e00\u4e2adict\u6765\u7ef4\u62a4\u7684\u3002\u4e0d\u8fc7\uff0c\u8fd9\u53ea\u662f\u5b83\u5728Redis\u4e2d\u7684\u4e00\u4e2a\u7528\u9014\u800c\u5df2\uff0c\u5b83\u5728Redis\u4e2d\u88ab\u4f7f\u7528\u7684\u5730\u65b9\u8fd8\u6709\u5f88\u591a\u3002\u6bd4\u5982\uff0c\u4e00\u4e2aRedis hash\u7ed3\u6784\uff0c\u5f53\u5b83\u7684field\u8f83\u591a\u65f6\uff0c\u4fbf\u4f1a\u91c7\u7528dict\u6765\u5b58\u50a8\u3002\u518d\u6bd4\u5982\uff0cRedis\u914d\u5408\u4f7f\u7528dict\u548cskiplist\u6765\u5171\u540c\u7ef4\u62a4\u4e00\u4e2asorted set\u3002\u8fd9\u4e9b\u7ec6\u8282\u6211\u4eec\u540e\u9762\u518d\u8ba8\u8bba\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u96c6\u4e2d\u7cbe\u529b\u8ba8\u8bbadict\u672c\u8eab\u7684\u5b9e\u73b0\u3002"}),"\n",(0,i.jsx)(t.p,{children:"dict\u672c\u8d28\u4e0a\u662f\u4e3a\u4e86\u89e3\u51b3\u7b97\u6cd5\u4e2d\u7684\u67e5\u627e\u95ee\u9898\uff08Searching\uff09\uff0c\u4e00\u822c\u67e5\u627e\u95ee\u9898\u7684\u89e3\u6cd5\u5206\u4e3a\u4e24\u4e2a\u5927\u7c7b\uff1a\u4e00\u4e2a\u662f\u57fa\u4e8e\u5404\u79cd\u5e73\u8861\u6811\uff0c\u4e00\u4e2a\u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\u3002\u6211\u4eec\u5e73\u5e38\u4f7f\u7528\u7684\u5404\u79cdMap\u6216dictionary\uff0c\u5927\u90fd\u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u3002\u5728\u4e0d\u8981\u6c42\u6570\u636e\u6709\u5e8f\u5b58\u50a8\uff0c\u4e14\u80fd\u4fdd\u6301\u8f83\u4f4e\u7684\u54c8\u5e0c\u503c\u51b2\u7a81\u6982\u7387\u7684\u524d\u63d0\u4e0b\uff0c\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684\u67e5\u627e\u6027\u80fd\u80fd\u505a\u5230\u975e\u5e38\u9ad8\u6548\uff0c\u63a5\u8fd1O(1)\uff0c\u800c\u4e14\u5b9e\u73b0\u7b80\u5355\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u5728Redis\u4e2d\uff0cdict\u4e5f\u662f\u4e00\u4e2a\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684\u7b97\u6cd5\u3002\u548c\u4f20\u7edf\u7684\u54c8\u5e0c\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u5b83\u91c7\u7528\u67d0\u4e2a\u54c8\u5e0c\u51fd\u6570\u4ecekey\u8ba1\u7b97\u5f97\u5230\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u91c7\u7528\u62c9\u94fe\u6cd5\u89e3\u51b3\u51b2\u7a81\uff0c\u5e76\u5728\u88c5\u8f7d\u56e0\u5b50\uff08load factor\uff09\u8d85\u8fc7\u9884\u5b9a\u503c\u65f6\u81ea\u52a8\u6269\u5c55\u5185\u5b58\uff0c\u5f15\u53d1\u91cd\u54c8\u5e0c\uff08rehashing\uff09\u3002Redis\u7684dict\u5b9e\u73b0\u6700\u663e\u8457\u7684\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u5728\u4e8e\u5b83\u7684\u91cd\u54c8\u5e0c\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u79f0\u4e3a\u589e\u91cf\u5f0f\u91cd\u54c8\u5e0c\uff08incremental rehashing\uff09\u7684\u65b9\u6cd5\uff0c\u5728\u9700\u8981\u6269\u5c55\u5185\u5b58\u65f6\u907f\u514d\u4e00\u6b21\u6027\u5bf9\u6240\u6709key\u8fdb\u884c\u91cd\u54c8\u5e0c\uff0c\u800c\u662f\u5c06\u91cd\u54c8\u5e0c\u64cd\u4f5c\u5206\u6563\u5230\u5bf9\u4e8edict\u7684\u5404\u4e2a\u589e\u5220\u6539\u67e5\u7684\u64cd\u4f5c\u4e2d\u53bb\u3002\u8fd9\u79cd\u65b9\u6cd5\u80fd\u505a\u5230\u6bcf\u6b21\u53ea\u5bf9\u4e00\u5c0f\u90e8\u5206key\u8fdb\u884c\u91cd\u54c8\u5e0c\uff0c\u800c\u6bcf\u6b21\u91cd\u54c8\u5e0c\u4e4b\u95f4\u4e0d\u5f71\u54cddict\u7684\u64cd\u4f5c\u3002dict\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u8ba1\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u91cd\u54c8\u5e0c\u671f\u95f4\u5355\u4e2a\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u5267\u70c8\u589e\u52a0\uff0c\u8fd9\u4e0e\u524d\u9762\u63d0\u5230\u7684\u201c\u5feb\u901f\u54cd\u5e94\u65f6\u95f4\u201d\u7684\u8bbe\u8ba1\u539f\u5219\u662f\u76f8\u7b26\u7684\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u4e0b\u9762\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002"}),"\n",(0,i.jsx)(t.h2,{id:"dict\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49",children:"dict\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49"}),"\n",(0,i.jsx)(t.p,{children:"\u4e3a\u4e86\u5b9e\u73b0\u589e\u91cf\u5f0f\u91cd\u54c8\u5e0c\uff08incremental rehashing\uff09\uff0cdict\u7684\u6570\u636e\u7ed3\u6784\u91cc\u5305\u542b\u4e24\u4e2a\u54c8\u5e0c\u8868\u3002\u5728\u91cd\u54c8\u5e0c\u671f\u95f4\uff0c\u6570\u636e\u4ece\u7b2c\u4e00\u4e2a\u54c8\u5e0c\u8868\u5411\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u8868\u8fc1\u79fb\u3002"}),"\n",(0,i.jsx)(t.p,{children:"dict\u7684C\u4ee3\u7801\u5b9a\u4e49\u5982\u4e0b\uff08\u51fa\u81eaRedis\u6e90\u7801dict.h\uff09\uff1a"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    typedef struct dictEntry {\n        void *key;\n        union {\n            void *val;\n            uint64_t u64;\n            int64_t s64;\n            double d;\n        } v;\n        struct dictEntry *next;\n    } dictEntry;\n    \n    typedef struct dictType {\n        unsigned int (*hashFunction)(const void *key);\n        void *(*keyDup)(void *privdata, const void *key);\n        void *(*valDup)(void *privdata, const void *obj);\n        int (*keyCompare)(void *privdata, const void *key1, const void *key2);\n        void (*keyDestructor)(void *privdata, void *key);\n        void (*valDestructor)(void *privdata, void *obj);\n    } dictType;\n    \n    /* This is our hash table structure. Every dictionary has two of this as we\n     * implement incremental rehashing, for the old to the new table. */\n    typedef struct dictht {\n        dictEntry **table;\n        unsigned long size;\n        unsigned long sizemask;\n        unsigned long used;\n    } dictht;\n    \n    typedef struct dict {\n        dictType *type;\n        void *privdata;\n        dictht ht[2];\n        long rehashidx; /* rehashing not in progress if rehashidx == -1 */\n        int iterators; /* number of iterators currently running */\n    } dict;\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u4e3a\u4e86\u80fd\u66f4\u6e05\u695a\u5730\u5c55\u793adict\u7684\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\uff0c\u6211\u4eec\u7528\u4e00\u5f20\u7ed3\u6784\u56fe\u6765\u8868\u793a\u5b83\u3002\u5982\u4e0b\u3002"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://java-tutorial.oss-cn-shanghai.aliyuncs.com/20230406203512.png",alt:""})}),"\n",(0,i.jsx)(t.p,{children:"\u7ed3\u5408\u4e0a\u9762\u7684\u4ee3\u7801\u548c\u7ed3\u6784\u56fe\uff0c\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u51fadict\u7684\u7ed3\u6784\u3002\u4e00\u4e2adict\u7531\u5982\u4e0b\u82e5\u5e72\u9879\u7ec4\u6210\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u4e00\u4e2a\u6307\u5411dictType\u7ed3\u6784\u7684\u6307\u9488\uff08type\uff09\u3002\u5b83\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u65b9\u5f0f\u4f7f\u5f97dict\u7684key\u548cvalue\u80fd\u591f\u5b58\u50a8\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u4e00\u4e2a\u79c1\u6709\u6570\u636e\u6307\u9488\uff08privdata\uff09\u3002\u7531\u8c03\u7528\u8005\u5728\u521b\u5efadict\u7684\u65f6\u5019\u4f20\u8fdb\u6765\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u4e24\u4e2a\u54c8\u5e0c\u8868\uff08ht[2]\uff09\u3002\u53ea\u6709\u5728\u91cd\u54c8\u5e0c\u7684\u8fc7\u7a0b\u4e2d\uff0cht[0]\u548cht[1]\u624d\u90fd\u6709\u6548\u3002\u800c\u5728\u5e73\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709ht[0]\u6709\u6548\uff0cht[1]\u91cc\u9762\u6ca1\u6709\u4efb\u4f55\u6570\u636e\u3002\u4e0a\u56fe\u8868\u793a\u7684\u5c31\u662f\u91cd\u54c8\u5e0c\u8fdb\u884c\u5230\u4e2d\u95f4\u67d0\u4e00\u6b65\u65f6\u7684\u60c5\u51b5\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5f53\u524d\u91cd\u54c8\u5e0c\u7d22\u5f15\uff08rehashidx\uff09\u3002\u5982\u679crehashidx = -1\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u5728\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u4e2d\uff1b\u5426\u5219\uff0c\u8868\u793a\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u91cd\u54c8\u5e0c\uff0c\u4e14\u5b83\u7684\u503c\u8bb0\u5f55\u4e86\u5f53\u524d\u91cd\u54c8\u5e0c\u8fdb\u884c\u5230\u54ea\u4e00\u6b65\u4e86\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u904d\u5386\u7684iterator\u7684\u4e2a\u6570\u3002\u8fd9\u4e0d\u662f\u6211\u4eec\u73b0\u5728\u8ba8\u8bba\u7684\u91cd\u70b9\uff0c\u6682\u65f6\u5ffd\u7565\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"dictType\u7ed3\u6784\u5305\u542b\u82e5\u5e72\u51fd\u6570\u6307\u9488\uff0c\u7528\u4e8edict\u7684\u8c03\u7528\u8005\u5bf9\u6d89\u53cakey\u548cvalue\u7684\u5404\u79cd\u64cd\u4f5c\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002\u8fd9\u4e9b\u64cd\u4f5c\u5305\u542b\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"hashFunction\uff0c\u5bf9key\u8fdb\u884c\u54c8\u5e0c\u503c\u8ba1\u7b97\u7684\u54c8\u5e0c\u7b97\u6cd5\u3002"}),"\n",(0,i.jsx)(t.li,{children:"keyDup\u548cvalDup\uff0c\u5206\u522b\u5b9a\u4e49key\u548cvalue\u7684\u62f7\u8d1d\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u9700\u8981\u7684\u65f6\u5019\u5bf9key\u548cvalue\u8fdb\u884c\u6df1\u62f7\u8d1d\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f20\u9012\u5bf9\u8c61\u6307\u9488\u3002"}),"\n",(0,i.jsx)(t.li,{children:"keyCompare\uff0c\u5b9a\u4e49\u4e24\u4e2akey\u7684\u6bd4\u8f83\u64cd\u4f5c\uff0c\u5728\u6839\u636ekey\u8fdb\u884c\u67e5\u627e\u65f6\u4f1a\u7528\u5230\u3002"}),"\n",(0,i.jsx)(t.li,{children:"keyDestructor\u548cvalDestructor\uff0c\u5206\u522b\u5b9a\u4e49\u5bf9key\u548cvalue\u7684\u6790\u6784\u51fd\u6570\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u79c1\u6709\u6570\u636e\u6307\u9488\uff08privdata\uff09\u5c31\u662f\u5728dictType\u7684\u67d0\u4e9b\u64cd\u4f5c\u88ab\u8c03\u7528\u65f6\u4f1a\u4f20\u56de\u7ed9\u8c03\u7528\u8005\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u9700\u8981\u8be6\u7ec6\u5bdf\u770b\u7684\u662fdictht\u7ed3\u6784\u3002\u5b83\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u8868\u7684\u7ed3\u6784\uff0c\u7531\u5982\u4e0b\u82e5\u5e72\u9879\u7ec4\u6210\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u4e00\u4e2adictEntry\u6307\u9488\u6570\u7ec4\uff08table\uff09\u3002key\u7684\u54c8\u5e0c\u503c\u6700\u7ec8\u6620\u5c04\u5230\u8fd9\u4e2a\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\uff08\u5bf9\u5e94\u4e00\u4e2abucket\uff09\u3002\u5982\u679c\u591a\u4e2akey\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5c31\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u5c31\u62c9\u51fa\u4e00\u4e2adictEntry\u94fe\u8868\u3002"}),"\n",(0,i.jsx)(t.li,{children:"size\uff1a\u6807\u8bc6dictEntry\u6307\u9488\u6570\u7ec4\u7684\u957f\u5ea6\u3002\u5b83\u603b\u662f2\u7684\u6307\u6570\u3002"}),"\n",(0,i.jsx)(t.li,{children:"sizemask\uff1a\u7528\u4e8e\u5c06\u54c8\u5e0c\u503c\u6620\u5c04\u5230table\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002\u5b83\u7684\u503c\u7b49\u4e8e(size-1)\uff0c\u6bd4\u59827, 15, 31, 63\uff0c\u7b49\u7b49\uff0c\u4e5f\u5c31\u662f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u5404\u4e2abit\u51681\u7684\u6570\u5b57\u3002\u6bcf\u4e2akey\u5148\u7ecf\u8fc7hashFunction\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u8ba1\u7b97(\u54c8\u5e0c\u503c & sizemask)\u5f97\u5230\u5728table\u4e0a\u7684\u4f4d\u7f6e\u3002\u76f8\u5f53\u4e8e\u8ba1\u7b97\u53d6\u4f59(\u54c8\u5e0c\u503c % size)\u3002"}),"\n",(0,i.jsx)(t.li,{children:"used\uff1a\u8bb0\u5f55dict\u4e2d\u73b0\u6709\u7684\u6570\u636e\u4e2a\u6570\u3002\u5b83\u4e0esize\u7684\u6bd4\u503c\u5c31\u662f\u88c5\u8f7d\u56e0\u5b50\uff08load factor\uff09\u3002\u8fd9\u4e2a\u6bd4\u503c\u8d8a\u5927\uff0c\u54c8\u5e0c\u503c\u51b2\u7a81\u6982\u7387\u8d8a\u9ad8\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"dictEntry\u7ed3\u6784\u4e2d\u5305\u542bk, v\u548c\u6307\u5411\u94fe\u8868\u4e0b\u4e00\u9879\u7684next\u6307\u9488\u3002k\u662fvoid\u6307\u9488\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u7c7b\u578b\u3002v\u662f\u4e2aunion\uff0c\u5f53\u5b83\u7684\u503c\u662fuint64_t\u3001int64_t\u6216double\u7c7b\u578b\u65f6\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u989d\u5916\u7684\u5b58\u50a8\uff0c\u8fd9\u6709\u5229\u4e8e\u51cf\u5c11\u5185\u5b58\u788e\u7247\u3002\u5f53\u7136\uff0cv\u4e5f\u53ef\u4ee5\u662fvoid\u6307\u9488\uff0c\u4ee5\u4fbf\u80fd\u5b58\u50a8\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(t.h2,{id:"dict\u7684\u521b\u5efadictcreate",children:"dict\u7684\u521b\u5efa\uff08dictCreate\uff09"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    dict *dictCreate(dictType *type,\n            void *privDataPtr)\n    {\n        dict *d = zmalloc(sizeof(*d));\n    \n        _dictInit(d,type,privDataPtr);\n        return d;\n    }\n    \n    int _dictInit(dict *d, dictType *type,\n            void *privDataPtr)\n    {\n        _dictReset(&d->ht[0]);\n        _dictReset(&d->ht[1]);\n        d->type = type;\n        d->privdata = privDataPtr;\n        d->rehashidx = -1;\n        d->iterators = 0;\n        return DICT_OK;\n    }\n    \n    static void _dictReset(dictht *ht)\n    {\n        ht->table = NULL;\n        ht->size = 0;\n        ht->sizemask = 0;\n        ht->used = 0;\n    }\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"dictCreate\u4e3adict\u7684\u6570\u636e\u7ed3\u6784\u5206\u914d\u7a7a\u95f4\u5e76\u4e3a\u5404\u4e2a\u53d8\u91cf\u8d4b\u521d\u503c\u3002\u5176\u4e2d\u4e24\u4e2a\u54c8\u5e0c\u8868ht[0]\u548cht[1]\u8d77\u59cb\u90fd\u6ca1\u6709\u5206\u914d\u7a7a\u95f4\uff0ctable\u6307\u9488\u90fd\u8d4b\u4e3aNULL\u3002\u8fd9\u610f\u5473\u7740\u8981\u7b49\u7b2c\u4e00\u4e2a\u6570\u636e\u63d2\u5165\u65f6\u624d\u4f1a\u771f\u6b63\u5206\u914d\u7a7a\u95f4\u3002"}),"\n",(0,i.jsx)(t.h2,{id:"dict\u7684\u67e5\u627edictfind",children:"dict\u7684\u67e5\u627e\uff08dictFind\uff09"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    //define dictIsRehashing(d) ((d)->rehashidx != -1)\n    \n    dictEntry *dictFind(dict *d, const void *key)\n    {\n        dictEntry *he;\n        unsigned int h, idx, table;\n    \n        if (d->ht[0].used + d->ht[1].used == 0) return NULL; /* dict is empty */\n        if (dictIsRehashing(d)) _dictRehashStep(d);\n        h = dictHashKey(d, key);\n        for (table = 0; table <= 1; table++) {\n            idx = h & d->ht[table].sizemask;\n            he = d->ht[table].table[idx];\n            while(he) {\n                if (key==he->key || dictCompareKeys(d, key, he->key))\n                    return he;\n                he = he->next;\n            }\n            if (!dictIsRehashing(d)) return NULL;\n        }\n        return NULL;\n    }\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u4e0a\u8ff0dictFind\u7684\u6e90\u7801\uff0c\u6839\u636edict\u5f53\u524d\u662f\u5426\u6b63\u5728\u91cd\u54c8\u5e0c\uff0c\u4f9d\u6b21\u505a\u4e86\u8fd9\u4e48\u51e0\u4ef6\u4e8b\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u5982\u679c\u5f53\u524d\u6b63\u5728\u8fdb\u884c\u91cd\u54c8\u5e0c\uff0c\u90a3\u4e48\u5c06\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u5411\u524d\u63a8\u8fdb\u4e00\u6b65\uff08\u5373\u8c03\u7528_dictRehashStep\uff09\u3002\u5b9e\u9645\u4e0a\uff0c\u9664\u4e86\u67e5\u627e\uff0c\u63d2\u5165\u548c\u5220\u9664\u4e5f\u90fd\u4f1a\u89e6\u53d1\u8fd9\u4e00\u52a8\u4f5c\u3002\u8fd9\u5c31\u5c06\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u5206\u6563\u5230\u5404\u4e2a\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u4e2d\u53bb\u4e86\uff0c\u800c\u4e0d\u662f\u96c6\u4e2d\u5728\u67d0\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u4e00\u6b21\u6027\u505a\u5b8c\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u8ba1\u7b97key\u7684\u54c8\u5e0c\u503c\uff08\u8c03\u7528dictHashKey\uff0c\u91cc\u9762\u7684\u5b9e\u73b0\u4f1a\u8c03\u7528\u524d\u9762\u63d0\u5230\u7684hashFunction\uff09\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5148\u5728\u7b2c\u4e00\u4e2a\u54c8\u5e0c\u8868ht[0]\u4e0a\u8fdb\u884c\u67e5\u627e\u3002\u5728table\u6570\u7ec4\u4e0a\u5b9a\u4f4d\u5230\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff08\u5982\u524d\u6240\u8ff0\uff0c\u901a\u8fc7\u54c8\u5e0c\u503c\u4e0esizemask\u8fdb\u884c\u6309\u4f4d\u4e0e\uff09\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u7684dictEntry\u94fe\u8868\u4e0a\u8fdb\u884c\u67e5\u627e\u3002\u67e5\u627e\u7684\u65f6\u5019\u9700\u8981\u5bf9key\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u65f6\u5019\u8c03\u7528dictCompareKeys\uff0c\u5b83\u91cc\u9762\u7684\u5b9e\u73b0\u4f1a\u8c03\u7528\u5230\u524d\u9762\u63d0\u5230\u7684keyCompare\u3002\u5982\u679c\u627e\u5230\u5c31\u8fd4\u56de\u8be5\u9879\u3002\u5426\u5219\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b65\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5224\u65ad\u5f53\u524d\u662f\u5426\u5728\u91cd\u54c8\u5e0c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5728ht[0]\u4e0a\u7684\u67e5\u627e\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7ed3\u679c\uff08\u6ca1\u627e\u5230\uff0c\u8fd4\u56deNULL\uff09\u3002\u5426\u5219\uff0c\u5728ht[1]\u4e0a\u8fdb\u884c\u67e5\u627e\uff08\u8fc7\u7a0b\u4e0e\u4e0a\u4e00\u6b65\u76f8\u540c\uff09\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u4e0b\u9762\u6211\u4eec\u6709\u5fc5\u8981\u770b\u4e00\u4e0b\u589e\u91cf\u5f0f\u91cd\u54c8\u5e0c\u7684_dictRehashStep\u7684\u5b9e\u73b0\u3002"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    static void _dictRehashStep(dict *d) {\n        if (d->iterators == 0) dictRehash(d,1);\n    }\n    \n    int dictRehash(dict *d, int n) {\n        int empty_visits = n*10; /* Max number of empty buckets to visit. */\n        if (!dictIsRehashing(d)) return 0;\n    \n        while(n-- && d->ht[0].used != 0) {\n            dictEntry *de, *nextde;\n    \n            /* Note that rehashidx can't overflow as we are sure there are more\n             * elements because ht[0].used != 0 */\n            assert(d->ht[0].size > (unsigned long)d->rehashidx);\n            while(d->ht[0].table[d->rehashidx] == NULL) {\n                d->rehashidx++;\n                if (--empty_visits == 0) return 1;\n            }\n            de = d->ht[0].table[d->rehashidx];\n            /* Move all the keys in this bucket from the old to the new hash HT */\n            while(de) {\n                unsigned int h;\n    \n                nextde = de->next;\n                /* Get the index in the new hash table */\n                h = dictHashKey(d, de->key) & d->ht[1].sizemask;\n                de->next = d->ht[1].table[h];\n                d->ht[1].table[h] = de;\n                d->ht[0].used--;\n                d->ht[1].used++;\n                de = nextde;\n            }\n            d->ht[0].table[d->rehashidx] = NULL;\n            d->rehashidx++;\n        }\n    \n        /* Check if we already rehashed the whole table... */\n        if (d->ht[0].used == 0) {\n            zfree(d->ht[0].table);\n            d->ht[0] = d->ht[1];\n            _dictReset(&d->ht[1]);\n            d->rehashidx = -1;\n            return 0;\n        }\n    \n        /* More to rehash... */\n        return 1;\n    }\n"})}),"\n",(0,i.jsx)(t.p,{children:"dictRehash\u6bcf\u6b21\u5c06\u91cd\u54c8\u5e0c\u81f3\u5c11\u5411\u524d\u63a8\u8fdbn\u6b65\uff08\u9664\u975e\u4e0d\u5230n\u6b65\u6574\u4e2a\u91cd\u54c8\u5e0c\u5c31\u7ed3\u675f\u4e86\uff09\uff0c\u6bcf\u4e00\u6b65\u90fd\u5c06ht[0]\u4e0a\u67d0\u4e00\u4e2abucket\uff08\u5373\u4e00\u4e2adictEntry\u94fe\u8868\uff09\u4e0a\u7684\u6bcf\u4e00\u4e2adictEntry\u79fb\u52a8\u5230ht[1]\u4e0a\uff0c\u5b83\u5728ht[1]\u4e0a\u7684\u65b0\u4f4d\u7f6e\u6839\u636eht[1]\u7684sizemask\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\u3002rehashidx\u8bb0\u5f55\u4e86\u5f53\u524d\u5c1a\u672a\u8fc1\u79fb\uff08\u6709\u5f85\u8fc1\u79fb\uff09\u7684ht[0]\u7684bucket\u4f4d\u7f6e\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u5982\u679cdictRehash\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0crehashidx\u6307\u5411\u7684bucket\u91cc\u4e00\u4e2adictEntry\u4e5f\u6ca1\u6709\uff0c\u90a3\u4e48\u5b83\u5c31\u6ca1\u6709\u53ef\u8fc1\u79fb\u7684\u6570\u636e\u3002\u8fd9\u65f6\u5b83\u5c1d\u8bd5\u5728ht[0].table\u6570\u7ec4\u4e2d\u4e0d\u65ad\u5411\u540e\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u4e0b\u4e00\u4e2a\u5b58\u6709\u6570\u636e\u7684bucket\u4f4d\u7f6e\u3002\u5982\u679c\u4e00\u76f4\u627e\u4e0d\u5230\uff0c\u5219\u6700\u591a\u8d70n*10\u6b65\uff0c\u672c\u6b21\u91cd\u54c8\u5e0c\u6682\u544a\u7ed3\u675f\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u6700\u540e\uff0c\u5982\u679cht[0]\u4e0a\u7684\u6570\u636e\u90fd\u8fc1\u79fb\u5230ht[1]\u4e0a\u4e86\uff08\u5373d->ht[0].used == 0\uff09\uff0c\u90a3\u4e48\u6574\u4e2a\u91cd\u54c8\u5e0c\u7ed3\u675f\uff0cht[0]\u53d8\u6210ht[1]\u7684\u5185\u5bb9\uff0c\u800cht[1]\u91cd\u7f6e\u4e3a\u7a7a\u3002"}),"\n",(0,i.jsx)(t.p,{children:"\u6839\u636e\u4ee5\u4e0a\u5bf9\u4e8e\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u7684\u5206\u6790\uff0c\u6211\u4eec\u5bb9\u6613\u770b\u51fa\uff0c\u672c\u6587\u524d\u9762\u7684dict\u7ed3\u6784\u56fe\u4e2d\u6240\u5c55\u793a\u7684\u6b63\u662frehashidx=2\u65f6\u7684\u60c5\u51b5\uff0c\u524d\u9762\u4e24\u4e2abucket\uff08ht[0].table[0]\u548cht[0].table[1]\uff09\u90fd\u5df2\u7ecf\u8fc1\u79fb\u5230ht[1]\u4e0a\u53bb\u4e86\u3002"}),"\n",(0,i.jsx)(t.h2,{id:"dict\u7684\u63d2\u5165dictadd\u548cdictreplace",children:"dict\u7684\u63d2\u5165\uff08dictAdd\u548cdictReplace\uff09"}),"\n",(0,i.jsx)(t.p,{children:"dictAdd\u63d2\u5165\u65b0\u7684\u4e00\u5bf9key\u548cvalue\uff0c\u5982\u679ckey\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u63d2\u5165\u5931\u8d25\u3002"}),"\n",(0,i.jsx)(t.p,{children:"dictReplace\u4e5f\u662f\u63d2\u5165\u4e00\u5bf9key\u548cvalue\uff0c\u4e0d\u8fc7\u5728key\u5b58\u5728\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u66f4\u65b0value\u3002"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    int dictAdd(dict *d, void *key, void *val)\n    {\n        dictEntry *entry = dictAddRaw(d,key);\n    \n        if (!entry) return DICT_ERR;\n        dictSetVal(d, entry, val);\n        return DICT_OK;\n    }\n    \n    dictEntry *dictAddRaw(dict *d, void *key)\n    {\n        int index;\n        dictEntry *entry;\n        dictht *ht;\n    \n        if (dictIsRehashing(d)) _dictRehashStep(d);\n    \n        /* Get the index of the new element, or -1 if\n         * the element already exists. */\n        if ((index = _dictKeyIndex(d, key)) == -1)\n            return NULL;\n    \n        /* Allocate the memory and store the new entry.\n         * Insert the element in top, with the assumption that in a database\n         * system it is more likely that recently added entries are accessed\n         * more frequently. */\n        ht = dictIsRehashing(d) ? &d->ht[1] : &d->ht[0];\n        entry = zmalloc(sizeof(*entry));\n        entry->next = ht->table[index];\n        ht->table[index] = entry;\n        ht->used++;\n    \n        /* Set the hash entry fields. */\n        dictSetKey(d, entry, key);\n        return entry;\n    }\n    \n    static int _dictKeyIndex(dict *d, const void *key)\n    {\n        unsigned int h, idx, table;\n        dictEntry *he;\n    \n        /* Expand the hash table if needed */\n        if (_dictExpandIfNeeded(d) == DICT_ERR)\n            return -1;\n        /* Compute the key hash value */\n        h = dictHashKey(d, key);\n        for (table = 0; table <= 1; table++) {\n            idx = h & d->ht[table].sizemask;\n            /* Search if this slot does not already contain the given key */\n            he = d->ht[table].table[idx];\n            while(he) {\n                if (key==he->key || dictCompareKeys(d, key, he->key))\n                    return -1;\n                he = he->next;\n            }\n            if (!dictIsRehashing(d)) break;\n        }\n        return idx;\n    }\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u4ee5\u4e0a\u662fdictAdd\u7684\u5173\u952e\u5b9e\u73b0\u4ee3\u7801\u3002\u6211\u4eec\u4e3b\u8981\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"\u5b83\u4e5f\u4f1a\u89e6\u53d1\u63a8\u8fdb\u4e00\u6b65\u91cd\u54c8\u5e0c\uff08_dictRehashStep\uff09\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5982\u679c\u6b63\u5728\u91cd\u54c8\u5e0c\u4e2d\uff0c\u5b83\u4f1a\u628a\u6570\u636e\u63d2\u5165\u5230ht[1]\uff1b\u5426\u5219\u63d2\u5165\u5230ht[0]\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5728\u5bf9\u5e94\u7684bucket\u4e2d\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u603b\u662f\u63d2\u5165\u5230dictEntry\u7684\u5934\u90e8\u3002\u56e0\u4e3a\u65b0\u6570\u636e\u63a5\u4e0b\u6765\u88ab\u8bbf\u95ee\u7684\u6982\u7387\u53ef\u80fd\u6bd4\u8f83\u9ad8\uff0c\u8fd9\u6837\u518d\u6b21\u67e5\u627e\u5b83\u65f6\u5c31\u6bd4\u8f83\u6b21\u6570\u8f83\u5c11\u3002"}),"\n",(0,i.jsx)(t.li,{children:"_dictKeyIndex\u5728dict\u4e2d\u5bfb\u627e\u63d2\u5165\u4f4d\u7f6e\u3002\u5982\u679c\u4e0d\u5728\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u53ea\u67e5\u627eht[0]\uff1b\u5426\u5219\u67e5\u627eht[0]\u548cht[1]\u3002"}),"\n",(0,i.jsx)(t.li,{children:"_dictKeyIndex\u53ef\u80fd\u89e6\u53d1dict\u5185\u5b58\u6269\u5c55\uff08_dictExpandIfNeeded\uff0c\u5b83\u5c06\u54c8\u5e0c\u8868\u957f\u5ea6\u6269\u5c55\u4e3a\u539f\u6765\u4e24\u500d\uff0c\u5177\u4f53\u8bf7\u53c2\u8003dict.c\u4e2d\u6e90\u7801\uff09\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"dictReplace\u5728dictAdd\u57fa\u7840\u4e0a\u5b9e\u73b0\uff0c\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"    int dictReplace(dict *d, void *key, void *val)\n    {\n        dictEntry *entry, auxentry;\n    \n        /* Try to add the element. If the key\n         * does not exists dictAdd will suceed. */\n        if (dictAdd(d, key, val) == DICT_OK)\n            return 1;\n        /* It already exists, get the entry */\n        entry = dictFind(d, key);\n        /* Set the new value and free the old one. Note that it is important\n         * to do that in this order, as the value may just be exactly the same\n         * as the previous one. In this context, think to reference counting,\n         * you want to increment (set), and then decrement (free), and not the\n         * reverse. */\n        auxentry = *entry;\n        dictSetVal(d, entry, val);\n        dictFreeVal(d, &auxentry);\n        return 0;\n    }\n"})}),"\n",(0,i.jsx)(t.p,{children:"\u5728key\u5df2\u7ecf\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0cdictReplace\u4f1a\u540c\u65f6\u8c03\u7528dictAdd\u548cdictFind\uff0c\u8fd9\u5176\u5b9e\u76f8\u5f53\u4e8e\u4e24\u6b21\u67e5\u627e\u8fc7\u7a0b\u3002\u8fd9\u91ccRedis\u7684\u4ee3\u7801\u4e0d\u591f\u4f18\u5316\u3002"}),"\n",(0,i.jsx)(t.h2,{id:"dict\u7684\u5220\u9664dictdelete",children:"dict\u7684\u5220\u9664\uff08dictDelete\uff09"}),"\n",(0,i.jsx)(t.p,{children:"dictDelete\u7684\u6e90\u7801\u8fd9\u91cc\u5ffd\u7565\uff0c\u5177\u4f53\u8bf7\u53c2\u8003dict.c\u3002\u9700\u8981\u7a0d\u52a0\u6ce8\u610f\u7684\u662f\uff1a"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"dictDelete\u4e5f\u4f1a\u89e6\u53d1\u63a8\u8fdb\u4e00\u6b65\u91cd\u54c8\u5e0c\uff08_dictRehashStep\uff09"}),"\n",(0,i.jsx)(t.li,{children:"\u5982\u679c\u5f53\u524d\u4e0d\u5728\u91cd\u54c8\u5e0c\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u53ea\u5728ht[0]\u4e2d\u67e5\u627e\u8981\u5220\u9664\u7684key\uff1b\u5426\u5219ht[0]\u548cht[1]\u5b83\u90fd\u8981\u67e5\u627e\u3002"}),"\n",(0,i.jsx)(t.li,{children:"\u5220\u9664\u6210\u529f\u540e\u4f1a\u8c03\u7528key\u548cvalue\u7684\u6790\u6784\u51fd\u6570\uff08keyDestructor\u548cvalDestructor\uff09\u3002"}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"dict\u7684\u5b9e\u73b0\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u7b80\u5355\uff0c\u672c\u6587\u5c31\u4ecb\u7ecd\u5230\u8fd9\u3002\u5728\u4e0b\u4e00\u7bc7\u4e2d\u6211\u4eec\u5c06\u4f1a\u4ecb\u7ecdRedis\u4e2d\u52a8\u6001\u5b57\u7b26\u4e32\u7684\u5b9e\u73b0\u2014\u2014sds\uff0c\u656c\u8bf7\u671f\u5f85\u3002"})]})}function o(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},88672:(e,t,n)=>{n.d(t,{Z:()=>h,a:()=>c});var i=n(50959);const d={},s=i.createContext(d);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);