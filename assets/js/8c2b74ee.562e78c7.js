"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[3171],{16023:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>h,contentTitle:()=>s,default:()=>o,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=t(11527),l=t(88672);const i={},s=void 0,r={id:"Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790",title:"Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790",description:"\u672c\u6587\u8f6c\u81ea\uff1ahttps://www.javadoop.com/",source:"@site/docs/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790.md",sourceDirName:"Java/concurrency",slug:"/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790",permalink:"/code-note-blog/docs/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684HashMap\u548cConcurrentHashMap\u5168\u89e3\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"java",previous:{title:"Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684\u9501Lock\u548csynchronized",permalink:"/code-note-blog/docs/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJava\u4e2d\u7684\u9501Lock\u548csynchronized"},next:{title:"Java\u5e76\u53d1\u6307\u5357\uff1aJMM\u4e2d\u7684final\u5173\u952e\u5b57\u89e3\u6790",permalink:"/code-note-blog/docs/Java/concurrency/Java\u5e76\u53d1\u6307\u5357\uff1aJMM\u4e2d\u7684final\u5173\u952e\u5b57\u89e3\u6790"}},h={},d=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"Java7 HashMap",id:"java7-hashmap",level:2},{value:"put \u8fc7\u7a0b\u5206\u6790",id:"put-\u8fc7\u7a0b\u5206\u6790",level:3},{value:"\u6570\u7ec4\u521d\u59cb\u5316",id:"\u6570\u7ec4\u521d\u59cb\u5316",level:4},{value:"\u8ba1\u7b97\u5177\u4f53\u6570\u7ec4\u4f4d\u7f6e",id:"\u8ba1\u7b97\u5177\u4f53\u6570\u7ec4\u4f4d\u7f6e",level:4},{value:"\u6dfb\u52a0\u8282\u70b9\u5230\u94fe\u8868\u4e2d",id:"\u6dfb\u52a0\u8282\u70b9\u5230\u94fe\u8868\u4e2d",level:4},{value:"\u6570\u7ec4\u6269\u5bb9",id:"\u6570\u7ec4\u6269\u5bb9",level:4},{value:"get \u8fc7\u7a0b\u5206\u6790",id:"get-\u8fc7\u7a0b\u5206\u6790",level:3},{value:"Java7 ConcurrentHashMap",id:"java7-concurrenthashmap",level:2},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316",level:3},{value:"put \u8fc7\u7a0b\u5206\u6790",id:"put-\u8fc7\u7a0b\u5206\u6790-1",level:3},{value:"\u521d\u59cb\u5316\u69fd: ensureSegment",id:"\u521d\u59cb\u5316\u69fd-ensuresegment",level:4},{value:"\u83b7\u53d6\u5199\u5165\u9501: scanAndLockForPut",id:"\u83b7\u53d6\u5199\u5165\u9501-scanandlockforput",level:4},{value:"\u6269\u5bb9: rehash",id:"\u6269\u5bb9-rehash",level:4},{value:"get \u8fc7\u7a0b\u5206\u6790",id:"get-\u8fc7\u7a0b\u5206\u6790-1",level:3},{value:"\u5e76\u53d1\u95ee\u9898\u5206\u6790",id:"\u5e76\u53d1\u95ee\u9898\u5206\u6790",level:3},{value:"Java8 HashMap",id:"java8-hashmap",level:2},{value:"put \u8fc7\u7a0b\u5206\u6790",id:"put-\u8fc7\u7a0b\u5206\u6790-2",level:3},{value:"\u6570\u7ec4\u6269\u5bb9",id:"\u6570\u7ec4\u6269\u5bb9-1",level:4},{value:"get \u8fc7\u7a0b\u5206\u6790",id:"get-\u8fc7\u7a0b\u5206\u6790-2",level:3},{value:"Java8 ConcurrentHashMap",id:"java8-concurrenthashmap",level:2},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316-1",level:3},{value:"put \u8fc7\u7a0b\u5206\u6790",id:"put-\u8fc7\u7a0b\u5206\u6790-3",level:3},{value:"\u521d\u59cb\u5316\u6570\u7ec4\uff1ainitTable",id:"\u521d\u59cb\u5316\u6570\u7ec4inittable",level:4},{value:"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811: treeifyBin",id:"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811-treeifybin",level:4},{value:"\u6269\u5bb9\uff1atryPresize",id:"\u6269\u5bb9trypresize",level:3},{value:"\u6570\u636e\u8fc1\u79fb\uff1atransfer",id:"\u6570\u636e\u8fc1\u79fbtransfer",level:4},{value:"get \u8fc7\u7a0b\u5206\u6790",id:"get-\u8fc7\u7a0b\u5206\u6790-3",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["\u672c\u6587\u8f6c\u81ea\uff1a",(0,a.jsx)(e.a,{href:"https://www.javadoop.com/",children:"https://www.javadoop.com/"})]}),"\n",(0,a.jsx)(e.p,{children:"\u672c\u7cfb\u5217\u6587\u7ae0\u5c06\u6574\u7406\u5230\u6211\u5728GitHub\u4e0a\u7684\u300aJava\u9762\u8bd5\u6307\u5357\u300b\u4ed3\u5e93\uff0c\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\u8bf7\u5230\u6211\u7684\u4ed3\u5e93\u91cc\u67e5\u770b"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://github.com/h2pl/Java-Tutorial",children:"https://github.com/h2pl/Java-Tutorial"})}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u559c\u6b22\u7684\u8bdd\u9ebb\u70e6\u70b9\u4e0bStar\u54c8"}),"\n",(0,a.jsx)(e.p,{children:"\u6587\u7ae0\u540c\u6b65\u53d1\u4e8e\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff1a"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"http://www.how2playlife.com",children:"www.how2playlife.com"})}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u672c\u6587\u662f\u5fae\u4fe1\u516c\u4f17\u53f7\u3010Java\u6280\u672f\u6c5f\u6e56\u3011\u7684\u300aJava\u5e76\u53d1\u6307\u5357\u300b\u5176\u4e2d\u4e00\u7bc7\uff0c\u672c\u6587\u5927\u90e8\u5206\u5185\u5bb9\u6765\u6e90\u4e8e\u7f51\u7edc\uff0c\u4e3a\u4e86\u628a\u672c\u6587\u4e3b\u9898\u8bb2\u5f97\u6e05\u6670\u900f\u5f7b\uff0c\u4e5f\u6574\u5408\u4e86\u5f88\u591a\u6211\u8ba4\u4e3a\u4e0d\u9519\u7684\u6280\u672f\u535a\u5ba2\u5185\u5bb9\uff0c\u5f15\u7528\u5176\u4e2d\u4e86\u4e00\u4e9b\u6bd4\u8f83\u597d\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u8bf7\u8054\u7cfb\u4f5c\u8005\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8be5\u7cfb\u5217\u535a\u6587\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u5168\u9762\u6df1\u5165\u5730\u5b66\u4e60Java\u5e76\u53d1\u6280\u672f\uff0c\u4eceJava\u591a\u7ebf\u7a0b\u57fa\u7840\uff0c\u518d\u5230\u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4eceJava\u5e76\u53d1\u5305\u7684\u5165\u95e8\u548c\u5b9e\u6218\uff0c\u518d\u5230JUC\u7684\u6e90\u7801\u5256\u6790\uff0c\u4e00\u6b65\u6b65\u5730\u5b66\u4e60Java\u5e76\u53d1\u7f16\u7a0b\uff0c\u5e76\u4e0a\u624b\u8fdb\u884c\u5b9e\u6218\uff0c\u4ee5\u4fbf\u8ba9\u4f60\u66f4\u5b8c\u6574\u5730\u4e86\u89e3\u6574\u4e2aJava\u5e76\u53d1\u7f16\u7a0b\u77e5\u8bc6\u4f53\u7cfb\uff0c\u5f62\u6210\u81ea\u5df1\u7684\u77e5\u8bc6\u6846\u67b6\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4e3a\u4e86\u66f4\u597d\u5730\u603b\u7ed3\u548c\u68c0\u9a8c\u4f60\u7684\u5b66\u4e60\u6210\u679c\uff0c\u672c\u7cfb\u5217\u6587\u7ae0\u4e5f\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u5bf9\u5e94\u7684\u9762\u8bd5\u9898\u4ee5\u53ca\u53c2\u8003\u7b54\u6848\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c\u5bf9\u672c\u7cfb\u5217\u6587\u7ae0\u6709\u4ec0\u4e48\u5efa\u8bae\uff0c\u6216\u8005\u662f\u6709\u4ec0\u4e48\u7591\u95ee\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7\u3010Java\u6280\u672f\u6c5f\u6e56\u3011\u8054\u7cfb\u4f5c\u8005\uff0c\u6b22\u8fce\u4f60\u53c2\u4e0e\u672c\u7cfb\u5217\u535a\u6587\u7684\u521b\u4f5c\u548c\u4fee\u8ba2\u3002"}),"\n",(0,a.jsx)(e.h2,{id:"\u524d\u8a00",children:"\u524d\u8a00"}),"\n",(0,a.jsx)(e.p,{children:'\u4eca\u5929\u53d1\u4e00\u7bc7"\u6c34\u6587"\uff0c\u53ef\u80fd\u5f88\u591a\u8bfb\u8005\u90fd\u4f1a\u8868\u793a\u4e0d\u7406\u89e3\uff0c\u4e0d\u8fc7\u6211\u60f3\u628a\u5b83\u4f5c\u4e3a\u5e76\u53d1\u5e8f\u5217\u6587\u7ae0\u4e2d\u4e0d\u53ef\u7f3a\u5c11\u7684\u4e00\u5757\u6765\u4ecb\u7ecd\u3002\u672c\u6765\u4ee5\u4e3a\u82b1\u4e0d\u4e86\u591a\u5c11\u65f6\u95f4\u7684\uff0c\u4e0d\u8fc7\u6700\u7ec8\u8fd8\u662f\u6295\u5165\u4e86\u633a\u591a\u65f6\u95f4\u6765\u5b8c\u6210\u8fd9\u7bc7\u6587\u7ae0\u7684\u3002'}),"\n",(0,a.jsx)(e.p,{children:"\u7f51\u4e0a\u5173\u4e8e HashMap \u548c ConcurrentHashMap \u7684\u6587\u7ae0\u786e\u5b9e\u4e0d\u5c11\uff0c\u4e0d\u8fc7\u7f3a\u65a4\u5c11\u4e24\u7684\u6587\u7ae0\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u624d\u60f3\u81ea\u5df1\u4e5f\u5199\u4e00\u7bc7\uff0c\u628a\u7ec6\u8282\u8bf4\u6e05\u695a\u8bf4\u900f\uff0c\u5c24\u5176\u50cf Java8 \u4e2d\u7684 ConcurrentHashMap\uff0c\u5927\u90e8\u5206\u6587\u7ae0\u90fd\u8bf4\u4e0d\u6e05\u695a\u3002\u7ec8\u5f52\u662f\u5e0c\u671b\u80fd\u964d\u4f4e\u5927\u5bb6\u5b66\u4e60\u7684\u6210\u672c\uff0c\u4e0d\u5e0c\u671b\u5927\u5bb6\u5230\u5904\u627e\u5404\u79cd\u4e0d\u662f\u5f88\u9760\u8c31\u7684\u6587\u7ae0\uff0c\u770b\u5b8c\u4e00\u7bc7\u53c8\u4e00\u7bc7\uff0c\u53ef\u662f\u8fd8\u662f\u6a21\u6a21\u7cca\u7cca\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u9605\u8bfb\u5efa\u8bae\uff1a\u56db\u8282\u57fa\u672c\u4e0a\u53ef\u4ee5\u8fdb\u884c\u72ec\u7acb\u9605\u8bfb\uff0c\u5efa\u8bae\u521d\u5b66\u8005\u53ef\u6309\u7167 Java7 HashMap -> Java7 ConcurrentHashMap -> Java8 HashMap -> Java8 ConcurrentHashMap \u987a\u5e8f\u8fdb\u884c\u9605\u8bfb\uff0c\u53ef\u9002\u5f53\u964d\u4f4e\u9605\u8bfb\u95e8\u69db\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u9605\u8bfb\u524d\u63d0\uff1a\u672c\u6587\u5206\u6790\u7684\u662f\u6e90\u7801\uff0c\u6240\u4ee5\u81f3\u5c11\u8bfb\u8005\u8981\u719f\u6089\u5b83\u4eec\u7684\u63a5\u53e3\u4f7f\u7528\uff0c\u540c\u65f6\uff0c\u5bf9\u4e8e\u5e76\u53d1\uff0c\u8bfb\u8005\u81f3\u5c11\u8981\u77e5\u9053 CAS\u3001ReentrantLock\u3001UNSAFE \u64cd\u4f5c\u8fd9\u51e0\u4e2a\u57fa\u672c\u7684\u77e5\u8bc6\uff0c\u6587\u4e2d\u4e0d\u4f1a\u5bf9\u8fd9\u4e9b\u77e5\u8bc6\u8fdb\u884c\u4ecb\u7ecd\u3002Java8 \u7528\u5230\u4e86\u7ea2\u9ed1\u6811\uff0c\u4e0d\u8fc7\u672c\u6587\u4e0d\u4f1a\u8fdb\u884c\u5c55\u5f00\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u8bf7\u81ea\u884c\u67e5\u627e\u76f8\u5173\u8d44\u6599\u3002"}),"\n",(0,a.jsx)(e.h2,{id:"java7-hashmap",children:"Java7 HashMap"}),"\n",(0,a.jsx)(e.p,{children:"HashMap \u662f\u6700\u7b80\u5355\u7684\uff0c\u4e00\u6765\u6211\u4eec\u975e\u5e38\u719f\u6089\uff0c\u4e8c\u6765\u5c31\u662f\u5b83\u4e0d\u652f\u6301\u5e76\u53d1\u64cd\u4f5c\uff0c\u6240\u4ee5\u6e90\u7801\u4e5f\u975e\u5e38\u7b80\u5355\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u9996\u5148\uff0c\u6211\u4eec\u7528\u4e0b\u9762\u8fd9\u5f20\u56fe\u6765\u4ecb\u7ecd HashMap \u7684\u7ed3\u6784\u3002"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://www.javadoop.com/blogimages/map/1.png",alt:"1"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u4ec5\u4ec5\u662f\u793a\u610f\u56fe\uff0c\u56e0\u4e3a\u6ca1\u6709\u8003\u8651\u5230\u6570\u7ec4\u8981\u6269\u5bb9\u7684\u60c5\u51b5\uff0c\u5177\u4f53\u7684\u540e\u9762\u518d\u8bf4\u3002"}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5927\u65b9\u5411\u4e0a\uff0cHashMap \u91cc\u9762\u662f\u4e00\u4e2a",(0,a.jsx)(e.strong,{children:"\u6570\u7ec4"}),"\uff0c\u7136\u540e\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a",(0,a.jsx)(e.strong,{children:"\u5355\u5411\u94fe\u8868"}),"\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u4e0a\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u7eff\u8272\u7684\u5b9e\u4f53\u662f\u5d4c\u5957\u7c7b Entry \u7684\u5b9e\u4f8b\uff0cEntry \u5305\u542b\u56db\u4e2a\u5c5e\u6027\uff1akey, value, hash \u503c\u548c\u7528\u4e8e\u5355\u5411\u94fe\u8868\u7684 next\u3002"}),"\n",(0,a.jsx)(e.p,{children:"capacity\uff1a\u5f53\u524d\u6570\u7ec4\u5bb9\u91cf\uff0c\u59cb\u7ec8\u4fdd\u6301 2^n\uff0c\u53ef\u4ee5\u6269\u5bb9\uff0c\u6269\u5bb9\u540e\u6570\u7ec4\u5927\u5c0f\u4e3a\u5f53\u524d\u7684 2 \u500d\u3002"}),"\n",(0,a.jsx)(e.p,{children:"loadFactor\uff1a\u8d1f\u8f7d\u56e0\u5b50\uff0c\u9ed8\u8ba4\u4e3a 0.75\u3002"}),"\n",(0,a.jsx)(e.p,{children:"threshold\uff1a\u6269\u5bb9\u7684\u9608\u503c\uff0c\u7b49\u4e8e capacity * loadFactor"}),"\n",(0,a.jsx)(e.h3,{id:"put-\u8fc7\u7a0b\u5206\u6790",children:"put \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u8ddf\u7740\u4ee3\u7801\u8d70\u4e00\u904d\u5427\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V put(K key, V value) {\n    // \u5f53\u63d2\u5165\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u521d\u59cb\u5316\u6570\u7ec4\u5927\u5c0f\n    if (table == EMPTY_TABLE) {\n        inflateTable(threshold);\n    }\n    // \u5982\u679c key \u4e3a null\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u5f80\u91cc\u770b\uff0c\u6700\u7ec8\u4f1a\u5c06\u8fd9\u4e2a entry \u653e\u5230 table[0] \u4e2d\n    if (key == null)\n        return putForNullKey(value);\n    // 1\\. \u6c42 key \u7684 hash \u503c\n    int hash = hash(key);\n    // 2\\. \u627e\u5230\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\n    int i = indexFor(hash, table.length);\n    // 3\\. \u904d\u5386\u4e00\u4e0b\u5bf9\u5e94\u4e0b\u6807\u5904\u7684\u94fe\u8868\uff0c\u770b\u662f\u5426\u6709\u91cd\u590d\u7684 key \u5df2\u7ecf\u5b58\u5728\uff0c\n    //    \u5982\u679c\u6709\uff0c\u76f4\u63a5\u8986\u76d6\uff0cput \u65b9\u6cd5\u8fd4\u56de\u65e7\u503c\u5c31\u7ed3\u675f\u4e86\n    for (Entry<K,V> e = table[i]; e != null; e = e.next) {\n        Object k;\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) {\n            V oldValue = e.value;\n            e.value = value;\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n\n    modCount++;\n    // 4\\. \u4e0d\u5b58\u5728\u91cd\u590d\u7684 key\uff0c\u5c06\u6b64 entry \u6dfb\u52a0\u5230\u94fe\u8868\u4e2d\uff0c\u7ec6\u8282\u540e\u9762\u8bf4\n    addEntry(hash, key, value, i);\n    return null;\n}\n"})}),"\n",(0,a.jsx)(e.h4,{id:"\u6570\u7ec4\u521d\u59cb\u5316",children:"\u6570\u7ec4\u521d\u59cb\u5316"}),"\n",(0,a.jsx)(e.p,{children:"\u5728\u7b2c\u4e00\u4e2a\u5143\u7d20\u63d2\u5165 HashMap \u7684\u65f6\u5019\u505a\u4e00\u6b21\u6570\u7ec4\u7684\u521d\u59cb\u5316\uff0c\u5c31\u662f\u5148\u786e\u5b9a\u521d\u59cb\u7684\u6570\u7ec4\u5927\u5c0f\uff0c\u5e76\u8ba1\u7b97\u6570\u7ec4\u6269\u5bb9\u7684\u9608\u503c\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"private void inflateTable(int toSize) {\n    // \u4fdd\u8bc1\u6570\u7ec4\u5927\u5c0f\u4e00\u5b9a\u662f 2 \u7684 n \u6b21\u65b9\u3002\n    // \u6bd4\u5982\u8fd9\u6837\u521d\u59cb\u5316\uff1anew HashMap(20)\uff0c\u90a3\u4e48\u5904\u7406\u6210\u521d\u59cb\u6570\u7ec4\u5927\u5c0f\u662f 32\n    int capacity = roundUpToPowerOf2(toSize);\n    // \u8ba1\u7b97\u6269\u5bb9\u9608\u503c\uff1acapacity * loadFactor\n    threshold = (int) Math.min(capacity * loadFactor, MAXIMUM_CAPACITY + 1);\n    // \u7b97\u662f\u521d\u59cb\u5316\u6570\u7ec4\u5427\n    table = new Entry[capacity];\n    initHashSeedAsNeeded(capacity); //ignore\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c06\u6570\u7ec4\u5927\u5c0f\u4fdd\u6301\u4e3a 2 \u7684 n \u6b21\u65b9\u7684\u505a\u6cd5\uff0cJava7 \u548c Java8 \u7684 HashMap \u548c ConcurrentHashMap \u90fd\u6709\u76f8\u5e94\u7684\u8981\u6c42\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u7684\u4ee3\u7801\u7a0d\u5fae\u6709\u4e9b\u4e0d\u540c\uff0c\u540e\u9762\u518d\u770b\u5230\u7684\u65f6\u5019\u5c31\u77e5\u9053\u4e86\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u8ba1\u7b97\u5177\u4f53\u6570\u7ec4\u4f4d\u7f6e",children:"\u8ba1\u7b97\u5177\u4f53\u6570\u7ec4\u4f4d\u7f6e"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u7b80\u5355\uff0c\u6211\u4eec\u81ea\u5df1\u4e5f\u80fd YY \u4e00\u4e2a\uff1a\u4f7f\u7528 key \u7684 hash \u503c\u5bf9\u6570\u7ec4\u957f\u5ea6\u8fdb\u884c\u53d6\u6a21\u5c31\u53ef\u4ee5\u4e86\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'static int indexFor(int hash, int length) {\n    // assert Integer.bitCount(length) == 1 : "length must be a non-zero power of 2";\n    return hash & (length-1);\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u7b80\u5355\u8bf4\u5c31\u662f\u53d6 hash \u503c\u7684\u4f4e n \u4f4d\u3002\u5982\u5728\u6570\u7ec4\u957f\u5ea6\u4e3a 32 \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u53d6\u7684\u5c31\u662f key \u7684 hash \u503c\u7684\u4f4e 5 \u4f4d\uff0c\u4f5c\u4e3a\u5b83\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\u4f4d\u7f6e\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u6dfb\u52a0\u8282\u70b9\u5230\u94fe\u8868\u4e2d",children:"\u6dfb\u52a0\u8282\u70b9\u5230\u94fe\u8868\u4e2d"}),"\n",(0,a.jsxs)(e.p,{children:["\u627e\u5230\u6570\u7ec4\u4e0b\u6807\u540e\uff0c\u4f1a\u5148\u8fdb\u884c key \u5224\u91cd\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u590d\uff0c\u5c31\u51c6\u5907\u5c06\u65b0\u503c\u653e\u5165\u5230\u94fe\u8868\u7684",(0,a.jsx)(e.strong,{children:"\u8868\u5934"}),"\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"void addEntry(int hash, K key, V value, int bucketIndex) {\n    // \u5982\u679c\u5f53\u524d HashMap \u5927\u5c0f\u5df2\u7ecf\u8fbe\u5230\u4e86\u9608\u503c\uff0c\u5e76\u4e14\u65b0\u503c\u8981\u63d2\u5165\u7684\u6570\u7ec4\u4f4d\u7f6e\u5df2\u7ecf\u6709\u5143\u7d20\u4e86\uff0c\u90a3\u4e48\u8981\u6269\u5bb9\n    if ((size >= threshold) && (null != table[bucketIndex])) {\n        // \u6269\u5bb9\uff0c\u540e\u9762\u4f1a\u4ecb\u7ecd\u4e00\u4e0b\n        resize(2 * table.length);\n        // \u6269\u5bb9\u4ee5\u540e\uff0c\u91cd\u65b0\u8ba1\u7b97 hash \u503c\n        hash = (null != key) ? hash(key) : 0;\n        // \u91cd\u65b0\u8ba1\u7b97\u6269\u5bb9\u540e\u7684\u65b0\u7684\u4e0b\u6807\n        bucketIndex = indexFor(hash, table.length);\n    }\n    // \u5f80\u4e0b\u770b\n    createEntry(hash, key, value, bucketIndex);\n}\n// \u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u65b0\u503c\u653e\u5230\u94fe\u8868\u7684\u8868\u5934\uff0c\u7136\u540e size++\nvoid createEntry(int hash, K key, V value, int bucketIndex) {\n    Entry<K,V> e = table[bucketIndex];\n    table[bucketIndex] = new Entry<>(hash, key, value, e);\n    size++;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u5148\u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9\uff0c\u9700\u8981\u7684\u8bdd\u5148\u6269\u5bb9\uff0c\u7136\u540e\u518d\u5c06\u8fd9\u4e2a\u65b0\u7684\u6570\u636e\u63d2\u5165\u5230\u6269\u5bb9\u540e\u7684\u6570\u7ec4\u7684\u76f8\u5e94\u4f4d\u7f6e\u5904\u7684\u94fe\u8868\u7684\u8868\u5934\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u6570\u7ec4\u6269\u5bb9",children:"\u6570\u7ec4\u6269\u5bb9"}),"\n",(0,a.jsxs)(e.p,{children:["\u524d\u9762\u6211\u4eec\u770b\u5230\uff0c\u5728\u63d2\u5165\u65b0\u503c\u7684\u65f6\u5019\uff0c\u5982\u679c",(0,a.jsx)(e.strong,{children:"\u5f53\u524d\u7684 size \u5df2\u7ecf\u8fbe\u5230\u4e86\u9608\u503c\uff0c\u5e76\u4e14\u8981\u63d2\u5165\u7684\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u5df2\u7ecf\u6709\u5143\u7d20"}),"\uff0c\u90a3\u4e48\u5c31\u4f1a\u89e6\u53d1\u6269\u5bb9\uff0c\u6269\u5bb9\u540e\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a\u539f\u6765\u7684 2 \u500d\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"void resize(int newCapacity) {\n    Entry[] oldTable = table;\n    int oldCapacity = oldTable.length;\n    if (oldCapacity == MAXIMUM_CAPACITY) {\n        threshold = Integer.MAX_VALUE;\n        return;\n    }\n    // \u65b0\u7684\u6570\u7ec4\n    Entry[] newTable = new Entry[newCapacity];\n    // \u5c06\u539f\u6765\u6570\u7ec4\u4e2d\u7684\u503c\u8fc1\u79fb\u5230\u65b0\u7684\u66f4\u5927\u7684\u6570\u7ec4\u4e2d\n    transfer(newTable, initHashSeedAsNeeded(newCapacity));\n    table = newTable;\n    threshold = (int)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + 1);\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6269\u5bb9\u5c31\u662f\u7528\u4e00\u4e2a\u65b0\u7684\u5927\u6570\u7ec4\u66ff\u6362\u539f\u6765\u7684\u5c0f\u6570\u7ec4\uff0c\u5e76\u5c06\u539f\u6765\u6570\u7ec4\u4e2d\u7684\u503c\u8fc1\u79fb\u5230\u65b0\u7684\u6570\u7ec4\u4e2d\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u7531\u4e8e\u662f\u53cc\u500d\u6269\u5bb9\uff0c\u8fc1\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5c06\u539f\u6765 table[i] \u4e2d\u7684\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\uff0c\u5206\u62c6\u5230\u65b0\u7684\u6570\u7ec4\u7684 newTable[i] \u548c newTable[i + oldLength] \u4f4d\u7f6e\u4e0a\u3002\u5982\u539f\u6765\u6570\u7ec4\u957f\u5ea6\u662f 16\uff0c\u90a3\u4e48\u6269\u5bb9\u540e\uff0c\u539f\u6765 table[0] \u5904\u7684\u94fe\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4f1a\u88ab\u5206\u914d\u5230\u65b0\u6570\u7ec4\u4e2d newTable[0] \u548c newTable[16] \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u3002\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u4e86\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"get-\u8fc7\u7a0b\u5206\u6790",children:"get \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u76f8\u5bf9\u4e8e put \u8fc7\u7a0b\uff0cget \u8fc7\u7a0b\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u6839\u636e key \u8ba1\u7b97 hash \u503c\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u627e\u5230\u76f8\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\uff1ahash & (length - 1)\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u904d\u5386\u8be5\u6570\u7ec4\u4f4d\u7f6e\u5904\u7684\u94fe\u8868\uff0c\u76f4\u5230\u627e\u5230\u76f8\u7b49(==\u6216equals)\u7684 key\u3002"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V get(Object key) {\n    // \u4e4b\u524d\u8bf4\u8fc7\uff0ckey \u4e3a null \u7684\u8bdd\uff0c\u4f1a\u88ab\u653e\u5230 table[0]\uff0c\u6240\u4ee5\u53ea\u8981\u904d\u5386\u4e0b table[0] \u5904\u7684\u94fe\u8868\u5c31\u53ef\u4ee5\u4e86\n    if (key == null)\n        return getForNullKey();\n    // \n    Entry<K,V> entry = getEntry(key);\n\n    return null == entry ? null : entry.getValue();\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"getEntry(key):"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"final Entry<K,V> getEntry(Object key) {\n    if (size == 0) {\n        return null;\n    }\n\n    int hash = (key == null) ? 0 : hash(key);\n    // \u786e\u5b9a\u6570\u7ec4\u4e0b\u6807\uff0c\u7136\u540e\u4ece\u5934\u5f00\u59cb\u904d\u5386\u94fe\u8868\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62\n    for (Entry<K,V> e = table[indexFor(hash, table.length)];\n         e != null;\n         e = e.next) {\n        Object k;\n        if (e.hash == hash &&\n            ((k = e.key) == key || (key != null && key.equals(k))))\n            return e;\n    }\n    return null;\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"java7-concurrenthashmap",children:"Java7 ConcurrentHashMap"}),"\n",(0,a.jsx)(e.p,{children:"ConcurrentHashMap \u548c HashMap \u601d\u8def\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u5b83\u652f\u6301\u5e76\u53d1\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u590d\u6742\u4e00\u4e9b\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u6574\u4e2a ConcurrentHashMap \u7531\u4e00\u4e2a\u4e2a Segment \u7ec4\u6210\uff0cSegment \u4ee3\u8868\u201d\u90e8\u5206\u201c\u6216\u201d\u4e00\u6bb5\u201c\u7684\u610f\u601d\uff0c\u6240\u4ee5\u5f88\u591a\u5730\u65b9\u90fd\u4f1a\u5c06\u5176\u63cf\u8ff0\u4e3a",(0,a.jsx)(e.strong,{children:"\u5206\u6bb5\u9501"}),"\u3002\u6ce8\u610f\uff0c\u884c\u6587\u4e2d\uff0c\u6211\u5f88\u591a\u5730\u65b9\u7528\u4e86\u201c",(0,a.jsx)(e.strong,{children:"\u69fd"}),"\u201d\u6765\u4ee3\u8868\u4e00\u4e2a segment\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u7b80\u5355\u7406\u89e3\u5c31\u662f\uff0cConcurrentHashMap \u662f\u4e00\u4e2a Segment \u6570\u7ec4\uff0cSegment \u901a\u8fc7\u7ee7\u627f ReentrantLock \u6765\u8fdb\u884c\u52a0\u9501\uff0c\u6240\u4ee5\u6bcf\u6b21\u9700\u8981\u52a0\u9501\u7684\u64cd\u4f5c\u9501\u4f4f\u7684\u662f\u4e00\u4e2a segment\uff0c\u8fd9\u6837\u53ea\u8981\u4fdd\u8bc1\u6bcf\u4e2a Segment \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u5168\u5c40\u7684\u7ebf\u7a0b\u5b89\u5168\u3002"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://www.javadoop.com/blogimages/map/3.png",alt:"3"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"concurrencyLevel"}),"\uff1a\u5e76\u884c\u7ea7\u522b\u3001\u5e76\u53d1\u6570\u3001Segment \u6570\uff0c\u600e\u4e48\u7ffb\u8bd1\u4e0d\u91cd\u8981\uff0c\u7406\u89e3\u5b83\u3002\u9ed8\u8ba4\u662f 16\uff0c\u4e5f\u5c31\u662f\u8bf4 ConcurrentHashMap \u6709 16 \u4e2a Segments\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6700\u591a\u53ef\u4ee5\u540c\u65f6\u652f\u6301 16 \u4e2a\u7ebf\u7a0b\u5e76\u53d1\u5199\uff0c\u53ea\u8981\u5b83\u4eec\u7684\u64cd\u4f5c\u5206\u522b\u5206\u5e03\u5728\u4e0d\u540c\u7684 Segment \u4e0a\u3002\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u503c\uff0c\u4f46\u662f\u4e00\u65e6\u521d\u59cb\u5316\u4ee5\u540e\uff0c\u5b83\u662f\u4e0d\u53ef\u4ee5\u6269\u5bb9\u7684\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u518d\u5177\u4f53\u5230\u6bcf\u4e2a Segment \u5185\u90e8\uff0c\u5176\u5b9e\u6bcf\u4e2a Segment \u5f88\u50cf\u4e4b\u524d\u4ecb\u7ecd\u7684 HashMap\uff0c\u4e0d\u8fc7\u5b83\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u6240\u4ee5\u5904\u7406\u8d77\u6765\u8981\u9ebb\u70e6\u4e9b\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u521d\u59cb\u5316",children:"\u521d\u59cb\u5316"}),"\n",(0,a.jsx)(e.p,{children:"initialCapacity\uff1a\u521d\u59cb\u5bb9\u91cf\uff0c\u8fd9\u4e2a\u503c\u6307\u7684\u662f\u6574\u4e2a ConcurrentHashMap \u7684\u521d\u59cb\u5bb9\u91cf\uff0c\u5b9e\u9645\u64cd\u4f5c\u7684\u65f6\u5019\u9700\u8981\u5e73\u5747\u5206\u7ed9\u6bcf\u4e2a Segment\u3002"}),"\n",(0,a.jsx)(e.p,{children:"loadFactor\uff1a\u8d1f\u8f7d\u56e0\u5b50\uff0c\u4e4b\u524d\u6211\u4eec\u8bf4\u4e86\uff0cSegment \u6570\u7ec4\u4e0d\u53ef\u4ee5\u6269\u5bb9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8d1f\u8f7d\u56e0\u5b50\u662f\u7ed9\u6bcf\u4e2a Segment \u5185\u90e8\u4f7f\u7528\u7684\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'public ConcurrentHashMap(int initialCapacity,\n                         float loadFactor, int concurrencyLevel) {\n    if (!(loadFactor > 0) || initialCapacity < 0 || concurrencyLevel <= 0)\n        throw new IllegalArgumentException();\n    if (concurrencyLevel > MAX_SEGMENTS)\n        concurrencyLevel = MAX_SEGMENTS;\n    // Find power-of-two sizes best matching arguments\n    int sshift = 0;\n    int ssize = 1;\n    // \u8ba1\u7b97\u5e76\u884c\u7ea7\u522b ssize\uff0c\u56e0\u4e3a\u8981\u4fdd\u6301\u5e76\u884c\u7ea7\u522b\u662f 2 \u7684 n \u6b21\u65b9\n    while (ssize < concurrencyLevel) {\n        ++sshift;\n        ssize <<= 1;\n    }\n    // \u6211\u4eec\u8fd9\u91cc\u5148\u4e0d\u8981\u90a3\u4e48\u70e7\u8111\uff0c\u7528\u9ed8\u8ba4\u503c\uff0cconcurrencyLevel \u4e3a 16\uff0csshift \u4e3a 4\n    // \u90a3\u4e48\u8ba1\u7b97\u51fa segmentShift \u4e3a 28\uff0csegmentMask \u4e3a 15\uff0c\u540e\u9762\u4f1a\u7528\u5230\u8fd9\u4e24\u4e2a\u503c\n    this.segmentShift = 32 - sshift;\n    this.segmentMask = ssize - 1;\n\n    if (initialCapacity > MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n\n    // initialCapacity \u662f\u8bbe\u7f6e\u6574\u4e2a map \u521d\u59cb\u7684\u5927\u5c0f\uff0c\n    // \u8fd9\u91cc\u6839\u636e initialCapacity \u8ba1\u7b97 Segment \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u5206\u5230\u7684\u5927\u5c0f\n    // \u5982 initialCapacity \u4e3a 64\uff0c\u90a3\u4e48\u6bcf\u4e2a Segment \u6216\u79f0\u4e4b\u4e3a"\u69fd"\u53ef\u4ee5\u5206\u5230 4 \u4e2a\n    int c = initialCapacity / ssize;\n    if (c * ssize < initialCapacity)\n        ++c;\n    // \u9ed8\u8ba4 MIN_SEGMENT_TABLE_CAPACITY \u662f 2\uff0c\u8fd9\u4e2a\u503c\u4e5f\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u5177\u4f53\u7684\u69fd\u4e0a\uff0c\n    // \u63d2\u5165\u4e00\u4e2a\u5143\u7d20\u4e0d\u81f3\u4e8e\u6269\u5bb9\uff0c\u63d2\u5165\u7b2c\u4e8c\u4e2a\u7684\u65f6\u5019\u624d\u4f1a\u6269\u5bb9\n    int cap = MIN_SEGMENT_TABLE_CAPACITY; \n    while (cap < c)\n        cap <<= 1;\n\n    // \u521b\u5efa Segment \u6570\u7ec4\uff0c\n    // \u5e76\u521b\u5efa\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 segment[0]\n    Segment<K,V> s0 =\n        new Segment<K,V>(loadFactor, (int)(cap * loadFactor),\n                         (HashEntry<K,V>[])new HashEntry[cap]);\n    Segment<K,V>[] ss = (Segment<K,V>[])new Segment[ssize];\n    // \u5f80\u6570\u7ec4\u5199\u5165 segment[0]\n    UNSAFE.putOrderedObject(ss, SBASE, s0); // ordered write of segments[0]\n    this.segments = ss;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a Segment \u6570\u7ec4\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u5c31\u5f53\u662f\u7528 new ConcurrentHashMap() \u65e0\u53c2\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u90a3\u4e48\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff1a"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Segment \u6570\u7ec4\u957f\u5ea6\u4e3a 16\uff0c\u4e0d\u53ef\u4ee5\u6269\u5bb9"}),"\n",(0,a.jsx)(e.li,{children:"Segment[i] \u7684\u9ed8\u8ba4\u5927\u5c0f\u4e3a 2\uff0c\u8d1f\u8f7d\u56e0\u5b50\u662f 0.75\uff0c\u5f97\u51fa\u521d\u59cb\u9608\u503c\u4e3a 1.5\uff0c\u4e5f\u5c31\u662f\u4ee5\u540e\u63d2\u5165\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0d\u4f1a\u89e6\u53d1\u6269\u5bb9\uff0c\u63d2\u5165\u7b2c\u4e8c\u4e2a\u4f1a\u8fdb\u884c\u7b2c\u4e00\u6b21\u6269\u5bb9"}),"\n",(0,a.jsx)(e.li,{children:"\u8fd9\u91cc\u521d\u59cb\u5316\u4e86 segment[0]\uff0c\u5176\u4ed6\u4f4d\u7f6e\u8fd8\u662f null\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u521d\u59cb\u5316 segment[0]\uff0c\u540e\u9762\u7684\u4ee3\u7801\u4f1a\u4ecb\u7ecd"}),"\n",(0,a.jsxs)(e.li,{children:["\u5f53\u524d segmentShift \u7684\u503c\u4e3a 32 - 4 = 28\uff0csegmentMask \u4e3a 16 - 1 = 15\uff0c\u59d1\u4e14\u628a\u5b83\u4eec\u7b80\u5355\u7ffb\u8bd1\u4e3a",(0,a.jsx)(e.strong,{children:"\u79fb\u4f4d\u6570"}),"\u548c",(0,a.jsx)(e.strong,{children:"\u63a9\u7801"}),"\uff0c\u8fd9\u4e24\u4e2a\u503c\u9a6c\u4e0a\u5c31\u4f1a\u7528\u5230"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"put-\u8fc7\u7a0b\u5206\u6790-1",children:"put \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u5148\u770b put \u7684\u4e3b\u6d41\u7a0b\uff0c\u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u7ec6\u8282\u64cd\u4f5c\uff0c\u540e\u9762\u4f1a\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V put(K key, V value) {\n    Segment<K,V> s;\n    if (value == null)\n        throw new NullPointerException();\n    // 1\\. \u8ba1\u7b97 key \u7684 hash \u503c\n    int hash = hash(key);\n    // 2\\. \u6839\u636e hash \u503c\u627e\u5230 Segment \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e j\n    //    hash \u662f 32 \u4f4d\uff0c\u65e0\u7b26\u53f7\u53f3\u79fb segmentShift(28) \u4f4d\uff0c\u5269\u4e0b\u9ad8 4 \u4f4d\uff0c\n    //    \u7136\u540e\u548c segmentMask(15) \u505a\u4e00\u6b21\u4e0e\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4 j \u662f hash \u503c\u7684\u9ad8 4 \u4f4d\uff0c\u4e5f\u5c31\u662f\u69fd\u7684\u6570\u7ec4\u4e0b\u6807\n    int j = (hash >>> segmentShift) & segmentMask;\n    // \u521a\u521a\u8bf4\u4e86\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019\u521d\u59cb\u5316\u4e86 segment[0]\uff0c\u4f46\u662f\u5176\u4ed6\u4f4d\u7f6e\u8fd8\u662f null\uff0c\n    // ensureSegment(j) \u5bf9 segment[j] \u8fdb\u884c\u521d\u59cb\u5316\n    if ((s = (Segment<K,V>)UNSAFE.getObject          // nonvolatile; recheck\n         (segments, (j << SSHIFT) + SBASE)) == null) //  in ensureSegment\n        s = ensureSegment(j);\n    // 3\\. \u63d2\u5165\u65b0\u503c\u5230 \u69fd s \u4e2d\n    return s.put(key, hash, value, false);\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u7b2c\u4e00\u5c42\u76ae\u5f88\u7b80\u5355\uff0c\u6839\u636e hash \u503c\u5f88\u5feb\u5c31\u80fd\u627e\u5230\u76f8\u5e94\u7684 Segment\uff0c\u4e4b\u540e\u5c31\u662f Segment \u5185\u90e8\u7684 put \u64cd\u4f5c\u4e86\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["Segment \u5185\u90e8\u662f\u7531",(0,a.jsx)(e.strong,{children:"\u6570\u7ec4+\u94fe\u8868"}),"\u7ec4\u6210\u7684\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"final V put(K key, int hash, V value, boolean onlyIfAbsent) {\n    // \u5728\u5f80\u8be5 segment \u5199\u5165\u524d\uff0c\u9700\u8981\u5148\u83b7\u53d6\u8be5 segment \u7684\u72ec\u5360\u9501\n    //    \u5148\u770b\u4e3b\u6d41\u7a0b\uff0c\u540e\u9762\u8fd8\u4f1a\u5177\u4f53\u4ecb\u7ecd\u8fd9\u90e8\u5206\u5185\u5bb9\n    HashEntry<K,V> node = tryLock() ? null :\n        scanAndLockForPut(key, hash, value);\n    V oldValue;\n    try {\n        // \u8fd9\u4e2a\u662f segment \u5185\u90e8\u7684\u6570\u7ec4\n        HashEntry<K,V>[] tab = table;\n        // \u518d\u5229\u7528 hash \u503c\uff0c\u6c42\u5e94\u8be5\u653e\u7f6e\u7684\u6570\u7ec4\u4e0b\u6807\n        int index = (tab.length - 1) & hash;\n        // first \u662f\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u7684\u94fe\u8868\u7684\u8868\u5934\n        HashEntry<K,V> first = entryAt(tab, index);\n\n        // \u4e0b\u9762\u8fd9\u4e32 for \u5faa\u73af\u867d\u7136\u5f88\u957f\uff0c\u4e0d\u8fc7\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u60f3\u60f3\u8be5\u4f4d\u7f6e\u6ca1\u6709\u4efb\u4f55\u5143\u7d20\u548c\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\u8fd9\u4e24\u79cd\u60c5\u51b5\n        for (HashEntry<K,V> e = first;;) {\n            if (e != null) {\n                K k;\n                if ((k = e.key) == key ||\n                    (e.hash == hash && key.equals(k))) {\n                    oldValue = e.value;\n                    if (!onlyIfAbsent) {\n                        // \u8986\u76d6\u65e7\u503c\n                        e.value = value;\n                        ++modCount;\n                    }\n                    break;\n                }\n                // \u7ee7\u7eed\u987a\u7740\u94fe\u8868\u8d70\n                e = e.next;\n            }\n            else {\n                // node \u5230\u5e95\u662f\u4e0d\u662f null\uff0c\u8fd9\u4e2a\u8981\u770b\u83b7\u53d6\u9501\u7684\u8fc7\u7a0b\uff0c\u4e0d\u8fc7\u548c\u8fd9\u91cc\u90fd\u6ca1\u6709\u5173\u7cfb\u3002\n                // \u5982\u679c\u4e0d\u4e3a null\uff0c\u90a3\u5c31\u76f4\u63a5\u5c06\u5b83\u8bbe\u7f6e\u4e3a\u94fe\u8868\u8868\u5934\uff1b\u5982\u679c\u662fnull\uff0c\u521d\u59cb\u5316\u5e76\u8bbe\u7f6e\u4e3a\u94fe\u8868\u8868\u5934\u3002\n                if (node != null)\n                    node.setNext(first);\n                else\n                    node = new HashEntry<K,V>(hash, key, value, first);\n\n                int c = count + 1;\n                // \u5982\u679c\u8d85\u8fc7\u4e86\u8be5 segment \u7684\u9608\u503c\uff0c\u8fd9\u4e2a segment \u9700\u8981\u6269\u5bb9\n                if (c > threshold && tab.length < MAXIMUM_CAPACITY)\n                    rehash(node); // \u6269\u5bb9\u540e\u9762\u4e5f\u4f1a\u5177\u4f53\u5206\u6790\n                else\n                    // \u6ca1\u6709\u8fbe\u5230\u9608\u503c\uff0c\u5c06 node \u653e\u5230\u6570\u7ec4 tab \u7684 index \u4f4d\u7f6e\uff0c\n                    // \u5176\u5b9e\u5c31\u662f\u5c06\u65b0\u7684\u8282\u70b9\u8bbe\u7f6e\u6210\u539f\u94fe\u8868\u7684\u8868\u5934\n                    setEntryAt(tab, index, node);\n                ++modCount;\n                count = c;\n                oldValue = null;\n                break;\n            }\n        }\n    } finally {\n        // \u89e3\u9501\n        unlock();\n    }\n    return oldValue;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6574\u4f53\u6d41\u7a0b\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u7531\u4e8e\u6709\u72ec\u5360\u9501\u7684\u4fdd\u62a4\uff0c\u6240\u4ee5 segment \u5185\u90e8\u7684\u64cd\u4f5c\u5e76\u4e0d\u590d\u6742\u3002\u81f3\u4e8e\u8fd9\u91cc\u9762\u7684\u5e76\u53d1\u95ee\u9898\uff0c\u6211\u4eec\u7a0d\u540e\u518d\u8fdb\u884c\u4ecb\u7ecd\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5230\u8fd9\u91cc put \u64cd\u4f5c\u5c31\u7ed3\u675f\u4e86\uff0c\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8bf4\u4e00\u8bf4\u5176\u4e2d\u51e0\u6b65\u5173\u952e\u7684\u64cd\u4f5c\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u521d\u59cb\u5316\u69fd-ensuresegment",children:"\u521d\u59cb\u5316\u69fd: ensureSegment"}),"\n",(0,a.jsx)(e.p,{children:"ConcurrentHashMap \u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u69fd segment[0]\uff0c\u5bf9\u4e8e\u5176\u4ed6\u69fd\u6765\u8bf4\uff0c\u5728\u63d2\u5165\u7b2c\u4e00\u4e2a\u503c\u7684\u65f6\u5019\u8fdb\u884c\u521d\u59cb\u5316\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u91cc\u9700\u8981\u8003\u8651\u5e76\u53d1\uff0c\u56e0\u4e3a\u5f88\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u6765\u521d\u59cb\u5316\u540c\u4e00\u4e2a\u69fd segment[k]\uff0c\u4e0d\u8fc7\u53ea\u8981\u6709\u4e00\u4e2a\u6210\u529f\u4e86\u5c31\u53ef\u4ee5\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"private Segment<K,V> ensureSegment(int k) {\n    final Segment<K,V>[] ss = this.segments;\n    long u = (k << SSHIFT) + SBASE; // raw offset\n    Segment<K,V> seg;\n    if ((seg = (Segment<K,V>)UNSAFE.getObjectVolatile(ss, u)) == null) {\n        // \u8fd9\u91cc\u770b\u5230\u4e3a\u4ec0\u4e48\u4e4b\u524d\u8981\u521d\u59cb\u5316 segment[0] \u4e86\uff0c\n        // \u4f7f\u7528\u5f53\u524d segment[0] \u5904\u7684\u6570\u7ec4\u957f\u5ea6\u548c\u8d1f\u8f7d\u56e0\u5b50\u6765\u521d\u59cb\u5316 segment[k]\n        // \u4e3a\u4ec0\u4e48\u8981\u7528\u201c\u5f53\u524d\u201d\uff0c\u56e0\u4e3a segment[0] \u53ef\u80fd\u65e9\u5c31\u6269\u5bb9\u8fc7\u4e86\n        Segment<K,V> proto = ss[0];\n        int cap = proto.table.length;\n        float lf = proto.loadFactor;\n        int threshold = (int)(cap * lf);\n\n        // \u521d\u59cb\u5316 segment[k] \u5185\u90e8\u7684\u6570\u7ec4\n        HashEntry<K,V>[] tab = (HashEntry<K,V>[])new HashEntry[cap];\n        if ((seg = (Segment<K,V>)UNSAFE.getObjectVolatile(ss, u))\n            == null) { // \u518d\u6b21\u68c0\u67e5\u4e00\u904d\u8be5\u69fd\u662f\u5426\u88ab\u5176\u4ed6\u7ebf\u7a0b\u521d\u59cb\u5316\u4e86\u3002\n\n            Segment<K,V> s = new Segment<K,V>(lf, threshold, tab);\n            // \u4f7f\u7528 while \u5faa\u73af\uff0c\u5185\u90e8\u7528 CAS\uff0c\u5f53\u524d\u7ebf\u7a0b\u6210\u529f\u8bbe\u503c\u6216\u5176\u4ed6\u7ebf\u7a0b\u6210\u529f\u8bbe\u503c\u540e\uff0c\u9000\u51fa\n            while ((seg = (Segment<K,V>)UNSAFE.getObjectVolatile(ss, u))\n                   == null) {\n                if (UNSAFE.compareAndSwapObject(ss, u, null, seg = s))\n                    break;\n            }\n        }\n    }\n    return seg;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u603b\u7684\u6765\u8bf4\uff0censureSegment(int k) \u6bd4\u8f83\u7b80\u5355\uff0c\u5bf9\u4e8e\u5e76\u53d1\u64cd\u4f5c\u4f7f\u7528 CAS \u8fdb\u884c\u63a7\u5236\u3002"}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u6211\u6ca1\u641e\u61c2\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u641e\u4e00\u4e2a while \u5faa\u73af\uff0cCAS \u5931\u8d25\u4e0d\u5c31\u4ee3\u8868\u6709\u5176\u4ed6\u7ebf\u7a0b\u6210\u529f\u4e86\u5417\uff0c\u4e3a\u4ec0\u4e48\u8981\u518d\u8fdb\u884c\u5224\u65ad\uff1f"}),"\n",(0,a.jsxs)(e.p,{children:["\u611f\u8c22\u8bc4\u8bba\u533a\u7684",(0,a.jsx)(e.strong,{children:"\u674e\u5b50\u6728"}),"\uff0c\u5982\u679c\u5f53\u524d\u7ebf\u7a0b CAS \u5931\u8d25\uff0c\u8fd9\u91cc\u7684 while \u5faa\u73af\u662f\u4e3a\u4e86\u5c06 seg \u8d4b\u503c\u8fd4\u56de\u3002"]}),"\n"]}),"\n",(0,a.jsx)(e.h4,{id:"\u83b7\u53d6\u5199\u5165\u9501-scanandlockforput",children:"\u83b7\u53d6\u5199\u5165\u9501: scanAndLockForPut"}),"\n",(0,a.jsx)(e.p,{children:"\u524d\u9762\u6211\u4eec\u770b\u5230\uff0c\u5728\u5f80\u67d0\u4e2a segment \u4e2d put \u7684\u65f6\u5019\uff0c\u9996\u5148\u4f1a\u8c03\u7528 node = tryLock() ? null : scanAndLockForPut(key, hash, value)\uff0c\u4e5f\u5c31\u662f\u8bf4\u5148\u8fdb\u884c\u4e00\u6b21 tryLock() \u5feb\u901f\u83b7\u53d6\u8be5 segment \u7684\u72ec\u5360\u9501\uff0c\u5982\u679c\u5931\u8d25\uff0c\u90a3\u4e48\u8fdb\u5165\u5230 scanAndLockForPut \u8fd9\u4e2a\u65b9\u6cd5\u6765\u83b7\u53d6\u9501\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u662f\u600e\u4e48\u63a7\u5236\u52a0\u9501\u7684\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"private HashEntry<K,V> scanAndLockForPut(K key, int hash, V value) {\n    HashEntry<K,V> first = entryForHash(this, hash);\n    HashEntry<K,V> e = first;\n    HashEntry<K,V> node = null;\n    int retries = -1; // negative while locating node\n\n    // \u5faa\u73af\u83b7\u53d6\u9501\n    while (!tryLock()) {\n        HashEntry<K,V> f; // to recheck first below\n        if (retries < 0) {\n            if (e == null) {\n                if (node == null) // speculatively create node\n                    // \u8fdb\u5230\u8fd9\u91cc\u8bf4\u660e\u6570\u7ec4\u8be5\u4f4d\u7f6e\u7684\u94fe\u8868\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u5143\u7d20\n                    // \u5f53\u7136\uff0c\u8fdb\u5230\u8fd9\u91cc\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f tryLock() \u5931\u8d25\uff0c\u6240\u4ee5\u8be5\u69fd\u5b58\u5728\u5e76\u53d1\uff0c\u4e0d\u4e00\u5b9a\u662f\u8be5\u4f4d\u7f6e\n                    node = new HashEntry<K,V>(hash, key, value, null);\n                retries = 0;\n            }\n            else if (key.equals(e.key))\n                retries = 0;\n            else\n                // \u987a\u7740\u94fe\u8868\u5f80\u4e0b\u8d70\n                e = e.next;\n        }\n        // \u91cd\u8bd5\u6b21\u6570\u5982\u679c\u8d85\u8fc7 MAX_SCAN_RETRIES\uff08\u5355\u68381\u591a\u683864\uff09\uff0c\u90a3\u4e48\u4e0d\u62a2\u4e86\uff0c\u8fdb\u5165\u5230\u963b\u585e\u961f\u5217\u7b49\u5f85\u9501\n        //    lock() \u662f\u963b\u585e\u65b9\u6cd5\uff0c\u76f4\u5230\u83b7\u53d6\u9501\u540e\u8fd4\u56de\n        else if (++retries > MAX_SCAN_RETRIES) {\n            lock();\n            break;\n        }\n        else if ((retries & 1) == 0 &&\n                 // \u8fd9\u4e2a\u65f6\u5019\u662f\u6709\u5927\u95ee\u9898\u4e86\uff0c\u90a3\u5c31\u662f\u6709\u65b0\u7684\u5143\u7d20\u8fdb\u5230\u4e86\u94fe\u8868\uff0c\u6210\u4e3a\u4e86\u65b0\u7684\u8868\u5934\n                 //     \u6240\u4ee5\u8fd9\u8fb9\u7684\u7b56\u7565\u662f\uff0c\u76f8\u5f53\u4e8e\u91cd\u65b0\u8d70\u4e00\u904d\u8fd9\u4e2a scanAndLockForPut \u65b9\u6cd5\n                 (f = entryForHash(this, hash)) != first) {\n            e = first = f; // re-traverse if entry changed\n            retries = -1;\n        }\n    }\n    return node;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e24\u4e2a\u51fa\u53e3\uff0c\u4e00\u4e2a\u662f tryLock() \u6210\u529f\u4e86\uff0c\u5faa\u73af\u7ec8\u6b62\uff0c\u53e6\u4e00\u4e2a\u5c31\u662f\u91cd\u8bd5\u6b21\u6570\u8d85\u8fc7\u4e86 MAX_SCAN_RETRIES\uff0c\u8fdb\u5230 lock() \u65b9\u6cd5\uff0c\u6b64\u65b9\u6cd5\u4f1a\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u6210\u529f\u62ff\u5230\u72ec\u5360\u9501\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u770b\u4f3c\u590d\u6742\uff0c\u4f46\u662f\u5176\u5b9e\u5c31\u662f\u505a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f",(0,a.jsx)(e.strong,{children:"\u83b7\u53d6\u8be5 segment \u7684\u72ec\u5360\u9501"}),"\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\u987a\u4fbf\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e0b node\u3002"]}),"\n",(0,a.jsx)(e.h4,{id:"\u6269\u5bb9-rehash",children:"\u6269\u5bb9: rehash"}),"\n",(0,a.jsxs)(e.p,{children:["\u91cd\u590d\u4e00\u4e0b\uff0csegment \u6570\u7ec4\u4e0d\u80fd\u6269\u5bb9\uff0c\u6269\u5bb9\u662f segment \u6570\u7ec4\u67d0\u4e2a\u4f4d\u7f6e\u5185\u90e8\u7684\u6570\u7ec4 ",(0,a.jsx)(e.code,{children:"HashEntry<K,V>[]"})," \u8fdb\u884c\u6269\u5bb9\uff0c\u6269\u5bb9\u540e\uff0c\u5bb9\u91cf\u4e3a\u539f\u6765\u7684 2 \u500d\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u9996\u5148\uff0c\u6211\u4eec\u8981\u56de\u987e\u4e00\u4e0b\u89e6\u53d1\u6269\u5bb9\u7684\u5730\u65b9\uff0cput \u7684\u65f6\u5019\uff0c\u5982\u679c\u5224\u65ad\u8be5\u503c\u7684\u63d2\u5165\u4f1a\u5bfc\u81f4\u8be5 segment \u7684\u5143\u7d20\u4e2a\u6570\u8d85\u8fc7\u9608\u503c\uff0c\u90a3\u4e48\u5148\u8fdb\u884c\u6269\u5bb9\uff0c\u518d\u63d2\u503c\uff0c\u8bfb\u8005\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u56de\u53bb put \u65b9\u6cd5\u770b\u4e00\u773c\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8be5\u65b9\u6cd5\u4e0d\u9700\u8981\u8003\u8651\u5e76\u53d1\uff0c\u56e0\u4e3a\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u662f\u6301\u6709\u8be5 segment \u7684\u72ec\u5360\u9501\u7684\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"// \u65b9\u6cd5\u53c2\u6570\u4e0a\u7684 node \u662f\u8fd9\u6b21\u6269\u5bb9\u540e\uff0c\u9700\u8981\u6dfb\u52a0\u5230\u65b0\u7684\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u3002\nprivate void rehash(HashEntry<K,V> node) {\n    HashEntry<K,V>[] oldTable = table;\n    int oldCapacity = oldTable.length;\n    // 2 \u500d\n    int newCapacity = oldCapacity << 1;\n    threshold = (int)(newCapacity * loadFactor);\n    // \u521b\u5efa\u65b0\u6570\u7ec4\n    HashEntry<K,V>[] newTable =\n        (HashEntry<K,V>[]) new HashEntry[newCapacity];\n    // \u65b0\u7684\u63a9\u7801\uff0c\u5982\u4ece 16 \u6269\u5bb9\u5230 32\uff0c\u90a3\u4e48 sizeMask \u4e3a 31\uff0c\u5bf9\u5e94\u4e8c\u8fdb\u5236 \u2018000...00011111\u2019\n    int sizeMask = newCapacity - 1;\n\n    // \u904d\u5386\u539f\u6570\u7ec4\uff0c\u8001\u5957\u8def\uff0c\u5c06\u539f\u6570\u7ec4\u4f4d\u7f6e i \u5904\u7684\u94fe\u8868\u62c6\u5206\u5230 \u65b0\u6570\u7ec4\u4f4d\u7f6e i \u548c i+oldCap \u4e24\u4e2a\u4f4d\u7f6e\n    for (int i = 0; i < oldCapacity ; i++) {\n        // e \u662f\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n        HashEntry<K,V> e = oldTable[i];\n        if (e != null) {\n            HashEntry<K,V> next = e.next;\n            // \u8ba1\u7b97\u5e94\u8be5\u653e\u7f6e\u5728\u65b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\n            // \u5047\u8bbe\u539f\u6570\u7ec4\u957f\u5ea6\u4e3a 16\uff0ce \u5728 oldTable[3] \u5904\uff0c\u90a3\u4e48 idx \u53ea\u53ef\u80fd\u662f 3 \u6216\u8005\u662f 3 + 16 = 19\n            int idx = e.hash & sizeMask;\n            if (next == null)   // \u8be5\u4f4d\u7f6e\u5904\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u6bd4\u8f83\u597d\u529e\n                newTable[idx] = e;\n            else { // Reuse consecutive sequence at same slot\n                // e \u662f\u94fe\u8868\u8868\u5934\n                HashEntry<K,V> lastRun = e;\n                // idx \u662f\u5f53\u524d\u94fe\u8868\u7684\u5934\u7ed3\u70b9 e \u7684\u65b0\u4f4d\u7f6e\n                int lastIdx = idx;\n\n                // \u4e0b\u9762\u8fd9\u4e2a for \u5faa\u73af\u4f1a\u627e\u5230\u4e00\u4e2a lastRun \u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u662f\u5c06\u8981\u653e\u5230\u4e00\u8d77\u7684\n                for (HashEntry<K,V> last = next;\n                     last != null;\n                     last = last.next) {\n                    int k = last.hash & sizeMask;\n                    if (k != lastIdx) {\n                        lastIdx = k;\n                        lastRun = last;\n                    }\n                }\n                // \u5c06 lastRun \u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684\u8fd9\u4e2a\u94fe\u8868\u653e\u5230 lastIdx \u8fd9\u4e2a\u4f4d\u7f6e\n                newTable[lastIdx] = lastRun;\n                // \u4e0b\u9762\u7684\u64cd\u4f5c\u662f\u5904\u7406 lastRun \u4e4b\u524d\u7684\u8282\u70b9\uff0c\n                //    \u8fd9\u4e9b\u8282\u70b9\u53ef\u80fd\u5206\u914d\u5728\u53e6\u4e00\u4e2a\u94fe\u8868\u4e2d\uff0c\u4e5f\u53ef\u80fd\u5206\u914d\u5230\u4e0a\u9762\u7684\u90a3\u4e2a\u94fe\u8868\u4e2d\n                for (HashEntry<K,V> p = e; p != lastRun; p = p.next) {\n                    V v = p.value;\n                    int h = p.hash;\n                    int k = h & sizeMask;\n                    HashEntry<K,V> n = newTable[k];\n                    newTable[k] = new HashEntry<K,V>(h, p.key, v, n);\n                }\n            }\n        }\n    }\n    // \u5c06\u65b0\u6765\u7684 node \u653e\u5230\u65b0\u6570\u7ec4\u4e2d\u521a\u521a\u7684 \u4e24\u4e2a\u94fe\u8868\u4e4b\u4e00 \u7684 \u5934\u90e8\n    int nodeIndex = node.hash & sizeMask; // add the new node\n    node.setNext(newTable[nodeIndex]);\n    newTable[nodeIndex] = node;\n    table = newTable;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u91cc\u7684\u6269\u5bb9\u6bd4\u4e4b\u524d\u7684 HashMap \u8981\u590d\u6742\u4e00\u4e9b\uff0c\u4ee3\u7801\u96be\u61c2\u4e00\u70b9\u3002\u4e0a\u9762\u6709\u4e24\u4e2a\u6328\u7740\u7684 for \u5faa\u73af\uff0c\u7b2c\u4e00\u4e2a for \u6709\u4ec0\u4e48\u7528\u5462\uff1f"}),"\n",(0,a.jsx)(e.p,{children:"\u4ed4\u7ec6\u4e00\u770b\u53d1\u73b0\uff0c\u5982\u679c\u6ca1\u6709\u7b2c\u4e00\u4e2a for \u5faa\u73af\uff0c\u4e5f\u662f\u53ef\u4ee5\u5de5\u4f5c\u7684\uff0c\u4f46\u662f\uff0c\u8fd9\u4e2a for \u5faa\u73af\u4e0b\u6765\uff0c\u5982\u679c lastRun \u7684\u540e\u9762\u8fd8\u6709\u6bd4\u8f83\u591a\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u6b21\u5c31\u662f\u503c\u5f97\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u514b\u9686 lastRun \u524d\u9762\u7684\u8282\u70b9\uff0c\u540e\u9762\u7684\u4e00\u4e32\u8282\u70b9\u8ddf\u7740 lastRun \u8d70\u5c31\u662f\u4e86\uff0c\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u64cd\u4f5c\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u89c9\u5f97 Doug Lea \u7684\u8fd9\u4e2a\u60f3\u6cd5\u4e5f\u662f\u633a\u6709\u610f\u601d\u7684\uff0c\u4e0d\u8fc7\u6bd4\u8f83\u574f\u7684\u60c5\u51b5\u5c31\u662f\u6bcf\u6b21 lastRun \u90fd\u662f\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6216\u8005\u5f88\u9760\u540e\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u8fd9\u6b21\u904d\u5386\u5c31\u6709\u70b9\u6d6a\u8d39\u4e86\u3002",(0,a.jsx)(e.strong,{children:"\u4e0d\u8fc7 Doug Lea \u4e5f\u8bf4\u4e86\uff0c\u6839\u636e\u7edf\u8ba1\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684\u9608\u503c\uff0c\u5927\u7ea6\u53ea\u6709 1/6 \u7684\u8282\u70b9\u9700\u8981\u514b\u9686"}),"\u3002"]}),"\n",(0,a.jsx)(e.h3,{id:"get-\u8fc7\u7a0b\u5206\u6790-1",children:"get \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u76f8\u5bf9\u4e8e put \u6765\u8bf4\uff0cget \u771f\u7684\u4e0d\u8981\u592a\u7b80\u5355\u3002"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u8ba1\u7b97 hash \u503c\uff0c\u627e\u5230 segment \u6570\u7ec4\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u6216\u6211\u4eec\u524d\u9762\u7528\u7684\u201c\u69fd\u201d"}),"\n",(0,a.jsx)(e.li,{children:"\u69fd\u4e2d\u4e5f\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6839\u636e hash \u627e\u5230\u6570\u7ec4\u4e2d\u5177\u4f53\u7684\u4f4d\u7f6e"}),"\n",(0,a.jsx)(e.li,{children:"\u5230\u8fd9\u91cc\u662f\u94fe\u8868\u4e86\uff0c\u987a\u7740\u94fe\u8868\u8fdb\u884c\u67e5\u627e\u5373\u53ef"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V get(Object key) {\n    Segment<K,V> s; // manually integrate access methods to reduce overhead\n    HashEntry<K,V>[] tab;\n    // 1\\. hash \u503c\n    int h = hash(key);\n    long u = (((h >>> segmentShift) & segmentMask) << SSHIFT) + SBASE;\n    // 2\\. \u6839\u636e hash \u627e\u5230\u5bf9\u5e94\u7684 segment\n    if ((s = (Segment<K,V>)UNSAFE.getObjectVolatile(segments, u)) != null &&\n        (tab = s.table) != null) {\n        // 3\\. \u627e\u5230segment \u5185\u90e8\u6570\u7ec4\u76f8\u5e94\u4f4d\u7f6e\u7684\u94fe\u8868\uff0c\u904d\u5386\n        for (HashEntry<K,V> e = (HashEntry<K,V>) UNSAFE.getObjectVolatile\n                 (tab, ((long)(((tab.length - 1) & h)) << TSHIFT) + TBASE);\n             e != null; e = e.next) {\n            K k;\n            if ((k = e.key) == key || (e.hash == h && key.equals(k)))\n                return e.value;\n        }\n    }\n    return null;\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\u5e76\u53d1\u95ee\u9898\u5206\u6790",children:"\u5e76\u53d1\u95ee\u9898\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8bf4\u5b8c\u4e86 put \u8fc7\u7a0b\u548c get \u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 get \u8fc7\u7a0b\u4e2d\u662f\u6ca1\u6709\u52a0\u9501\u7684\uff0c\u90a3\u81ea\u7136\u6211\u4eec\u5c31\u9700\u8981\u53bb\u8003\u8651\u5e76\u53d1\u95ee\u9898\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6dfb\u52a0\u8282\u70b9\u7684\u64cd\u4f5c put \u548c\u5220\u9664\u8282\u70b9\u7684\u64cd\u4f5c remove \u90fd\u662f\u8981\u52a0 segment \u4e0a\u7684\u72ec\u5360\u9501\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u4e4b\u95f4\u81ea\u7136\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u5c31\u662f get \u7684\u65f6\u5019\u5728\u540c\u4e00\u4e2a segment \u4e2d\u53d1\u751f\u4e86 put \u6216 remove \u64cd\u4f5c\u3002"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"put \u64cd\u4f5c\u7684\u7ebf\u7a0b\u5b89\u5168\u6027\u3002"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u521d\u59cb\u5316\u69fd\uff0c\u8fd9\u4e2a\u6211\u4eec\u4e4b\u524d\u5c31\u8bf4\u8fc7\u4e86\uff0c\u4f7f\u7528\u4e86 CAS \u6765\u521d\u59cb\u5316 Segment \u4e2d\u7684\u6570\u7ec4\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u6dfb\u52a0\u8282\u70b9\u5230\u94fe\u8868\u7684\u64cd\u4f5c\u662f\u63d2\u5165\u5230\u8868\u5934\u7684\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u8fd9\u4e2a\u65f6\u5019 get \u64cd\u4f5c\u5728\u94fe\u8868\u904d\u5386\u7684\u8fc7\u7a0b\u5df2\u7ecf\u5230\u4e86\u4e2d\u95f4\uff0c\u662f\u4e0d\u4f1a\u5f71\u54cd\u7684\u3002\u5f53\u7136\uff0c\u53e6\u4e00\u4e2a\u5e76\u53d1\u95ee\u9898\u5c31\u662f get \u64cd\u4f5c\u5728 put \u4e4b\u540e\uff0c\u9700\u8981\u4fdd\u8bc1\u521a\u521a\u63d2\u5165\u8868\u5934\u7684\u8282\u70b9\u88ab\u8bfb\u53d6\uff0c\u8fd9\u4e2a\u4f9d\u8d56\u4e8e setEntryAt \u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684 UNSAFE.putOrderedObject\u3002"}),"\n",(0,a.jsx)(e.li,{children:"\u6269\u5bb9\u3002\u6269\u5bb9\u662f\u65b0\u521b\u5efa\u4e86\u6570\u7ec4\uff0c\u7136\u540e\u8fdb\u884c\u8fc1\u79fb\u6570\u636e\uff0c\u6700\u540e\u9762\u5c06 newTable \u8bbe\u7f6e\u7ed9\u5c5e\u6027 table\u3002\u6240\u4ee5\uff0c\u5982\u679c get \u64cd\u4f5c\u6b64\u65f6\u4e5f\u5728\u8fdb\u884c\uff0c\u90a3\u4e48\u4e5f\u6ca1\u5173\u7cfb\uff0c\u5982\u679c get \u5148\u884c\uff0c\u90a3\u4e48\u5c31\u662f\u5728\u65e7\u7684 table \u4e0a\u505a\u67e5\u8be2\u64cd\u4f5c\uff1b\u800c put \u5148\u884c\uff0c\u90a3\u4e48 put \u64cd\u4f5c\u7684\u53ef\u89c1\u6027\u4fdd\u8bc1\u5c31\u662f table \u4f7f\u7528\u4e86 volatile \u5173\u952e\u5b57\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"remove \u64cd\u4f5c\u7684\u7ebf\u7a0b\u5b89\u5168\u6027\u3002"}),"\n",(0,a.jsx)(e.p,{children:"remove \u64cd\u4f5c\u6211\u4eec\u6ca1\u6709\u5206\u6790\u6e90\u7801\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bf4\u7684\u8bfb\u8005\u611f\u5174\u8da3\u7684\u8bdd\u8fd8\u662f\u9700\u8981\u5230\u6e90\u7801\u4e2d\u53bb\u6c42\u5b9e\u4e00\u4e0b\u7684\u3002"}),"\n",(0,a.jsx)(e.p,{children:'get \u64cd\u4f5c\u9700\u8981\u904d\u5386\u94fe\u8868\uff0c\u4f46\u662f remove \u64cd\u4f5c\u4f1a"\u7834\u574f"\u94fe\u8868\u3002'}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c remove \u7834\u574f\u7684\u8282\u70b9 get \u64cd\u4f5c\u5df2\u7ecf\u8fc7\u53bb\u4e86\uff0c\u90a3\u4e48\u8fd9\u91cc\u4e0d\u5b58\u5728\u4efb\u4f55\u95ee\u9898\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c remove \u5148\u7834\u574f\u4e86\u4e00\u4e2a\u8282\u70b9\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\u3002 1\u3001\u5982\u679c\u6b64\u8282\u70b9\u662f\u5934\u7ed3\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u5c06\u5934\u7ed3\u70b9\u7684 next \u8bbe\u7f6e\u4e3a\u6570\u7ec4\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\uff0ctable \u867d\u7136\u4f7f\u7528\u4e86 volatile \u4fee\u9970\uff0c\u4f46\u662f volatile \u5e76\u4e0d\u80fd\u63d0\u4f9b\u6570\u7ec4\u5185\u90e8\u64cd\u4f5c\u7684\u53ef\u89c1\u6027\u4fdd\u8bc1\uff0c\u6240\u4ee5\u6e90\u7801\u4e2d\u4f7f\u7528\u4e86 UNSAFE \u6765\u64cd\u4f5c\u6570\u7ec4\uff0c\u8bf7\u770b\u65b9\u6cd5 setEntryAt\u30022\u3001\u5982\u679c\u8981\u5220\u9664\u7684\u8282\u70b9\u4e0d\u662f\u5934\u7ed3\u70b9\uff0c\u5b83\u4f1a\u5c06\u8981\u5220\u9664\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u63a5\u5230\u524d\u9a71\u8282\u70b9\u4e2d\uff0c\u8fd9\u91cc\u7684\u5e76\u53d1\u4fdd\u8bc1\u5c31\u662f next \u5c5e\u6027\u662f volatile \u7684\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"java8-hashmap",children:"Java8 HashMap"}),"\n",(0,a.jsxs)(e.p,{children:["Java8 \u5bf9 HashMap \u8fdb\u884c\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\u5229\u7528\u4e86\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u5176\u7531",(0,a.jsx)(e.strong,{children:"\u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811"}),"\u7ec4\u6210\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6839\u636e Java7 HashMap \u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u67e5\u627e\u7684\u65f6\u5019\uff0c\u6839\u636e hash \u503c\u6211\u4eec\u80fd\u591f\u5feb\u901f\u5b9a\u4f4d\u5230\u6570\u7ec4\u7684\u5177\u4f53\u4e0b\u6807\uff0c\u4f46\u662f\u4e4b\u540e\u7684\u8bdd\uff0c\u9700\u8981\u987a\u7740\u94fe\u8868\u4e00\u4e2a\u4e2a\u6bd4\u8f83\u4e0b\u53bb\u624d\u80fd\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u94fe\u8868\u7684\u957f\u5ea6\uff0c\u4e3a",(0,a.jsx)(e.strong,{children:"O(n)"}),"\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4e3a\u4e86\u964d\u4f4e\u8fd9\u90e8\u5206\u7684\u5f00\u9500\uff0c\u5728 Java8 \u4e2d\uff0c\u5f53\u94fe\u8868\u4e2d\u7684\u5143\u7d20\u8fbe\u5230\u4e86 8 \u4e2a\u65f6\uff0c\u4f1a\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u8fdb\u884c\u67e5\u627e\u7684\u65f6\u5019\u53ef\u4ee5\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a",(0,a.jsx)(e.strong,{children:"O(logN)"}),"\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u6765\u4e00\u5f20\u56fe\u7b80\u5355\u793a\u610f\u4e00\u4e0b\u5427\uff1a"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://www.javadoop.com/blogimages/map/2.png",alt:"2"})}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"\u6ce8\u610f\uff0c\u4e0a\u56fe\u662f\u793a\u610f\u56fe\uff0c\u4e3b\u8981\u662f\u63cf\u8ff0\u7ed3\u6784\uff0c\u4e0d\u4f1a\u8fbe\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e48\u591a\u6570\u636e\u7684\u65f6\u5019\u65e9\u5c31\u6269\u5bb9\u4e86\u3002"}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\uff0c\u6211\u4eec\u8fd8\u662f\u7528\u4ee3\u7801\u6765\u4ecb\u7ecd\u5427\uff0c\u4e2a\u4eba\u611f\u89c9\uff0cJava8 \u7684\u6e90\u7801\u53ef\u8bfb\u6027\u8981\u5dee\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u7cbe\u7b80\u4e00\u4e9b\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["Java7 \u4e2d\u4f7f\u7528 Entry \u6765\u4ee3\u8868\u6bcf\u4e2a HashMap \u4e2d\u7684\u6570\u636e\u8282\u70b9\uff0cJava8 \u4e2d\u4f7f\u7528",(0,a.jsx)(e.strong,{children:"Node"}),"\uff0c\u57fa\u672c\u6ca1\u6709\u533a\u522b\uff0c\u90fd\u662f key\uff0cvalue\uff0chash \u548c next \u8fd9\u56db\u4e2a\u5c5e\u6027\uff0c\u4e0d\u8fc7\uff0cNode \u53ea\u80fd\u7528\u4e8e\u94fe\u8868\u7684\u60c5\u51b5\uff0c\u7ea2\u9ed1\u6811\u7684\u60c5\u51b5\u9700\u8981\u4f7f\u7528",(0,a.jsx)(e.strong,{children:"TreeNode"}),"\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u6839\u636e\u6570\u7ec4\u5143\u7d20\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u8282\u70b9\u6570\u636e\u7c7b\u578b\u662f Node \u8fd8\u662f TreeNode \u6765\u5224\u65ad\u8be5\u4f4d\u7f6e\u4e0b\u662f\u94fe\u8868\u8fd8\u662f\u7ea2\u9ed1\u6811\u7684\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"put-\u8fc7\u7a0b\u5206\u6790-2",children:"put \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'public V put(K key, V value) {\n    return putVal(hash(key), key, value, false, true);\n}\n\n// \u7b2c\u4e09\u4e2a\u53c2\u6570 onlyIfAbsent \u5982\u679c\u662f true\uff0c\u90a3\u4e48\u53ea\u6709\u5728\u4e0d\u5b58\u5728\u8be5 key \u65f6\u624d\u4f1a\u8fdb\u884c put \u64cd\u4f5c\n// \u7b2c\u56db\u4e2a\u53c2\u6570 evict \u6211\u4eec\u8fd9\u91cc\u4e0d\u5173\u5fc3\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n               boolean evict) {\n    Node<K,V>[] tab; Node<K,V> p; int n, i;\n    // \u7b2c\u4e00\u6b21 put \u503c\u7684\u65f6\u5019\uff0c\u4f1a\u89e6\u53d1\u4e0b\u9762\u7684 resize()\uff0c\u7c7b\u4f3c java7 \u7684\u7b2c\u4e00\u6b21 put \u4e5f\u8981\u521d\u59cb\u5316\u6570\u7ec4\u957f\u5ea6\n    // \u7b2c\u4e00\u6b21 resize \u548c\u540e\u7eed\u7684\u6269\u5bb9\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u8fd9\u6b21\u662f\u6570\u7ec4\u4ece null \u521d\u59cb\u5316\u5230\u9ed8\u8ba4\u7684 16 \u6216\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5bb9\u91cf\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;\n    // \u627e\u5230\u5177\u4f53\u7684\u6570\u7ec4\u4e0b\u6807\uff0c\u5982\u679c\u6b64\u4f4d\u7f6e\u6ca1\u6709\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u521d\u59cb\u5316\u4e00\u4e0b Node \u5e76\u653e\u7f6e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\n    if ((p = tab[i = (n - 1) & hash]) == null)\n        tab[i] = newNode(hash, key, value, null);\n\n    else {// \u6570\u7ec4\u8be5\u4f4d\u7f6e\u6709\u6570\u636e\n        Node<K,V> e; K k;\n        // \u9996\u5148\uff0c\u5224\u65ad\u8be5\u4f4d\u7f6e\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u548c\u6211\u4eec\u8981\u63d2\u5165\u7684\u6570\u636e\uff0ckey \u662f\u4e0d\u662f"\u76f8\u7b49"\uff0c\u5982\u679c\u662f\uff0c\u53d6\u51fa\u8fd9\u4e2a\u8282\u70b9\n        if (p.hash == hash &&\n            ((k = p.key) == key || (key != null && key.equals(k))))\n            e = p;\n        // \u5982\u679c\u8be5\u8282\u70b9\u662f\u4ee3\u8868\u7ea2\u9ed1\u6811\u7684\u8282\u70b9\uff0c\u8c03\u7528\u7ea2\u9ed1\u6811\u7684\u63d2\u503c\u65b9\u6cd5\uff0c\u672c\u6587\u4e0d\u5c55\u5f00\u8bf4\u7ea2\u9ed1\u6811\n        else if (p instanceof TreeNode)\n            e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n        else {\n            // \u5230\u8fd9\u91cc\uff0c\u8bf4\u660e\u6570\u7ec4\u8be5\u4f4d\u7f6e\u4e0a\u662f\u4e00\u4e2a\u94fe\u8868\n            for (int binCount = 0; ; ++binCount) {\n                // \u63d2\u5165\u5230\u94fe\u8868\u7684\u6700\u540e\u9762(Java7 \u662f\u63d2\u5165\u5230\u94fe\u8868\u7684\u6700\u524d\u9762)\n                if ((e = p.next) == null) {\n                    p.next = newNode(hash, key, value, null);\n                    // TREEIFY_THRESHOLD \u4e3a 8\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u65b0\u63d2\u5165\u7684\u503c\u662f\u94fe\u8868\u4e2d\u7684\u7b2c 8 \u4e2a\n                    // \u4f1a\u89e6\u53d1\u4e0b\u9762\u7684 treeifyBin\uff0c\u4e5f\u5c31\u662f\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\n                    if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                        treeifyBin(tab, hash);\n                    break;\n                }\n                // \u5982\u679c\u5728\u8be5\u94fe\u8868\u4e2d\u627e\u5230\u4e86"\u76f8\u7b49"\u7684 key(== \u6216 equals)\n                if (e.hash == hash &&\n                    ((k = e.key) == key || (key != null && key.equals(k))))\n                    // \u6b64\u65f6 break\uff0c\u90a3\u4e48 e \u4e3a\u94fe\u8868\u4e2d[\u4e0e\u8981\u63d2\u5165\u7684\u65b0\u503c\u7684 key "\u76f8\u7b49"]\u7684 node\n                    break;\n                p = e;\n            }\n        }\n        // e!=null \u8bf4\u660e\u5b58\u5728\u65e7\u503c\u7684key\u4e0e\u8981\u63d2\u5165\u7684key"\u76f8\u7b49"\n        // \u5bf9\u4e8e\u6211\u4eec\u5206\u6790\u7684put\u64cd\u4f5c\uff0c\u4e0b\u9762\u8fd9\u4e2a if \u5176\u5b9e\u5c31\u662f\u8fdb\u884c "\u503c\u8986\u76d6"\uff0c\u7136\u540e\u8fd4\u56de\u65e7\u503c\n        if (e != null) {\n            V oldValue = e.value;\n            if (!onlyIfAbsent || oldValue == null)\n                e.value = value;\n            afterNodeAccess(e);\n            return oldValue;\n        }\n    }\n    ++modCount;\n    // \u5982\u679c HashMap \u7531\u4e8e\u65b0\u63d2\u5165\u8fd9\u4e2a\u503c\u5bfc\u81f4 size \u5df2\u7ecf\u8d85\u8fc7\u4e86\u9608\u503c\uff0c\u9700\u8981\u8fdb\u884c\u6269\u5bb9\n    if (++size > threshold)\n        resize();\n    afterNodeInsertion(evict);\n    return null;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u548c Java7 \u7a0d\u5fae\u6709\u70b9\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5c31\u662f\uff0cJava7 \u662f\u5148\u6269\u5bb9\u540e\u63d2\u5165\u65b0\u503c\u7684\uff0cJava8 \u5148\u63d2\u503c\u518d\u6269\u5bb9\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u4e0d\u91cd\u8981\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u6570\u7ec4\u6269\u5bb9-1",children:"\u6570\u7ec4\u6269\u5bb9"}),"\n",(0,a.jsxs)(e.p,{children:["resize() \u65b9\u6cd5\u7528\u4e8e",(0,a.jsx)(e.strong,{children:"\u521d\u59cb\u5316\u6570\u7ec4"}),"\u6216",(0,a.jsx)(e.strong,{children:"\u6570\u7ec4\u6269\u5bb9"}),"\uff0c\u6bcf\u6b21\u6269\u5bb9\u540e\uff0c\u5bb9\u91cf\u4e3a\u539f\u6765\u7684 2 \u500d\uff0c\u5e76\u8fdb\u884c\u6570\u636e\u8fc1\u79fb\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"final Node<K,V>[] resize() {\n    Node<K,V>[] oldTab = table;\n    int oldCap = (oldTab == null) ? 0 : oldTab.length;\n    int oldThr = threshold;\n    int newCap, newThr = 0;\n    if (oldCap > 0) { // \u5bf9\u5e94\u6570\u7ec4\u6269\u5bb9\n        if (oldCap >= MAXIMUM_CAPACITY) {\n            threshold = Integer.MAX_VALUE;\n            return oldTab;\n        }\n        // \u5c06\u6570\u7ec4\u5927\u5c0f\u6269\u5927\u4e00\u500d\n        else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY &&\n                 oldCap >= DEFAULT_INITIAL_CAPACITY)\n            // \u5c06\u9608\u503c\u6269\u5927\u4e00\u500d\n            newThr = oldThr << 1; // double threshold\n    }\n    else if (oldThr > 0) // \u5bf9\u5e94\u4f7f\u7528 new HashMap(int initialCapacity) \u521d\u59cb\u5316\u540e\uff0c\u7b2c\u4e00\u6b21 put \u7684\u65f6\u5019\n        newCap = oldThr;\n    else {// \u5bf9\u5e94\u4f7f\u7528 new HashMap() \u521d\u59cb\u5316\u540e\uff0c\u7b2c\u4e00\u6b21 put \u7684\u65f6\u5019\n        newCap = DEFAULT_INITIAL_CAPACITY;\n        newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n    }\n\n    if (newThr == 0) {\n        float ft = (float)newCap * loadFactor;\n        newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                  (int)ft : Integer.MAX_VALUE);\n    }\n    threshold = newThr;\n\n    // \u7528\u65b0\u7684\u6570\u7ec4\u5927\u5c0f\u521d\u59cb\u5316\u65b0\u7684\u6570\u7ec4\n    Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n    table = newTab; // \u5982\u679c\u662f\u521d\u59cb\u5316\u6570\u7ec4\uff0c\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff0c\u8fd4\u56de newTab \u5373\u53ef\n\n    if (oldTab != null) {\n        // \u5f00\u59cb\u904d\u5386\u539f\u6570\u7ec4\uff0c\u8fdb\u884c\u6570\u636e\u8fc1\u79fb\u3002\n        for (int j = 0; j < oldCap; ++j) {\n            Node<K,V> e;\n            if ((e = oldTab[j]) != null) {\n                oldTab[j] = null;\n                // \u5982\u679c\u8be5\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u53ea\u6709\u5355\u4e2a\u5143\u7d20\uff0c\u90a3\u5c31\u7b80\u5355\u4e86\uff0c\u7b80\u5355\u8fc1\u79fb\u8fd9\u4e2a\u5143\u7d20\u5c31\u53ef\u4ee5\u4e86\n                if (e.next == null)\n                    newTab[e.hash & (newCap - 1)] = e;\n                // \u5982\u679c\u662f\u7ea2\u9ed1\u6811\uff0c\u5177\u4f53\u6211\u4eec\u5c31\u4e0d\u5c55\u5f00\u4e86\n                else if (e instanceof TreeNode)\n                    ((TreeNode<K,V>)e).split(this, newTab, j, oldCap);\n                else { \n                    // \u8fd9\u5757\u662f\u5904\u7406\u94fe\u8868\u7684\u60c5\u51b5\uff0c\n                    // \u9700\u8981\u5c06\u6b64\u94fe\u8868\u62c6\u6210\u4e24\u4e2a\u94fe\u8868\uff0c\u653e\u5230\u65b0\u7684\u6570\u7ec4\u4e2d\uff0c\u5e76\u4e14\u4fdd\u7559\u539f\u6765\u7684\u5148\u540e\u987a\u5e8f\n                    // loHead\u3001loTail \u5bf9\u5e94\u4e00\u6761\u94fe\u8868\uff0chiHead\u3001hiTail \u5bf9\u5e94\u53e6\u4e00\u6761\u94fe\u8868\uff0c\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\n                    Node<K,V> loHead = null, loTail = null;\n                    Node<K,V> hiHead = null, hiTail = null;\n                    Node<K,V> next;\n                    do {\n                        next = e.next;\n                        if ((e.hash & oldCap) == 0) {\n                            if (loTail == null)\n                                loHead = e;\n                            else\n                                loTail.next = e;\n                            loTail = e;\n                        }\n                        else {\n                            if (hiTail == null)\n                                hiHead = e;\n                            else\n                                hiTail.next = e;\n                            hiTail = e;\n                        }\n                    } while ((e = next) != null);\n                    if (loTail != null) {\n                        loTail.next = null;\n                        // \u7b2c\u4e00\u6761\u94fe\u8868\n                        newTab[j] = loHead;\n                    }\n                    if (hiTail != null) {\n                        hiTail.next = null;\n                        // \u7b2c\u4e8c\u6761\u94fe\u8868\u7684\u65b0\u7684\u4f4d\u7f6e\u662f j + oldCap\uff0c\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\n                        newTab[j + oldCap] = hiHead;\n                    }\n                }\n            }\n        }\n    }\n    return newTab;\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"get-\u8fc7\u7a0b\u5206\u6790-2",children:"get \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u76f8\u5bf9\u4e8e put \u6765\u8bf4\uff0cget \u771f\u7684\u592a\u7b80\u5355\u4e86\u3002"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u8ba1\u7b97 key \u7684 hash \u503c\uff0c\u6839\u636e hash \u503c\u627e\u5230\u5bf9\u5e94\u6570\u7ec4\u4e0b\u6807: hash & (length-1)"}),"\n",(0,a.jsx)(e.li,{children:"\u5224\u65ad\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u662f\u5426\u521a\u597d\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u8d70\u7b2c\u4e09\u6b65"}),"\n",(0,a.jsx)(e.li,{children:"\u5224\u65ad\u8be5\u5143\u7d20\u7c7b\u578b\u662f\u5426\u662f TreeNode\uff0c\u5982\u679c\u662f\uff0c\u7528\u7ea2\u9ed1\u6811\u7684\u65b9\u6cd5\u53d6\u6570\u636e\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u8d70\u7b2c\u56db\u6b65"}),"\n",(0,a.jsx)(e.li,{children:"\u904d\u5386\u94fe\u8868\uff0c\u76f4\u5230\u627e\u5230\u76f8\u7b49(==\u6216equals)\u7684 key"}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V get(Object key) {\n    Node<K,V> e;\n    return (e = getNode(hash(key), key)) == null ? null : e.value;\n}\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"final Node<K,V> getNode(int hash, Object key) {\n    Node<K,V>[] tab; Node<K,V> first, e; int n; K k;\n    if ((tab = table) != null && (n = tab.length) > 0 &&\n        (first = tab[(n - 1) & hash]) != null) {\n        // \u5224\u65ad\u7b2c\u4e00\u4e2a\u8282\u70b9\u662f\u4e0d\u662f\u5c31\u662f\u9700\u8981\u7684\n        if (first.hash == hash && // always check first node\n            ((k = first.key) == key || (key != null && key.equals(k))))\n            return first;\n        if ((e = first.next) != null) {\n            // \u5224\u65ad\u662f\u5426\u662f\u7ea2\u9ed1\u6811\n            if (first instanceof TreeNode)\n                return ((TreeNode<K,V>)first).getTreeNode(hash, key);\n\n            // \u94fe\u8868\u904d\u5386\n            do {\n                if (e.hash == hash &&\n                    ((k = e.key) == key || (key != null && key.equals(k))))\n                    return e;\n            } while ((e = e.next) != null);\n        }\n    }\n    return null;\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"java8-concurrenthashmap",children:"Java8 ConcurrentHashMap"}),"\n",(0,a.jsx)(e.p,{children:"Java7 \u4e2d\u5b9e\u73b0\u7684 ConcurrentHashMap \u8bf4\u5b9e\u8bdd\u8fd8\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0cJava8 \u5bf9 ConcurrentHashMap \u8fdb\u884c\u4e86\u6bd4\u8f83\u5927\u7684\u6539\u52a8\u3002\u5efa\u8bae\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003 Java8 \u4e2d HashMap \u76f8\u5bf9\u4e8e Java7 HashMap \u7684\u6539\u52a8\uff0c\u5bf9\u4e8e ConcurrentHashMap\uff0cJava8 \u4e5f\u5f15\u5165\u4e86\u7ea2\u9ed1\u6811\u3002"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"\u8bf4\u5b9e\u8bdd\uff0cJava8 ConcurrentHashMap \u6e90\u7801\u771f\u5fc3\u4e0d\u7b80\u5355\uff0c\u6700\u96be\u7684\u5728\u4e8e\u6269\u5bb9\uff0c\u6570\u636e\u8fc1\u79fb\u64cd\u4f5c\u4e0d\u5bb9\u6613\u770b\u61c2\u3002"})}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u5148\u7528\u4e00\u4e2a\u793a\u610f\u56fe\u6765\u63cf\u8ff0\u4e0b\u5176\u7ed3\u6784\uff1a"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{src:"https://www.javadoop.com/blogimages/map/4.png",alt:"4"})}),"\n",(0,a.jsx)(e.p,{children:"\u7ed3\u6784\u4e0a\u548c Java8 \u7684 HashMap \u57fa\u672c\u4e0a\u4e00\u6837\uff0c\u4e0d\u8fc7\u5b83\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u6027\uff0c\u6240\u4ee5\u5728\u6e90\u7801\u4e0a\u786e\u5b9e\u8981\u590d\u6742\u4e00\u4e9b\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"\u521d\u59cb\u5316-1",children:"\u521d\u59cb\u5316"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"// \u8fd9\u6784\u9020\u51fd\u6570\u91cc\uff0c\u4ec0\u4e48\u90fd\u4e0d\u5e72\npublic ConcurrentHashMap() {\n}\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public ConcurrentHashMap(int initialCapacity) {\n    if (initialCapacity < 0)\n        throw new IllegalArgumentException();\n    int cap = ((initialCapacity >= (MAXIMUM_CAPACITY >>> 1)) ?\n               MAXIMUM_CAPACITY :\n               tableSizeFor(initialCapacity + (initialCapacity >>> 1) + 1));\n    this.sizeCtl = cap;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u521d\u59cb\u5316\u65b9\u6cd5\u6709\u70b9\u610f\u601d\uff0c\u901a\u8fc7\u63d0\u4f9b\u521d\u59cb\u5bb9\u91cf\uff0c\u8ba1\u7b97\u4e86 sizeCtl\uff0csizeCtl = \u3010 (1.5 * initialCapacity + 1)\uff0c\u7136\u540e\u5411\u4e0a\u53d6\u6700\u8fd1\u7684 2 \u7684 n \u6b21\u65b9\u3011\u3002\u5982 initialCapacity \u4e3a 10\uff0c\u90a3\u4e48\u5f97\u5230 sizeCtl \u4e3a 16\uff0c\u5982\u679c initialCapacity \u4e3a 11\uff0c\u5f97\u5230 sizeCtl \u4e3a 32\u3002"}),"\n",(0,a.jsx)(e.p,{children:"sizeCtl \u8fd9\u4e2a\u5c5e\u6027\u4f7f\u7528\u7684\u573a\u666f\u5f88\u591a\uff0c\u4e0d\u8fc7\u53ea\u8981\u8ddf\u7740\u6587\u7ae0\u7684\u601d\u8def\u6765\uff0c\u5c31\u4e0d\u4f1a\u88ab\u5b83\u641e\u6655\u4e86\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c\u4f60\u7231\u6298\u817e\uff0c\u4e5f\u53ef\u4ee5\u770b\u4e0b\u53e6\u4e00\u4e2a\u6709\u4e09\u4e2a\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u8fd9\u91cc\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5927\u90e8\u5206\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u6211\u4eec\u4e5f\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u6765\u8fdb\u884c\u6e90\u7801\u5206\u6790\u5427\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"put-\u8fc7\u7a0b\u5206\u6790-3",children:"put \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"\u4ed4\u7ec6\u5730\u4e00\u884c\u4e00\u884c\u4ee3\u7801\u770b\u4e0b\u53bb\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V put(K key, V value) {\n    return putVal(key, value, false);\n}\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'final V putVal(K key, V value, boolean onlyIfAbsent) {\n    if (key == null || value == null) throw new NullPointerException();\n    // \u5f97\u5230 hash \u503c\n    int hash = spread(key.hashCode());\n    // \u7528\u4e8e\u8bb0\u5f55\u76f8\u5e94\u94fe\u8868\u7684\u957f\u5ea6\n    int binCount = 0;\n    for (Node<K,V>[] tab = table;;) {\n        Node<K,V> f; int n, i, fh;\n        // \u5982\u679c\u6570\u7ec4"\u7a7a"\uff0c\u8fdb\u884c\u6570\u7ec4\u521d\u59cb\u5316\n        if (tab == null || (n = tab.length) == 0)\n            // \u521d\u59cb\u5316\u6570\u7ec4\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\n            tab = initTable();\n\n        // \u627e\u8be5 hash \u503c\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\uff0c\u5f97\u5230\u7b2c\u4e00\u4e2a\u8282\u70b9 f\n        else if ((f = tabAt(tab, i = (n - 1) & hash)) == null) {\n            // \u5982\u679c\u6570\u7ec4\u8be5\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\n            //    \u7528\u4e00\u6b21 CAS \u64cd\u4f5c\u5c06\u8fd9\u4e2a\u65b0\u503c\u653e\u5165\u5176\u4e2d\u5373\u53ef\uff0c\u8fd9\u4e2a put \u64cd\u4f5c\u5dee\u4e0d\u591a\u5c31\u7ed3\u675f\u4e86\uff0c\u53ef\u4ee5\u62c9\u5230\u6700\u540e\u9762\u4e86\n            //          \u5982\u679c CAS \u5931\u8d25\uff0c\u90a3\u5c31\u662f\u6709\u5e76\u53d1\u64cd\u4f5c\uff0c\u8fdb\u5230\u4e0b\u4e00\u4e2a\u5faa\u73af\u5c31\u597d\u4e86\n            if (casTabAt(tab, i, null,\n                         new Node<K,V>(hash, key, value, null)))\n                break;                   // no lock when adding to empty bin\n        }\n        // hash \u5c45\u7136\u53ef\u4ee5\u7b49\u4e8e MOVED\uff0c\u8fd9\u4e2a\u9700\u8981\u5230\u540e\u9762\u624d\u80fd\u770b\u660e\u767d\uff0c\u4e0d\u8fc7\u4ece\u540d\u5b57\u4e0a\u4e5f\u80fd\u731c\u5230\uff0c\u80af\u5b9a\u662f\u56e0\u4e3a\u5728\u6269\u5bb9\n        else if ((fh = f.hash) == MOVED)\n            // \u5e2e\u52a9\u6570\u636e\u8fc1\u79fb\uff0c\u8fd9\u4e2a\u7b49\u5230\u770b\u5b8c\u6570\u636e\u8fc1\u79fb\u90e8\u5206\u7684\u4ecb\u7ecd\u540e\uff0c\u518d\u7406\u89e3\u8fd9\u4e2a\u5c31\u5f88\u7b80\u5355\u4e86\n            tab = helpTransfer(tab, f);\n\n        else { // \u5230\u8fd9\u91cc\u5c31\u662f\u8bf4\uff0cf \u662f\u8be5\u4f4d\u7f6e\u7684\u5934\u7ed3\u70b9\uff0c\u800c\u4e14\u4e0d\u4e3a\u7a7a\n\n            V oldVal = null;\n            // \u83b7\u53d6\u6570\u7ec4\u8be5\u4f4d\u7f6e\u7684\u5934\u7ed3\u70b9\u7684\u76d1\u89c6\u5668\u9501\n            synchronized (f) {\n                if (tabAt(tab, i) == f) {\n                    if (fh >= 0) { // \u5934\u7ed3\u70b9\u7684 hash \u503c\u5927\u4e8e 0\uff0c\u8bf4\u660e\u662f\u94fe\u8868\n                        // \u7528\u4e8e\u7d2f\u52a0\uff0c\u8bb0\u5f55\u94fe\u8868\u7684\u957f\u5ea6\n                        binCount = 1;\n                        // \u904d\u5386\u94fe\u8868\n                        for (Node<K,V> e = f;; ++binCount) {\n                            K ek;\n                            // \u5982\u679c\u53d1\u73b0\u4e86"\u76f8\u7b49"\u7684 key\uff0c\u5224\u65ad\u662f\u5426\u8981\u8fdb\u884c\u503c\u8986\u76d6\uff0c\u7136\u540e\u4e5f\u5c31\u53ef\u4ee5 break \u4e86\n                            if (e.hash == hash &&\n                                ((ek = e.key) == key ||\n                                 (ek != null && key.equals(ek)))) {\n                                oldVal = e.val;\n                                if (!onlyIfAbsent)\n                                    e.val = value;\n                                break;\n                            }\n                            // \u5230\u4e86\u94fe\u8868\u7684\u6700\u672b\u7aef\uff0c\u5c06\u8fd9\u4e2a\u65b0\u503c\u653e\u5230\u94fe\u8868\u7684\u6700\u540e\u9762\n                            Node<K,V> pred = e;\n                            if ((e = e.next) == null) {\n                                pred.next = new Node<K,V>(hash, key,\n                                                          value, null);\n                                break;\n                            }\n                        }\n                    }\n                    else if (f instanceof TreeBin) { // \u7ea2\u9ed1\u6811\n                        Node<K,V> p;\n                        binCount = 2;\n                        // \u8c03\u7528\u7ea2\u9ed1\u6811\u7684\u63d2\u503c\u65b9\u6cd5\u63d2\u5165\u65b0\u8282\u70b9\n                        if ((p = ((TreeBin<K,V>)f).putTreeVal(hash, key,\n                                                       value)) != null) {\n                            oldVal = p.val;\n                            if (!onlyIfAbsent)\n                                p.val = value;\n                        }\n                    }\n                }\n            }\n\n            if (binCount != 0) {\n                // \u5224\u65ad\u662f\u5426\u8981\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u4e34\u754c\u503c\u548c HashMap \u4e00\u6837\uff0c\u4e5f\u662f 8\n                if (binCount >= TREEIFY_THRESHOLD)\n                    // \u8fd9\u4e2a\u65b9\u6cd5\u548c HashMap \u4e2d\u7a0d\u5fae\u6709\u4e00\u70b9\u70b9\u4e0d\u540c\uff0c\u90a3\u5c31\u662f\u5b83\u4e0d\u662f\u4e00\u5b9a\u4f1a\u8fdb\u884c\u7ea2\u9ed1\u6811\u8f6c\u6362\uff0c\n                    // \u5982\u679c\u5f53\u524d\u6570\u7ec4\u7684\u957f\u5ea6\u5c0f\u4e8e 64\uff0c\u90a3\u4e48\u4f1a\u9009\u62e9\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9\uff0c\u800c\u4e0d\u662f\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\n                    //    \u5177\u4f53\u6e90\u7801\u6211\u4eec\u5c31\u4e0d\u770b\u4e86\uff0c\u6269\u5bb9\u90e8\u5206\u540e\u9762\u8bf4\n                    treeifyBin(tab, i);\n                if (oldVal != null)\n                    return oldVal;\n                break;\n            }\n        }\n    }\n    // \n    addCount(1L, binCount);\n    return null;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"put \u7684\u4e3b\u6d41\u7a0b\u770b\u5b8c\u4e86\uff0c\u4f46\u662f\u81f3\u5c11\u7559\u4e0b\u4e86\u51e0\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u662f\u521d\u59cb\u5316\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6269\u5bb9\uff0c\u7b2c\u4e09\u4e2a\u662f\u5e2e\u52a9\u6570\u636e\u8fc1\u79fb\uff0c\u8fd9\u4e9b\u6211\u4eec\u90fd\u4f1a\u5728\u540e\u9762\u8fdb\u884c\u4e00\u4e00\u4ecb\u7ecd\u3002"}),"\n",(0,a.jsx)(e.h4,{id:"\u521d\u59cb\u5316\u6570\u7ec4inittable",children:"\u521d\u59cb\u5316\u6570\u7ec4\uff1ainitTable"}),"\n",(0,a.jsxs)(e.p,{children:["\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u4e3b\u8981\u5c31\u662f\u521d\u59cb\u5316\u4e00\u4e2a",(0,a.jsx)(e.strong,{children:"\u5408\u9002\u5927\u5c0f"}),"\u7684\u6570\u7ec4\uff0c\u7136\u540e\u4f1a\u8bbe\u7f6e sizeCtl\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u7684\u5e76\u53d1\u95ee\u9898\u662f\u901a\u8fc7\u5bf9 sizeCtl \u8fdb\u884c\u4e00\u4e2a CAS \u64cd\u4f5c\u6765\u63a7\u5236\u7684\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'private final Node<K,V>[] initTable() {\n    Node<K,V>[] tab; int sc;\n    while ((tab = table) == null || tab.length == 0) {\n        // \u521d\u59cb\u5316\u7684"\u529f\u52b3"\u88ab\u5176\u4ed6\u7ebf\u7a0b"\u62a2\u53bb"\u4e86\n        if ((sc = sizeCtl) < 0)\n            Thread.yield(); // lost initialization race; just spin\n        // CAS \u4e00\u4e0b\uff0c\u5c06 sizeCtl \u8bbe\u7f6e\u4e3a -1\uff0c\u4ee3\u8868\u62a2\u5230\u4e86\u9501\n        else if (U.compareAndSwapInt(this, SIZECTL, sc, -1)) {\n            try {\n                if ((tab = table) == null || tab.length == 0) {\n                    // DEFAULT_CAPACITY \u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u662f 16\n                    int n = (sc > 0) ? sc : DEFAULT_CAPACITY;\n                    // \u521d\u59cb\u5316\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a 16 \u6216\u521d\u59cb\u5316\u65f6\u63d0\u4f9b\u7684\u957f\u5ea6\n                    Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n];\n                    // \u5c06\u8fd9\u4e2a\u6570\u7ec4\u8d4b\u503c\u7ed9 table\uff0ctable \u662f volatile \u7684\n                    table = tab = nt;\n                    // \u5982\u679c n \u4e3a 16 \u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u91cc sc = 12\n                    // \u5176\u5b9e\u5c31\u662f 0.75 * n\n                    sc = n - (n >>> 2);\n                }\n            } finally {\n                // \u8bbe\u7f6e sizeCtl \u4e3a sc\uff0c\u6211\u4eec\u5c31\u5f53\u662f 12 \u5427\n                sizeCtl = sc;\n            }\n            break;\n        }\n    }\n    return tab;\n}\n'})}),"\n",(0,a.jsx)(e.h4,{id:"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811-treeifybin",children:"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811: treeifyBin"}),"\n",(0,a.jsx)(e.p,{children:"\u524d\u9762\u6211\u4eec\u5728 put \u6e90\u7801\u5206\u6790\u4e5f\u8bf4\u8fc7\uff0ctreeifyBin \u4e0d\u4e00\u5b9a\u5c31\u4f1a\u8fdb\u884c\u7ea2\u9ed1\u6811\u8f6c\u6362\uff0c\u4e5f\u53ef\u80fd\u662f\u4ec5\u4ec5\u505a\u6570\u7ec4\u6269\u5bb9\u3002\u6211\u4eec\u8fd8\u662f\u8fdb\u884c\u6e90\u7801\u5206\u6790\u5427\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"private final void treeifyBin(Node<K,V>[] tab, int index) {\n    Node<K,V> b; int n, sc;\n    if (tab != null) {\n        // MIN_TREEIFY_CAPACITY \u4e3a 64\n        // \u6240\u4ee5\uff0c\u5982\u679c\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e 64 \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f 32 \u6216\u8005 16 \u6216\u8005\u66f4\u5c0f\u7684\u65f6\u5019\uff0c\u4f1a\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9\n        if ((n = tab.length) < MIN_TREEIFY_CAPACITY)\n            // \u540e\u9762\u6211\u4eec\u518d\u8be6\u7ec6\u5206\u6790\u8fd9\u4e2a\u65b9\u6cd5\n            tryPresize(n << 1);\n        // b \u662f\u5934\u7ed3\u70b9\n        else if ((b = tabAt(tab, index)) != null && b.hash >= 0) {\n            // \u52a0\u9501\n            synchronized (b) {\n\n                if (tabAt(tab, index) == b) {\n                    // \u4e0b\u9762\u5c31\u662f\u904d\u5386\u94fe\u8868\uff0c\u5efa\u7acb\u4e00\u9897\u7ea2\u9ed1\u6811\n                    TreeNode<K,V> hd = null, tl = null;\n                    for (Node<K,V> e = b; e != null; e = e.next) {\n                        TreeNode<K,V> p =\n                            new TreeNode<K,V>(e.hash, e.key, e.val,\n                                              null, null);\n                        if ((p.prev = tl) == null)\n                            hd = p;\n                        else\n                            tl.next = p;\n                        tl = p;\n                    }\n                    // \u5c06\u7ea2\u9ed1\u6811\u8bbe\u7f6e\u5230\u6570\u7ec4\u76f8\u5e94\u4f4d\u7f6e\u4e2d\n                    setTabAt(tab, index, new TreeBin<K,V>(hd));\n                }\n            }\n        }\n    }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"\u6269\u5bb9trypresize",children:"\u6269\u5bb9\uff1atryPresize"}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u679c\u8bf4 Java8 ConcurrentHashMap \u7684\u6e90\u7801\u4e0d\u7b80\u5355\uff0c\u90a3\u4e48\u8bf4\u7684\u5c31\u662f\u6269\u5bb9\u64cd\u4f5c\u548c\u8fc1\u79fb\u64cd\u4f5c\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u8981\u5b8c\u5b8c\u5168\u5168\u770b\u61c2\u8fd8\u9700\u8981\u770b\u4e4b\u540e\u7684 transfer \u65b9\u6cd5\uff0c\u8bfb\u8005\u5e94\u8be5\u63d0\u524d\u77e5\u9053\u8fd9\u70b9\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u91cc\u7684\u6269\u5bb9\u4e5f\u662f\u505a\u7ffb\u500d\u6269\u5bb9\u7684\uff0c\u6269\u5bb9\u540e\u6570\u7ec4\u5bb9\u91cf\u4e3a\u539f\u6765\u7684 2 \u500d\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'// \u9996\u5148\u8981\u8bf4\u660e\u7684\u662f\uff0c\u65b9\u6cd5\u53c2\u6570 size \u4f20\u8fdb\u6765\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u7ffb\u4e86\u500d\u4e86\nprivate final void tryPresize(int size) {\n    // c\uff1asize \u7684 1.5 \u500d\uff0c\u518d\u52a0 1\uff0c\u518d\u5f80\u4e0a\u53d6\u6700\u8fd1\u7684 2 \u7684 n \u6b21\u65b9\u3002\n    int c = (size >= (MAXIMUM_CAPACITY >>> 1)) ? MAXIMUM_CAPACITY :\n        tableSizeFor(size + (size >>> 1) + 1);\n    int sc;\n    while ((sc = sizeCtl) >= 0) {\n        Node<K,V>[] tab = table; int n;\n\n        // \u8fd9\u4e2a if \u5206\u652f\u548c\u4e4b\u524d\u8bf4\u7684\u521d\u59cb\u5316\u6570\u7ec4\u7684\u4ee3\u7801\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u7ba1\u8fd9\u5757\u4ee3\u7801\n        if (tab == null || (n = tab.length) == 0) {\n            n = (sc > c) ? sc : c;\n            if (U.compareAndSwapInt(this, SIZECTL, sc, -1)) {\n                try {\n                    if (table == tab) {\n                        @SuppressWarnings("unchecked")\n                        Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n];\n                        table = nt;\n                        sc = n - (n >>> 2); // 0.75 * n\n                    }\n                } finally {\n                    sizeCtl = sc;\n                }\n            }\n        }\n        else if (c <= sc || n >= MAXIMUM_CAPACITY)\n            break;\n        else if (tab == table) {\n            // \u6211\u6ca1\u770b\u61c2 rs \u7684\u771f\u6b63\u542b\u4e49\u662f\u4ec0\u4e48\uff0c\u4e0d\u8fc7\u4e5f\u5173\u7cfb\u4e0d\u5927\n            int rs = resizeStamp(n);\n\n            if (sc < 0) {\n                Node<K,V>[] nt;\n                if ((sc >>> RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 ||\n                    sc == rs + MAX_RESIZERS || (nt = nextTable) == null ||\n                    transferIndex <= 0)\n                    break;\n                // 2\\. \u7528 CAS \u5c06 sizeCtl \u52a0 1\uff0c\u7136\u540e\u6267\u884c transfer \u65b9\u6cd5\n                //    \u6b64\u65f6 nextTab \u4e0d\u4e3a null\n                if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1))\n                    transfer(tab, nt);\n            }\n            // 1\\. \u5c06 sizeCtl \u8bbe\u7f6e\u4e3a (rs << RESIZE_STAMP_SHIFT) + 2)\n            //     \u6211\u662f\u6ca1\u770b\u61c2\u8fd9\u4e2a\u503c\u771f\u6b63\u7684\u610f\u4e49\u662f\u4ec0\u4e48\uff1f\u4e0d\u8fc7\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u7684\u662f\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u8d1f\u6570\n            //  \u8c03\u7528 transfer \u65b9\u6cd5\uff0c\u6b64\u65f6 nextTab \u53c2\u6570\u4e3a null\n            else if (U.compareAndSwapInt(this, SIZECTL, sc,\n                                         (rs << RESIZE_STAMP_SHIFT) + 2))\n                transfer(tab, null);\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6838\u5fc3\u5728\u4e8e sizeCtl \u503c\u7684\u64cd\u4f5c\uff0c\u9996\u5148\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u8d1f\u6570\uff0c\u7136\u540e\u6267\u884c transfer(tab, null)\uff0c\u518d\u4e0b\u4e00\u4e2a\u5faa\u73af\u5c06 sizeCtl \u52a0 1\uff0c\u5e76\u6267\u884c transfer(tab, nt)\uff0c\u4e4b\u540e\u53ef\u80fd\u662f\u7ee7\u7eed sizeCtl \u52a0 1\uff0c\u5e76\u6267\u884c transfer(tab, nt)\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u6240\u4ee5\uff0c\u53ef\u80fd\u7684\u64cd\u4f5c\u5c31\u662f\u6267\u884c",(0,a.jsx)(e.strong,{children:"1 \u6b21 transfer(tab, null) + \u591a\u6b21 transfer(tab, nt)"}),"\uff0c\u8fd9\u91cc\u600e\u4e48\u7ed3\u675f\u5faa\u73af\u7684\u9700\u8981\u770b\u5b8c transfer \u6e90\u7801\u624d\u6e05\u695a\u3002"]}),"\n",(0,a.jsx)(e.h4,{id:"\u6570\u636e\u8fc1\u79fbtransfer",children:"\u6570\u636e\u8fc1\u79fb\uff1atransfer"}),"\n",(0,a.jsx)(e.p,{children:"\u4e0b\u9762\u8fd9\u4e2a\u65b9\u6cd5\u6709\u70b9\u957f\uff0c\u5c06\u539f\u6765\u7684 tab \u6570\u7ec4\u7684\u5143\u7d20\u8fc1\u79fb\u5230\u65b0\u7684 nextTab \u6570\u7ec4\u4e2d\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u867d\u7136\u6211\u4eec\u4e4b\u524d\u8bf4\u7684 tryPresize \u65b9\u6cd5\u4e2d\u591a\u6b21\u8c03\u7528 transfer \u4e0d\u6d89\u53ca\u591a\u7ebf\u7a0b\uff0c\u4f46\u662f\u8fd9\u4e2a transfer \u65b9\u6cd5\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u88ab\u8c03\u7528\uff0c\u5178\u578b\u5730\uff0c\u6211\u4eec\u4e4b\u524d\u5728\u8bf4 put \u65b9\u6cd5\u7684\u65f6\u5019\u5c31\u8bf4\u8fc7\u4e86\uff0c\u8bf7\u5f80\u4e0a\u770b put \u65b9\u6cd5\uff0c\u662f\u4e0d\u662f\u6709\u4e2a\u5730\u65b9\u8c03\u7528\u4e86 helpTransfer \u65b9\u6cd5\uff0chelpTransfer \u65b9\u6cd5\u4f1a\u8c03\u7528 transfer \u65b9\u6cd5\u7684\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6b64\u65b9\u6cd5\u652f\u6301\u591a\u7ebf\u7a0b\u6267\u884c\uff0c\u5916\u56f4\u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4f1a\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u53d1\u8d77\u6570\u636e\u8fc1\u79fb\u7684\u7ebf\u7a0b\uff0cnextTab \u53c2\u6570\u4e3a null\uff0c\u4e4b\u540e\u518d\u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u65f6\u5019\uff0cnextTab \u4e0d\u4f1a\u4e3a null\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u9605\u8bfb\u6e90\u7801\u4e4b\u524d\uff0c\u5148\u8981\u7406\u89e3\u5e76\u53d1\u64cd\u4f5c\u7684\u673a\u5236\u3002\u539f\u6570\u7ec4\u957f\u5ea6\u4e3a n\uff0c\u6240\u4ee5\u6211\u4eec\u6709 n \u4e2a\u8fc1\u79fb\u4efb\u52a1\uff0c\u8ba9\u6bcf\u4e2a\u7ebf\u7a0b\u6bcf\u6b21\u8d1f\u8d23\u4e00\u4e2a\u5c0f\u4efb\u52a1\u662f\u6700\u7b80\u5355\u7684\uff0c\u6bcf\u505a\u5b8c\u4e00\u4e2a\u4efb\u52a1\u518d\u68c0\u6d4b\u662f\u5426\u6709\u5176\u4ed6\u6ca1\u505a\u5b8c\u7684\u4efb\u52a1\uff0c\u5e2e\u52a9\u8fc1\u79fb\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c Doug Lea \u4f7f\u7528\u4e86\u4e00\u4e2a stride\uff0c\u7b80\u5355\u7406\u89e3\u5c31\u662f",(0,a.jsx)(e.strong,{children:"\u6b65\u957f"}),"\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6bcf\u6b21\u8d1f\u8d23\u8fc1\u79fb\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u5982\u6bcf\u6b21\u8fc1\u79fb 16 \u4e2a\u5c0f\u4efb\u52a1\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a\u5168\u5c40\u7684\u8c03\u5ea6\u8005\u6765\u5b89\u6392\u54ea\u4e2a\u7ebf\u7a0b\u6267\u884c\u54ea\u51e0\u4e2a\u4efb\u52a1\uff0c\u8fd9\u4e2a\u5c31\u662f\u5c5e\u6027 transferIndex \u7684\u4f5c\u7528\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u7b2c\u4e00\u4e2a\u53d1\u8d77\u6570\u636e\u8fc1\u79fb\u7684\u7ebf\u7a0b\u4f1a\u5c06 transferIndex \u6307\u5411\u539f\u6570\u7ec4\u6700\u540e\u7684\u4f4d\u7f6e\uff0c\u7136\u540e",(0,a.jsx)(e.strong,{children:"\u4ece\u540e\u5f80\u524d"}),"\u7684 stride \u4e2a\u4efb\u52a1\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7136\u540e\u5c06 transferIndex \u6307\u5411\u65b0\u7684\u4f4d\u7f6e\uff0c\u518d\u5f80\u524d\u7684 stride \u4e2a\u4efb\u52a1\u5c5e\u4e8e\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u8bf4\u7684\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e0d\u662f\u771f\u7684\u4e00\u5b9a\u6307\u4ee3\u4e86\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u4e2a\u8bfb\u8005\u5e94\u8be5\u80fd\u7406\u89e3\u5427\u3002\u5176\u5b9e\u5c31\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u8fc1\u79fb\u4efb\u52a1\u5206\u4e3a\u4e86\u4e00\u4e2a\u4e2a\u4efb\u52a1\u5305\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"private final void transfer(Node<K,V>[] tab, Node<K,V>[] nextTab) {\n    int n = tab.length, stride;\n\n    // stride \u5728\u5355\u6838\u4e0b\u76f4\u63a5\u7b49\u4e8e n\uff0c\u591a\u6838\u6a21\u5f0f\u4e0b\u4e3a (n>>>3)/NCPU\uff0c\u6700\u5c0f\u503c\u662f 16\n    // stride \u53ef\u4ee5\u7406\u89e3\u4e3a\u201d\u6b65\u957f\u201c\uff0c\u6709 n \u4e2a\u4f4d\u7f6e\u662f\u9700\u8981\u8fdb\u884c\u8fc1\u79fb\u7684\uff0c\n    //   \u5c06\u8fd9 n \u4e2a\u4efb\u52a1\u5206\u4e3a\u591a\u4e2a\u4efb\u52a1\u5305\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5305\u6709 stride \u4e2a\u4efb\u52a1\n    if ((stride = (NCPU > 1) ? (n >>> 3) / NCPU : n) < MIN_TRANSFER_STRIDE)\n        stride = MIN_TRANSFER_STRIDE; // subdivide range\n\n    // \u5982\u679c nextTab \u4e3a null\uff0c\u5148\u8fdb\u884c\u4e00\u6b21\u521d\u59cb\u5316\n    //    \u524d\u9762\u6211\u4eec\u8bf4\u4e86\uff0c\u5916\u56f4\u4f1a\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u53d1\u8d77\u8fc1\u79fb\u7684\u7ebf\u7a0b\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\uff0c\u53c2\u6570 nextTab \u4e3a null\n    //       \u4e4b\u540e\u53c2\u4e0e\u8fc1\u79fb\u7684\u7ebf\u7a0b\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\uff0cnextTab \u4e0d\u4f1a\u4e3a null\n    if (nextTab == null) {\n        try {\n            // \u5bb9\u91cf\u7ffb\u500d\n            Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n << 1];\n            nextTab = nt;\n        } catch (Throwable ex) {      // try to cope with OOME\n            sizeCtl = Integer.MAX_VALUE;\n            return;\n        }\n        // nextTable \u662f ConcurrentHashMap \u4e2d\u7684\u5c5e\u6027\n        nextTable = nextTab;\n        // transferIndex \u4e5f\u662f ConcurrentHashMap \u7684\u5c5e\u6027\uff0c\u7528\u4e8e\u63a7\u5236\u8fc1\u79fb\u7684\u4f4d\u7f6e\n        transferIndex = n;\n    }\n\n    int nextn = nextTab.length;\n\n    // ForwardingNode \u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u6b63\u5728\u88ab\u8fc1\u79fb\u7684 Node\n    // \u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u4f1a\u751f\u6210\u4e00\u4e2aNode\uff0ckey\u3001value \u548c next \u90fd\u4e3a null\uff0c\u5173\u952e\u662f hash \u4e3a MOVED\n    // \u540e\u9762\u6211\u4eec\u4f1a\u770b\u5230\uff0c\u539f\u6570\u7ec4\u4e2d\u4f4d\u7f6e i \u5904\u7684\u8282\u70b9\u5b8c\u6210\u8fc1\u79fb\u5de5\u4f5c\u540e\uff0c\n    //    \u5c31\u4f1a\u5c06\u4f4d\u7f6e i \u5904\u8bbe\u7f6e\u4e3a\u8fd9\u4e2a ForwardingNode\uff0c\u7528\u6765\u544a\u8bc9\u5176\u4ed6\u7ebf\u7a0b\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\n    //    \u6240\u4ee5\u5b83\u5176\u5b9e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6807\u5fd7\u3002\n    ForwardingNode<K,V> fwd = new ForwardingNode<K,V>(nextTab);\n\n    // advance \u6307\u7684\u662f\u505a\u5b8c\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fc1\u79fb\u5de5\u4f5c\uff0c\u53ef\u4ee5\u51c6\u5907\u505a\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e86\n    boolean advance = true;\n    boolean finishing = false; // to ensure sweep before committing nextTab\n\n    /*\n     * \u4e0b\u9762\u8fd9\u4e2a for \u5faa\u73af\uff0c\u6700\u96be\u7406\u89e3\u7684\u5728\u524d\u9762\uff0c\u800c\u8981\u770b\u61c2\u5b83\u4eec\uff0c\u5e94\u8be5\u5148\u770b\u61c2\u540e\u9762\u7684\uff0c\u7136\u540e\u518d\u5012\u56de\u6765\u770b\n     * \n     */\n\n    // i \u662f\u4f4d\u7f6e\u7d22\u5f15\uff0cbound \u662f\u8fb9\u754c\uff0c\u6ce8\u610f\u662f\u4ece\u540e\u5f80\u524d\n    for (int i = 0, bound = 0;;) {\n        Node<K,V> f; int fh;\n\n        // \u4e0b\u9762\u8fd9\u4e2a while \u771f\u7684\u662f\u4e0d\u597d\u7406\u89e3\n        // advance \u4e3a true \u8868\u793a\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fc1\u79fb\u4e86\n        //   \u7b80\u5355\u7406\u89e3\u7ed3\u5c40\uff1ai \u6307\u5411\u4e86 transferIndex\uff0cbound \u6307\u5411\u4e86 transferIndex-stride\n        while (advance) {\n            int nextIndex, nextBound;\n            if (--i >= bound || finishing)\n                advance = false;\n\n            // \u5c06 transferIndex \u503c\u8d4b\u7ed9 nextIndex\n            // \u8fd9\u91cc transferIndex \u4e00\u65e6\u5c0f\u4e8e\u7b49\u4e8e 0\uff0c\u8bf4\u660e\u539f\u6570\u7ec4\u7684\u6240\u6709\u4f4d\u7f6e\u90fd\u6709\u76f8\u5e94\u7684\u7ebf\u7a0b\u53bb\u5904\u7406\u4e86\n            else if ((nextIndex = transferIndex) <= 0) {\n                i = -1;\n                advance = false;\n            }\n            else if (U.compareAndSwapInt\n                     (this, TRANSFERINDEX, nextIndex,\n                      nextBound = (nextIndex > stride ?\n                                   nextIndex - stride : 0))) {\n                // \u770b\u62ec\u53f7\u4e2d\u7684\u4ee3\u7801\uff0cnextBound \u662f\u8fd9\u6b21\u8fc1\u79fb\u4efb\u52a1\u7684\u8fb9\u754c\uff0c\u6ce8\u610f\uff0c\u662f\u4ece\u540e\u5f80\u524d\n                bound = nextBound;\n                i = nextIndex - 1;\n                advance = false;\n            }\n        }\n        if (i < 0 || i >= n || i + n >= nextn) {\n            int sc;\n            if (finishing) {\n                // \u6240\u6709\u7684\u8fc1\u79fb\u64cd\u4f5c\u5df2\u7ecf\u5b8c\u6210\n                nextTable = null;\n                // \u5c06\u65b0\u7684 nextTab \u8d4b\u503c\u7ed9 table \u5c5e\u6027\uff0c\u5b8c\u6210\u8fc1\u79fb\n                table = nextTab;\n                // \u91cd\u65b0\u8ba1\u7b97 sizeCtl\uff1an \u662f\u539f\u6570\u7ec4\u957f\u5ea6\uff0c\u6240\u4ee5 sizeCtl \u5f97\u51fa\u7684\u503c\u5c06\u662f\u65b0\u6570\u7ec4\u957f\u5ea6\u7684 0.75 \u500d\n                sizeCtl = (n << 1) - (n >>> 1);\n                return;\n            }\n\n            // \u4e4b\u524d\u6211\u4eec\u8bf4\u8fc7\uff0csizeCtl \u5728\u8fc1\u79fb\u524d\u4f1a\u8bbe\u7f6e\u4e3a (rs << RESIZE_STAMP_SHIFT) + 2\n            // \u7136\u540e\uff0c\u6bcf\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53c2\u4e0e\u8fc1\u79fb\u5c31\u4f1a\u5c06 sizeCtl \u52a0 1\uff0c\n            // \u8fd9\u91cc\u4f7f\u7528 CAS \u64cd\u4f5c\u5bf9 sizeCtl \u8fdb\u884c\u51cf 1\uff0c\u4ee3\u8868\u505a\u5b8c\u4e86\u5c5e\u4e8e\u81ea\u5df1\u7684\u4efb\u52a1\n            if (U.compareAndSwapInt(this, SIZECTL, sc = sizeCtl, sc - 1)) {\n                // \u4efb\u52a1\u7ed3\u675f\uff0c\u65b9\u6cd5\u9000\u51fa\n                if ((sc - 2) != resizeStamp(n) << RESIZE_STAMP_SHIFT)\n                    return;\n\n                // \u5230\u8fd9\u91cc\uff0c\u8bf4\u660e (sc - 2) == resizeStamp(n) << RESIZE_STAMP_SHIFT\uff0c\n                // \u4e5f\u5c31\u662f\u8bf4\uff0c\u6240\u6709\u7684\u8fc1\u79fb\u4efb\u52a1\u90fd\u505a\u5b8c\u4e86\uff0c\u4e5f\u5c31\u4f1a\u8fdb\u5165\u5230\u4e0a\u9762\u7684 if(finishing){} \u5206\u652f\u4e86\n                finishing = advance = true;\n                i = n; // recheck before commit\n            }\n        }\n        // \u5982\u679c\u4f4d\u7f6e i \u5904\u662f\u7a7a\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u8282\u70b9\uff0c\u90a3\u4e48\u653e\u5165\u521a\u521a\u521d\u59cb\u5316\u7684 ForwardingNode \u201d\u7a7a\u8282\u70b9\u201c\n        else if ((f = tabAt(tab, i)) == null)\n            advance = casTabAt(tab, i, null, fwd);\n        // \u8be5\u4f4d\u7f6e\u5904\u662f\u4e00\u4e2a ForwardingNode\uff0c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u8fc1\u79fb\u8fc7\u4e86\n        else if ((fh = f.hash) == MOVED)\n            advance = true; // already processed\n        else {\n            // \u5bf9\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u7684\u7ed3\u70b9\u52a0\u9501\uff0c\u5f00\u59cb\u5904\u7406\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u7684\u8fc1\u79fb\u5de5\u4f5c\n            synchronized (f) {\n                if (tabAt(tab, i) == f) {\n                    Node<K,V> ln, hn;\n                    // \u5934\u7ed3\u70b9\u7684 hash \u5927\u4e8e 0\uff0c\u8bf4\u660e\u662f\u94fe\u8868\u7684 Node \u8282\u70b9\n                    if (fh >= 0) {\n                        // \u4e0b\u9762\u8fd9\u4e00\u5757\u548c Java7 \u4e2d\u7684 ConcurrentHashMap \u8fc1\u79fb\u662f\u5dee\u4e0d\u591a\u7684\uff0c\n                        // \u9700\u8981\u5c06\u94fe\u8868\u4e00\u5206\u4e3a\u4e8c\uff0c\n                        //   \u627e\u5230\u539f\u94fe\u8868\u4e2d\u7684 lastRun\uff0c\u7136\u540e lastRun \u53ca\u5176\u4e4b\u540e\u7684\u8282\u70b9\u662f\u4e00\u8d77\u8fdb\u884c\u8fc1\u79fb\u7684\n                        //   lastRun \u4e4b\u524d\u7684\u8282\u70b9\u9700\u8981\u8fdb\u884c\u514b\u9686\uff0c\u7136\u540e\u5206\u5230\u4e24\u4e2a\u94fe\u8868\u4e2d\n                        int runBit = fh & n;\n                        Node<K,V> lastRun = f;\n                        for (Node<K,V> p = f.next; p != null; p = p.next) {\n                            int b = p.hash & n;\n                            if (b != runBit) {\n                                runBit = b;\n                                lastRun = p;\n                            }\n                        }\n                        if (runBit == 0) {\n                            ln = lastRun;\n                            hn = null;\n                        }\n                        else {\n                            hn = lastRun;\n                            ln = null;\n                        }\n                        for (Node<K,V> p = f; p != lastRun; p = p.next) {\n                            int ph = p.hash; K pk = p.key; V pv = p.val;\n                            if ((ph & n) == 0)\n                                ln = new Node<K,V>(ph, pk, pv, ln);\n                            else\n                                hn = new Node<K,V>(ph, pk, pv, hn);\n                        }\n                        // \u5176\u4e2d\u7684\u4e00\u4e2a\u94fe\u8868\u653e\u5728\u65b0\u6570\u7ec4\u7684\u4f4d\u7f6e i\n                        setTabAt(nextTab, i, ln);\n                        // \u53e6\u4e00\u4e2a\u94fe\u8868\u653e\u5728\u65b0\u6570\u7ec4\u7684\u4f4d\u7f6e i+n\n                        setTabAt(nextTab, i + n, hn);\n                        // \u5c06\u539f\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u8bbe\u7f6e\u4e3a fwd\uff0c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\n                        //    \u5176\u4ed6\u7ebf\u7a0b\u4e00\u65e6\u770b\u5230\u8be5\u4f4d\u7f6e\u7684 hash \u503c\u4e3a MOVED\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u8fc1\u79fb\u4e86\n                        setTabAt(tab, i, fwd);\n                        // advance \u8bbe\u7f6e\u4e3a true\uff0c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u8fc1\u79fb\u5b8c\u6bd5\n                        advance = true;\n                    }\n                    else if (f instanceof TreeBin) {\n                        // \u7ea2\u9ed1\u6811\u7684\u8fc1\u79fb\n                        TreeBin<K,V> t = (TreeBin<K,V>)f;\n                        TreeNode<K,V> lo = null, loTail = null;\n                        TreeNode<K,V> hi = null, hiTail = null;\n                        int lc = 0, hc = 0;\n                        for (Node<K,V> e = t.first; e != null; e = e.next) {\n                            int h = e.hash;\n                            TreeNode<K,V> p = new TreeNode<K,V>\n                                (h, e.key, e.val, null, null);\n                            if ((h & n) == 0) {\n                                if ((p.prev = loTail) == null)\n                                    lo = p;\n                                else\n                                    loTail.next = p;\n                                loTail = p;\n                                ++lc;\n                            }\n                            else {\n                                if ((p.prev = hiTail) == null)\n                                    hi = p;\n                                else\n                                    hiTail.next = p;\n                                hiTail = p;\n                                ++hc;\n                            }\n                        }\n                        // \u5982\u679c\u4e00\u5206\u4e3a\u4e8c\u540e\uff0c\u8282\u70b9\u6570\u5c11\u4e8e 8\uff0c\u90a3\u4e48\u5c06\u7ea2\u9ed1\u6811\u8f6c\u6362\u56de\u94fe\u8868\n                        ln = (lc <= UNTREEIFY_THRESHOLD) ? untreeify(lo) :\n                            (hc != 0) ? new TreeBin<K,V>(lo) : t;\n                        hn = (hc <= UNTREEIFY_THRESHOLD) ? untreeify(hi) :\n                            (lc != 0) ? new TreeBin<K,V>(hi) : t;\n\n                        // \u5c06 ln \u653e\u7f6e\u5728\u65b0\u6570\u7ec4\u7684\u4f4d\u7f6e i\n                        setTabAt(nextTab, i, ln);\n                        // \u5c06 hn \u653e\u7f6e\u5728\u65b0\u6570\u7ec4\u7684\u4f4d\u7f6e i+n\n                        setTabAt(nextTab, i + n, hn);\n                        // \u5c06\u539f\u6570\u7ec4\u8be5\u4f4d\u7f6e\u5904\u8bbe\u7f6e\u4e3a fwd\uff0c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\n                        //    \u5176\u4ed6\u7ebf\u7a0b\u4e00\u65e6\u770b\u5230\u8be5\u4f4d\u7f6e\u7684 hash \u503c\u4e3a MOVED\uff0c\u5c31\u4e0d\u4f1a\u8fdb\u884c\u8fc1\u79fb\u4e86\n                        setTabAt(tab, i, fwd);\n                        // advance \u8bbe\u7f6e\u4e3a true\uff0c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u8fc1\u79fb\u5b8c\u6bd5\n                        advance = true;\n                    }\n                }\n            }\n        }\n    }\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u8bf4\u5230\u5e95\uff0ctransfer \u8fd9\u4e2a\u65b9\u6cd5\u5e76\u6ca1\u6709\u5b9e\u73b0\u6240\u6709\u7684\u8fc1\u79fb\u4efb\u52a1\uff0c\u6bcf\u6b21\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u5b9e\u73b0\u4e86 transferIndex \u5f80\u524d stride \u4e2a\u4f4d\u7f6e\u7684\u8fc1\u79fb\u5de5\u4f5c\uff0c\u5176\u4ed6\u7684\u9700\u8981\u7531\u5916\u56f4\u6765\u63a7\u5236\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u4e2a\u65f6\u5019\uff0c\u518d\u56de\u53bb\u4ed4\u7ec6\u770b tryPresize \u65b9\u6cd5\u53ef\u80fd\u5c31\u4f1a\u66f4\u52a0\u6e05\u6670\u4e00\u4e9b\u4e86\u3002"}),"\n",(0,a.jsx)(e.h3,{id:"get-\u8fc7\u7a0b\u5206\u6790-3",children:"get \u8fc7\u7a0b\u5206\u6790"}),"\n",(0,a.jsx)(e.p,{children:"get \u65b9\u6cd5\u4ece\u6765\u90fd\u662f\u6700\u7b80\u5355\u7684\uff0c\u8fd9\u91cc\u4e5f\u4e0d\u4f8b\u5916\uff1a"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:"\u8ba1\u7b97 hash \u503c"}),"\n",(0,a.jsx)(e.li,{children:"\u6839\u636e hash \u503c\u627e\u5230\u6570\u7ec4\u5bf9\u5e94\u4f4d\u7f6e: (n - 1) & h"}),"\n",(0,a.jsxs)(e.li,{children:["\u6839\u636e\u8be5\u4f4d\u7f6e\u5904\u7ed3\u70b9\u6027\u8d28\u8fdb\u884c\u76f8\u5e94\u67e5\u627e","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"\u5982\u679c\u8be5\u4f4d\u7f6e\u4e3a null\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de null \u5c31\u53ef\u4ee5\u4e86"}),"\n",(0,a.jsx)(e.li,{children:"\u5982\u679c\u8be5\u4f4d\u7f6e\u5904\u7684\u8282\u70b9\u521a\u597d\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c\u8fd4\u56de\u8be5\u8282\u70b9\u7684\u503c\u5373\u53ef"}),"\n",(0,a.jsx)(e.li,{children:"\u5982\u679c\u8be5\u4f4d\u7f6e\u8282\u70b9\u7684 hash \u503c\u5c0f\u4e8e 0\uff0c\u8bf4\u660e\u6b63\u5728\u6269\u5bb9\uff0c\u6216\u8005\u662f\u7ea2\u9ed1\u6811\uff0c\u540e\u9762\u6211\u4eec\u518d\u4ecb\u7ecd find \u65b9\u6cd5"}),"\n",(0,a.jsx)(e.li,{children:"\u5982\u679c\u4ee5\u4e0a 3 \u6761\u90fd\u4e0d\u6ee1\u8db3\uff0c\u90a3\u5c31\u662f\u94fe\u8868\uff0c\u8fdb\u884c\u904d\u5386\u6bd4\u5bf9\u5373\u53ef"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"public V get(Object key) {\n    Node<K,V>[] tab; Node<K,V> e, p; int n, eh; K ek;\n    int h = spread(key.hashCode());\n    if ((tab = table) != null && (n = tab.length) > 0 &&\n        (e = tabAt(tab, (n - 1) & h)) != null) {\n        // \u5224\u65ad\u5934\u7ed3\u70b9\u662f\u5426\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u8282\u70b9\n        if ((eh = e.hash) == h) {\n            if ((ek = e.key) == key || (ek != null && key.equals(ek)))\n                return e.val;\n        }\n        // \u5982\u679c\u5934\u7ed3\u70b9\u7684 hash \u5c0f\u4e8e 0\uff0c\u8bf4\u660e \u6b63\u5728\u6269\u5bb9\uff0c\u6216\u8005\u8be5\u4f4d\u7f6e\u662f\u7ea2\u9ed1\u6811\n        else if (eh < 0)\n            // \u53c2\u8003 ForwardingNode.find(int h, Object k) \u548c TreeBin.find(int h, Object k)\n            return (p = e.find(h, key)) != null ? p.val : null;\n\n        // \u904d\u5386\u94fe\u8868\n        while ((e = e.next) != null) {\n            if (e.hash == h &&\n                ((ek = e.key) == key || (ek != null && key.equals(ek))))\n                return e.val;\n        }\n    }\n    return null;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u7b80\u5355\u8bf4\u4e00\u53e5\uff0c\u6b64\u65b9\u6cd5\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u5f88\u7b80\u5355\uff0c\u53ea\u6709\u6b63\u597d\u78b0\u5230\u6269\u5bb9\u7684\u60c5\u51b5\uff0cForwardingNode.find(int h, Object k) \u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u5728\u4e86\u89e3\u4e86\u6570\u636e\u8fc1\u79fb\u7684\u8fc7\u7a0b\u540e\uff0c\u8fd9\u4e2a\u4e5f\u5c31\u4e0d\u96be\u4e86\uff0c\u6240\u4ee5\u9650\u4e8e\u7bc7\u5e45\u8fd9\u91cc\u4e5f\u4e0d\u5c55\u5f00\u8bf4\u4e86\u3002"}),"\n",(0,a.jsx)(e.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,a.jsx)(e.p,{children:"\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u96be\u561b\uff0c\u867d\u7136\u6ca1\u6709\u50cf\u4e4b\u524d\u7684 AQS \u548c\u7ebf\u7a0b\u6c60\u4e00\u6837\u4e00\u884c\u4e00\u884c\u6e90\u7801\u8fdb\u884c\u5206\u6790\uff0c\u4f46\u8fd8\u662f\u628a\u6240\u6709\u521d\u5b66\u8005\u53ef\u80fd\u4f1a\u7cca\u6d82\u7684\u5730\u65b9\u90fd\u8fdb\u884c\u4e86\u6df1\u5165\u7684\u4ecb\u7ecd\uff0c\u53ea\u8981\u662f\u7a0d\u5fae\u6709\u70b9\u57fa\u7840\u7684\u8bfb\u8005\uff0c\u5e94\u8be5\u662f\u5f88\u5bb9\u6613\u5c31\u80fd\u770b\u61c2 HashMap \u548c ConcurrentHashMap \u6e90\u7801\u4e86\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u770b\u6e90\u7801\u4e0d\u7b97\u662f\u76ee\u7684\u5427\uff0c\u6df1\u5165\u5730\u4e86\u89e3 Doug Lea \u7684\u8bbe\u8ba1\u601d\u8def\uff0c\u6211\u89c9\u5f97\u8fd8\u633a\u6709\u8da3\u7684\uff0c\u5927\u5e08\u5c31\u662f\u5927\u5e08\uff0c\u4ee3\u7801\u5199\u5f97\u771f\u7684\u662f\u597d\u554a\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u53d1\u73b0\u5f88\u591a\u4eba\u90fd\u4ee5\u4e3a\u6211\u5199\u535a\u5ba2\u4e3b\u8981\u662f\u6e90\u7801\u5206\u6790\uff0c\u8bf4\u771f\u7684\uff0c\u6211\u5bf9\u4e8e\u6e90\u7801\u5206\u6790\u6ca1\u6709\u90a3\u4e48\u5927\u70ed\u60c5\uff0c\u4e3b\u8981\u90fd\u662f\u4e3a\u4e86\u7528\u6e90\u7801\u8bf4\u4e8b\u7f62\u4e86\uff0c\u53ef\u80fd\u4e4b\u540e\u7684\u6587\u7ae0\u8fd8\u662f\u4f1a\u6709\u6bd4\u8f83\u591a\u7684\u6e90\u7801\u5206\u6790\u6210\u5206\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4e0d\u8981\u8138\u5730\u81ea\u4ee5\u4e3a\u672c\u6587\u7684\u8d28\u91cf\u8fd8\u662f\u633a\u9ad8\u7684\uff0c\u4fe1\u606f\u91cf\u6bd4\u8f83\u5927\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u6709\u5199\u5f97\u4e0d\u597d\u7684\u5730\u65b9\uff0c\u6216\u8005\u8bf4\u770b\u5b8c\u672c\u6587\u4f60\u8fd8\u662f\u6ca1\u770b\u61c2\u5b83\u4eec\uff0c\u90a3\u4e48\u8bf7\u63d0\u51fa\u6765~~~~~"}),"\n",(0,a.jsx)(e.p,{children:"\uff08\u5168\u6587\u5b8c\uff09"})]})}function o(n={}){const{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},88672:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>s});var a=t(50959);const l={},i=a.createContext(l);function s(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:s(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);