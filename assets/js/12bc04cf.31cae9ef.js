"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[7748],{90743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(11527),i=t(88672);const s={},a="\u53c2\u8003\u6587\u7ae0",o={id:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790",title:"SpringCloudEureka\u6e90\u7801\u5206\u6790",description:"Eureka\u6e90\u7801\u5206\u6790",source:"@site/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790.md",sourceDirName:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790",slug:"/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"spring",previous:{title:"SpringCloudConfig\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudConfig\u6e90\u7801\u5206\u6790"},next:{title:"SpringCloudGateway\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790"}},l={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Eureka\u6e90\u7801\u5206\u6790"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u7b2c1\u7ae0 \u6838\u5fc3\u6d41\u7a0b"}),"\n",(0,r.jsx)(n.strong,{children:"1.1 Eureka\u505a\u4e86\u4ec0\u4e48\u4e8b"})]}),"\n",(0,r.jsx)(n.p,{children:"\u9996\u5148\u6211\u4eec\u90fd\u660e\u767d\uff0cEureka\u662f\u7528\u5728\u505a\u670d\u52a1\u6ce8\u518c\u7684\uff0c\u800c\u6ce8\u518c\u4e2d\u5fc3\u8981\u5b9e\u73b0\u4ec0\u4e48\u529f\u80fd\u5462\uff1f\u8fd9\u4e2a\u5fc5\u987b\u660e\u786e\u4e86\u3002"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u65e2\u7136\u662f\u6ce8\u518c\u4e2d\u5fc3\uff0c\u90a3\u9996\u5148\u8981\u80fd\u4fdd\u5b58\u670d\u52a1\u7684ip\u3001port\u7b49\u4fe1\u606f\u5427\uff0c\u8fd9\u662fEureka-server\u5fc5\u987b\u63d0\u4f9b\u7684\u57fa\u7840\u529f\u80fd\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5f53\u6211\u6ce8\u518c\u4e0a\u6765\u4e4b\u540e\uff0c\u8fd8\u8981\u63d0\u4f9b\u4e00\u4e9b\u52a8\u6001\u611f\u77e5\u670d\u52a1\u4e0a\u4e0b\u7ebf\u7684\u529f\u80fd\u5427\uff0c\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u4e0a\u4e0b\u7ebf\uff0cEureka-server\u90fd\u4e0d\u77e5\u9053\uff0c\u90a3\u8fd9\u4e2a\u73a9\u610f\u513f\u5c31\u4e00\u6587\u4e0d\u503c\u4e86\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5f53Eureka-server\u7aef\u611f\u77e5\u5230\u670d\u52a1\u7684\u53d8\u5316\u4e4b\u540e\u603b\u5f97\u901a\u77e5\u6d88\u8d39\u7aef\u5427\uff0c\u8fd9\u91cc\u5c31\u7275\u626f\u5230\u65f6server\u7aef\u4e3b\u52a8\u901a\u77e5client\u7aef\u5462\u8fd8\u662fclient\u7aef\u81ea\u5df1\u53bb\u62c9\u53d6\u4fe1\u606f\u5462\uff1f\u8fd9\u4e2a\u73b0\u5728\u4e0d\u77e5\u9053\uff0c\u7b49\u4f1a\u53bb\u770b\u6e90\u7801\u9a8c\u8bc1\u3002"}),"\n",(0,r.jsxs)(n.li,{children:["OK\uff0c\u4e0a\u9762\u7684\u529f\u80fd\u90fd\u5b9e\u73b0\u4e86\uff0cEureka\u57fa\u672c\u5408\u683c\u4e86\uff0c\u90a3\u8fd8\u6709\u4e00\u6b65\uff0c\u65e2\u7136\u670d\u52a1\u7684ip\u548c\u7aef\u53e3\u90fd\u5728Eureka-server\u4e0a\u9762\uff0c\u90a3\u6211\u6d88\u8d39\u7aef\u8c03\u7528\u670d\u52a1\u7aef\u7684\u65f6\u5019\uff0c\u901a\u4fe1\u662f\u7528\u7684OpenFeign\uff0c\u90a3OpenFeign\u662f\u600e\u4e48\u77e5\u9053\u8c03\u7528\u54ea\u4e2a\u670d\u52a1\u7684\uff1f\u4e4b\u524d\u90fd\u662f\u5199\u6b7b\u5728application.properties\u91cc\u9762\u7684",(0,r.jsx)(n.code,{children:"<servicename>"}),".ribbon.listOfServers\u4e2d\uff0c\u73b0\u5728Eureka\u600e\u4e48\u81ea\u52a8\u5199\u8fdb\u53bb\u7684\u5462\uff1f"]}),"\n",(0,r.jsx)(n.li,{children:"\u4e0a\u97624\u4e2a\u529f\u80fd\u57fa\u672c\u4e0a\u5b8c\u6210\u4e86\u6ce8\u518c\u4e2d\u5fc3\u8be5\u6709\u7684\u529f\u80fd\uff0c\u90a3\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u518d\u6765\u601d\u8003\u4e00\u4e0b\uff0c\u6ce8\u518c\u4e2d\u5fc3\u7528\u4e8e\u5fae\u670d\u52a1\u9879\u76ee\u4e2d\uff0c\u90a3\u6ce8\u518c\u4e2d\u5fc3\u4e5f\u4f5c\u4e3a\u4e00\u4e2a\u670d\u52a1\uff0c\u5b83\u4e5f\u9700\u8981\u505a\u96c6\u7fa4\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u8981\u60f3\u4e00\u4e0b\uff0c\u505a\u96c6\u7fa4\u600e\u4e48\u4fdd\u8bc1\u6570\u636e\u4e00\u81f4\u6027\uff0c\u8be5\u57fa\u4e8e\u4ec0\u4e48\u7406\u8bba\uff1f\n\u4e0a\u9762\u662fEureka\u8981\u5b9e\u73b0\u7684\u6700\u6838\u5fc3\u7684\u529f\u80fd\uff0c\u90a3\u8fd9\u4e9b\u529f\u80fd\u63d0\u4f9b\u51fa\u6765\u4e86\uff0c\u6211\u9879\u76ee\u600e\u4e48\u53bb\u8c03\u7528\u5462\uff1f\u4e0d\u80fd\u76f4\u63a5\u53bb\u8c03API\u5427\uff0c\u8fd9\u591a\u9ebb\u70e6\uff0c\u8fd8\u5f97\u53bb\u5b66\u4e00\u904dEureka\u7684api\uff0c\u5b8c\u728a\u5b50\u4e86\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u4f1a\u8054\u60f3\u5230SpringBoot\u7684\u81ea\u52a8\u88c5\u914d\u548cStarter\u7ec4\u4ef6\u3002\u8fd9\u4e24\u4e2a\u73a9\u610f\u513f\u5e2e\u6211\u4eec\u5b8c\u6210\u4e86\u6838\u5fc3bean\u7684\u81ea\u52a8\u6ce8\u5165\uff0c\u5e95\u5c42\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230bean\uff0c\u7136\u540e\u5728Starter\u7ec4\u4ef6\u4e2d\u5e94\u8be5\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528\u4e86API\u7684\uff1bOK\uff0c\u90a3\u56de\u8fc7\u5934\u6765\u6211\u53d1\u73b0\uff0c\u6211\u7684Eureka-client\u5c31\u662f\u4e00\u4e2astarter\u7ec4\u4ef6\uff0c\u563f\u563f\uff0c\u6709\u70b9\u4e1c\u897f\u4e86\u3002\u8fd9\u4e2aclient\u7aef\u6838\u5fc3\u903b\u8f91\u80af\u5b9a\u662f\u5e2e\u6211\u4eec\u5c01\u88c5\u4e86\u5404\u79cdbean\uff0c\u7136\u540e\u5e2e\u6211\u4eec\u8c03\u7528\u4e86\u6838\u5fc3api\u4e86\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u91cc\u9488\u5bf9Eureka\u7684\u6838\u5fc3\u529f\u80fd\u6211\u4eec\u5728\u505a\u4e00\u4e2a\u66f4\u7b80\u4fbf\u7684\u603b\u7ed3\uff1a"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u5b9e\u73b0\u6ce8\u518c\uff0c\u5e76\u5b58\u5728\u5185\u5b58\u4e2d"}),"\n",(0,r.jsx)(n.li,{children:"\u52a8\u6001\u611f\u77e5\u670d\u52a1\u7684\u5065\u5eb7\u72b6\u6001"}),"\n",(0,r.jsxs)(n.li,{children:["\u670d\u52a1\u7684\u53d1\u73b0\uff0c\u53ca\u52a8\u6001\u611f\u77e5\u670d\u52a1\u7684\u53d8\u5316\n",(0,r.jsx)(n.strong,{children:"1.2 \u6838\u5fc3\u6d41\u7a0b\u63a8\u5bfc"}),"\n\u660e\u786e\u4e86\u6838\u5fc3\u529f\u80fd\uff0c\u4ee5\u53ca\u5982\u4f55\u8c03\u7528\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5927\u80c6\u5730\u63a8\u5bfc\u4e00\u4e0b\u6838\u5fc3\u6d41\u7a0b\u56fe\uff1a"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://java-tutorial.oss-cn-shanghai.aliyuncs.com/f15564313c2406546821713bcaf3eb0e9ac73d.jpg",alt:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a",title:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a"}),"\u5927\u4f53\u6d41\u7a0b\u63a8\u5bfc\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u6765\u901a\u8fc7\u6e90\u7801\u505a\u4e00\u4e2a\u9a8c\u8bc1\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u7b2c2\u7ae0 \u6e90\u7801\u5206\u6790"}),"\n",(0,r.jsx)(n.strong,{children:"2.1 \u670d\u52a1\u6ce8\u518c\u7684\u5165\u53e3"}),"\n\u670d\u52a1\u6ce8\u518c\u662f\u5728spring boot\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u53d1\u8d77\u7684\u3002\u5177\u4f53\u7684\u6267\u884c\u8def\u5f84\u6211\u4eec\u6682\u4e14\u4e0d\u770b\uff0c\u5148\u56de\u987e\u4e00\u4e0b\u524d\u9762\u54b1\u4eec\u8bb2\u8fc7\u7684\u77e5\u8bc6\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u4eec\u8bf4spring cloud\u662f\u4e00\u4e2a\u751f\u6001\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u5957\u6807\u51c6\uff0c\u8fd9\u5957\u6807\u51c6\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u7ec4\u4ef6\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d\u5c31\u5305\u542b\u670d\u52a1\u6ce8\u518c/\u53d1\u73b0\u3001\u7194\u65ad\u3001\u8d1f\u8f7d\u5747\u8861\u7b49\uff0c\u5728spring-cloud-common\u8fd9\u4e2a\u5305\u4e2d\uff0c\norg.springframework.cloud.client.serviceregistry \u8def\u5f84\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u7684\u63a5\u53e3\u5b9a \u4e49 ServiceRegistry \u3002\u5b83\u5c31\u662f\u5b9a\u4e49\u4e86spring cloud\u4e2d\u670d\u52a1\u6ce8\u518c\u7684\u4e00\u4e2a\u63a5\u53e3\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u4eec\u770b\u4e00\u4e0b\u5b83\u7684\u7c7b\u5173\u7cfb\u56fe\uff0c\u8fd9\u4e2a\u63a5\u53e3\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5b9e\u73b0 EurekaServiceRegistry \u3002\u8868\u793a\u91c7\u7528\u7684\u662fEureka Server\u4f5c\u4e3a\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://java-tutorial.oss-cn-shanghai.aliyuncs.com/49d085328febfffcbae4030dac151db2d0bfcb.jpg",alt:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a",title:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a"}),(0,r.jsx)(n.strong,{children:"2.1.1 \u6ce8\u518c\u7684\u65f6\u673a"}),"\n\u670d\u52a1\u6ce8\u518c\u7684\u53d1\u8d77\uff0c\u6211\u4eec\u53ef\u4ee5\u731c\u6d4b\u4e00\u4e0b\u5e94\u8be5\u662f\u4ec0\u4e48\u65f6\u5019\u5b8c\u6210\uff1f\u5927\u5bb6\u81ea\u8981\u60f3\u60f3\u5176\u5b9e\u5e94\u8be5\u4e0d\u96be\u731c\u6d4b\u5230\uff0c\u670d\u52a1\u7684\u6ce8\u518c\u53d6\u51b3\u4e8e\u670d\u52a1\u662f\u5426\u5df2\u7ecf\u542f\u52a8\u597d\u4e86\u3002\u800c\u5728spring boot\u4e2d\uff0c\u4f1a\u7b49\u5230spring \u5bb9\u5668\u542f\u52a8\u5e76\u4e14\u6240\u6709\u7684\u914d\u7f6e\u90fd\u5b8c\u6210\u4e4b\u540e\u6765\u8fdb\u884c\u6ce8\u518c\u3002\u800c\u8fd9\u4e2a\u52a8\u4f5c\u5728spring boot\u7684\u542f\u52a8\u65b9\u6cd5\u4e2d\u7684refreshContext\u4e2d\u5b8c\u6210\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0bfinishRefresh\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4ece\u540d\u5b57\u4e0a\u53ef\u4ee5\u770b\u5230\u5b83\u662f\u7528\u6765\u4f53\u73b0\u5b8c\u6210\u5237\u65b0\u7684\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u5237\u65b0\u5b8c\u6210\u4e4b\u540e\u8981\u505a\u7684\u540e\u7f6e\u7684\u64cd\u4f5c\u3002\u5b83\u4e3b\u8981\u505a\u51e0\u4e2a\u4e8b\u60c5"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u6e05\u7a7a\u7f13\u5b58"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u521d\u59cb\u5316\u4e00\u4e2aLifecycleProcessor\uff0c\u5728Spring\u542f\u52a8\u7684\u65f6\u5019\u542f\u52a8bean\uff0c\u5728spring\u7ed3\u675f\u7684\u65f6\u5019\u9500\u6bc1bean"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u8c03\u7528LifecycleProcessor\u7684onRefresh\u65b9\u6cd5\uff0c\u542f\u52a8\u5b9e\u73b0\u4e86Lifecycle\u63a5\u53e3\u7684bean"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u53d1\u5e03ContextRefreshedEvent"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u6ce8\u518cBean\uff0c\u901a\u8fc7JMX\u8fdb\u884c\u76d1\u63a7\u548c\u7ba1\u7406"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"protected void finishRefresh() {\n    // Clear context-level resource caches (such as ASM metadata from scanning).\n    clearResourceCaches();\n    // Initialize lifecycle processor for this context.\n    initLifecycleProcessor();\n    // Propagate refresh to lifecycle processor first.\n    getLifecycleProcessor().onRefresh();\n    // Publish the final event.\n    publishEvent(new ContextRefreshedEvent(this));\n    // Participate in LiveBeansView MBean, if active.\n    LiveBeansView.registerApplicationContext(this);\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 getLifecycleProcessor().onRefresh() \uff0c\u5b83\u662f\u8c03\u7528\u751f\u547d\u5468\u671f\u5904\u7406\u5668\u7684onrefresh\u65b9\u6cd5\uff0c\u627e\u5230SmartLifecycle\u63a5\u53e3\u7684\u6240\u6709\u5b9e\u73b0\u7c7b\u5e76\u8c03\u7528start\u65b9\u6cd5\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.1.2 SmartLifeCycle"}),"\n\u6211\u62d3\u5c55\u4e00\u4e0bSmartLifeCycle\u8fd9\u5757\u7684\u77e5\u8bc6\uff0c SmartLifeCycle\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5f53Spring\u5bb9\u5668\u52a0\u8f7d\u5b8c\u6240\u6709\u7684Bean\u5e76\u4e14\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u4f1a\u7ee7\u7eed\u56de\u8c03\u5b9e\u73b0\u4e86SmartLifeCycle\u63a5\u53e3\u7684\u7c7b\u4e2d\u5bf9\u5e94\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\uff08start\uff09\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u5b9e\u9645\u4e0a\u6211\u4eec\u81ea\u5df1\u4e5f\u53ef\u4ee5\u62d3\u5c55\uff0c\u6bd4\u5982\u5728springboot\u5de5\u7a0b\u7684main\u65b9\u6cd5\u540c\u7ea7\u76ee\u5f55\u4e0b\uff0c\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7c7b\uff0c\u5b9e\u73b0SmartLifeCycle\u63a5\u53e3\uff0c\u5e76\u4e14\u901a\u8fc7 @Service \u58f0\u660e\u4e3a\u4e00\u4e2abean\uff0c\u56e0\u4e3a\u8981\u88abspring\u53bb\u52a0\u8f7d\uff0c\u9996\u5148\u5f97\u662fbean\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Service\npublic class TestSmartLifeCycle implements SmartLifecycle {\n    /**\n     * \u670d\u52a1\u542f\u52a8\u540e\u6267\u884c.\u65e0\u9700\u663e\u793a\u8c03\u7528start\u65b9\u6cd5.\n     * \u4f46\u662f\u4f9d\u8d56isAutoStartup()\u8fd4\u56de\u503c,\u53ea\u6709isAutoStartup()\u8fd4\u56detrue\u7684\u65f6\u5019,start()\u624d\u4f1a\u88ab\u6267\u884c\n     */\n    @Override\n    public void start() {\n        System.out.println("----------start-----------");\n    }\n    /**\n     * \u670d\u52a1\u505c\u6b62\u524d\u6267\u884c\u65b9\u6cd5\n     * \u524d\u63d0\u6761\u4ef6: isRunning()\u8fd4\u56detrue\u624d\u4f1a\u88ab\u6267\u884c\n     */\n    @Override\n    public void stop() {\n        System.out.println("----------stop-----------");\n    }\n    /**\n     * \u8fd4\u56de\u670d\u52a1\u8fd0\u884c\u72b6\u6001,\u5f71\u54cd\u5230\u670d\u52a1\u662f\u5426\u8c03\u7528stop\u65b9\u6cd5\n     * @return\n     */\n    @Override\n    public boolean isRunning() {\n        return false;\n    }\n    /**\n     * \u662f\u5426\u8c03\u7528start\u65b9\u6cd5,\u9700\u8981\u6ce8\u610f\n     * \u5f53\u524d\u65b9\u6cd5\u8fd4\u56defalse\u662f\u4e0d\u4f1a\u6267\u884cstart()\n     * @return\n     */\n    @Override\n    public boolean isAutoStartup() {\n        return true;\n    }\n    @Override\n    public void stop(Runnable runnable) {\n        stop();\n        runnable.run();\n    }\n    /**\n     * \u6307\u5b9a\u6267\u884c\u987a\u5e8f\n     * \u5f53\u524d\u5bb9\u5668\u5982\u679c\u6709\u591a\u4e2a\u7c7b\u5b9e\u73b0\u4e86SmartLifecycle,\u5219\u6309\u6b64\u6cd5\u65b9\u6cd5\u8fd4\u56de\u503c\u6392\u5e8f\u6267\u884c\n     * @return\n     */\n    @Override\n    public int getPhase() {\n        return 0;\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u7740\uff0c\u6211\u4eec\u542f\u52a8spring boot\u5e94\u7528\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u63a7\u5236\u53f0\u8f93\u51fa\u4e86 start \u5b57\u7b26\u4e32\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u6211\u4eec\u5728DefaultLifecycleProcessor.startBeans\u65b9\u6cd5\u4e0a\u52a0\u4e00\u4e2adebug\uff0c\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u770b\u5230\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684TestSmartLifeCycle\u88ab\u626b\u63cf\u5230\u4e86\uff0c\u5e76\u4e14\u6700\u540e\u4f1a\u8c03\u7528\u8be5bean\u7684start\u65b9\u6cd5\u3002",(0,r.jsx)(n.img,{src:"https://java-tutorial.oss-cn-shanghai.aliyuncs.com/75b18e528ba1879148c106d9bd3fb61ab9b5bb.jpg",alt:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a",title:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a"}),"\u5728startBeans\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u9996\u5148\u4f1a\u83b7\u5f97\u6240\u6709\u5b9e\u73b0\u4e86SmartLifeCycle\u7684Bean\uff0c\u7136\u540e\u4f1a\u5faa\u73af\u8c03\u7528\u5b9e\u73b0\u4e86SmartLifeCycle\u7684bean\u7684start\u65b9\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"private void startBeans(boolean autoStartupOnly) {\n    Map<String, Lifecycle> lifecycleBeans = this.getLifecycleBeans();\n    Map<Integer, DefaultLifecycleProcessor.LifecycleGroup> phases = new HashMap();\n    lifecycleBeans.forEach((beanName, bean) -> {\n        if (!autoStartupOnly || bean instanceof SmartLifecycle &&\n            ((SmartLifecycle)bean).isAutoStartup()) {\n            int phase = this.getPhase(bean);\n            DefaultLifecycleProcessor.LifecycleGroup group =\n                (DefaultLifecycleProcessor.LifecycleGroup)phases.get(phase);\n            if (group == null) {\n                group = new DefaultLifecycleProcessor.LifecycleGroup(phase,this.timeoutPerShutdownPhase, lifecycleBeans, autoStartupOnly);\n                phases.put(phase, group);\n            }\n            group.add(beanName, bean);\n        }\n    });\n    if (!phases.isEmpty()) {\n        List<Integer> keys = new ArrayList(phases.keySet());\n        Collections.sort(keys);\n        Iterator var5 = keys.iterator();\n        while(var5.hasNext()) {\n            Integer key = (Integer)var5.next();\n            ((DefaultLifecycleProcessor.LifecycleGroup)phases.get(key)).start();\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2.1.3 doStart"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private void doStart(Map<String, ? extends Lifecycle> lifecycleBeans, String beanName, boolean autoStartupOnly) {\n    Lifecycle bean = (Lifecycle)lifecycleBeans.remove(beanName);\n    if (bean != null && bean != this) {\n        String[] dependenciesForBean = this.getBeanFactory().getDependenciesForBean(beanName);\n        String[] var6 = dependenciesForBean;\n        int var7 = dependenciesForBean.length;\n        for(int var8 = 0; var8 < var7; ++var8) {\n            String dependency = var6[var8];\n            this.doStart(lifecycleBeans, dependency, autoStartupOnly);\n        }\n        if (!bean.isRunning() && (!autoStartupOnly || !(bean instanceof SmartLifecycle) || ((SmartLifecycle)bean).isAutoStartup())) {\n            if (this.logger.isTraceEnabled()) {\n                this.logger.trace("Starting bean \'" + beanName + "\' of type [" + bean.getClass().getName() + "]");\n            }\n            try {\n                bean.start(); //\u6b64\u65f6 Bean\u7684\u5b9e\u4f8b\u5e94\u8be5\u662fEurekaAutoServiceRegistration\n            } catch (Throwable var10) {\n                throw new ApplicationContextException("Failed to start bean \'" + beanName + "\'", var10);\n            }\n            if (this.logger.isDebugEnabled()) {\n                this.logger.debug("Successfully started bean \'" + beanName + "\'");\n            }\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u6b64\u65f6\uff0cbean.start()\uff0c\u8c03\u7528\u7684\u53ef\u80fd\u662f\nEurekaAutoServiceRegistration\u4e2d\u7684start\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5f88\u663e\u7136\uff0c\u5b83\u5b9e\u73b0\u4e86SmartLifeCycle\u63a5\u53e3\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"public class EurekaAutoServiceRegistration implements AutoServiceRegistration,SmartLifecycle, Ordered, SmartApplicationListener {\n    @Override\n    public void start() {\n        // only set the port if the nonSecurePort or securePort is 0 and this.port != 0\n        if (this.port.get() != 0) {\n            if (this.registration.getNonSecurePort() == 0) {\n                this.registration.setNonSecurePort(this.port.get());\n            }\n            if (this.registration.getSecurePort() == 0 &&\n                this.registration.isSecure()) {\n                this.registration.setSecurePort(this.port.get());\n            }\n        }\n        // only initialize if nonSecurePort is greater than 0 and it isn't already running\n        // because of containerPortInitializer below\n        if (!this.running.get() && this.registration.getNonSecurePort() > 0) {\n            this.serviceRegistry.register(this.registration);\n            this.context.publishEvent(new InstanceRegisteredEvent<>(this,\n                                                                    this.registration.getInstanceConfig()));\n            this.running.set(true);\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728start\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\nthis.serviceRegistry.register \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u53d1\u8d77\u670d\u52a1\u6ce8\u518c\u7684\u673a\u5236\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u6b64\u65f6this.serviceRegistry\u7684\u5b9e\u4f8b\uff0c\u5e94\u8be5\u662f EurekaServiceRegistry \uff0c \u539f\u56e0\u662f\nEurekaAutoServiceRegistration\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u6709\u4e00\u4e2a\u8d4b\u503c\u64cd\u4f5c\uff0c\u800c\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u662f\u5728EurekaClientAutoConfiguration \u8fd9\u4e2a\u81ea\u52a8\u88c5\u914d\u7c7b\u4e2d\u88ab\u88c5\u914d\u548c\u521d\u59cb\u5316\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Bean\n@ConditionalOnBean(AutoServiceRegistrationProperties.class)\n@ConditionalOnProperty(value = "spring.cloud.service-registry.auto-registration.enabled", matchIfMissing = true)\npublic EurekaAutoServiceRegistration eurekaAutoServiceRegistration(\n    ApplicationContext context, EurekaServiceRegistry registry,\n    EurekaRegistration registration) {\n    return new EurekaAutoServiceRegistration(context, registry, registration);\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2 \u670d\u52a1\u7684\u6ce8\u518c\u6d41\u7a0b"}),"\n\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790\u670d\u52a1\u6ce8\u518c\u7684\u6d41\u7a0b"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"public class EurekaAutoServiceRegistration implements AutoServiceRegistration,\nSmartLifecycle, Ordered, SmartApplicationListener {\n    @Override\n    public void start() {\n        //\u7701\u7565...\n        this.serviceRegistry.register(this.registration);\n        this.context.publishEvent(new InstanceRegisteredEvent<> this,this.registration.getInstanceConfig()));\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"this.serviceRegistry.register(this.registration); \u65b9\u6cd5\u6700\u7ec8\u4f1a\u8c03\u7528"}),"\n",(0,r.jsx)(n.p,{children:"EurekaServiceRegistry \u7c7b\u4e2d\u7684 register \u65b9\u6cd5\u6765\u5b9e\u73b0\u670d\u52a1\u6ce8\u518c"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2.2.1 register"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Override\npublic void register(EurekaRegistration reg) {\n    maybeInitializeClient(reg);\n    if (log.isInfoEnabled()) {\n        log.info("Registering application "\n                 + reg.getApplicationInfoManager().getInfo().getAppName()\n                 + " with eureka with status "\n                 + reg.getInstanceConfig().getInitialStatus());\n    }\n    //\u8bbe\u7f6e\u5f53\u524d\u5b9e\u4f8b\u7684\u72b6\u6001\uff0c\u4e00\u65e6\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u53ea\u8981\u72b6\u6001\u4e0d\u662fDOWN\uff0c\u90a3\u4e48\u5c31\u4f1a\u88ab\u76d1\u542c\u5668\u76d1\u542c\u5e76\u4e14\u6267\u884c\u670d\u52a1\u6ce8\u518c\u3002\n    reg.getApplicationInfoManager().setInstanceStatus(reg.getInstanceConfig().getInitialStatus());\n    //\u8bbe\u7f6e\u5065\u5eb7\u68c0\u67e5\u7684\u5904\u7406\n    reg.getHealthCheckHandler().ifAvailable(healthCheckHandler -> reg.getEurekaClient().registerHealthCheck(healthCheckHandler));\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u4ece\u4e0a\u8ff0\u4ee3\u7801\u6765\u770b\uff0c\u6ce8\u518c\u65b9\u6cd5\u4e2d\u5e76\u6ca1\u6709\u771f\u6b63\u8c03\u7528Eureka\u7684\u65b9\u6cd5\u53bb\u6267\u884c\u6ce8\u518c\uff0c\u800c\u662f\u4ec5\u4ec5\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u72b6\u6001\u4ee5\u53ca\u8bbe\u7f6e\u5065\u5eb7\u68c0\u67e5\u5904\u7406\u5668\u3002\u6211\u4eec\u7ee7\u7eed\u770b\u4e00\u4e0b\nreg.getApplicationInfoManager().setInstanceStatus\u65b9\u6cd5\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public synchronized void setInstanceStatus(InstanceStatus status) {\n    InstanceStatus next = instanceStatusMapper.map(status);\n    if (next == null) {\n        return;\n    }\n    InstanceStatus prev = instanceInfo.setStatus(next);\n    if (prev != null) {\n        for (StatusChangeListener listener : listeners.values()) {\n            try {\n                listener.notify(new StatusChangeEvent(prev, next));\n            } catch (Exception e) {\n                logger.warn("failed to notify listener: {}", listener.getId(),e);\n            }\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u5b83\u4f1a\u901a\u8fc7\u76d1\u542c\u5668\u6765\u53d1\u5e03\u4e00\u4e2a\u72b6\u6001\u53d8\u66f4\u4e8b\u4ef6\u3002ok\uff0c\u6b64\u65f6listener\u7684\u5b9e\u4f8b\u662fStatusChangeListener \uff0c\u4e5f\u5c31\u662f\u8c03\u7528 StatusChangeListener \u7684notify\u65b9\u6cd5\u3002\u8fd9\u4e2a\u4e8b\u4ef6\u662f\u89e6\u53d1\u4e00\u4e2a\u670d\u52a1\u72b6\u6001\u53d8\u66f4\uff0c\u5e94\u8be5\u662f\u6709\u5730\u65b9\u4f1a\u76d1\u542c\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u57fa\u4e8e\u8fd9\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u6ce8\u518c\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4ee5\u4e3a\u627e\u5230\u4e86\u65b9\u5411\uff0c\u7136\u540e\u70b9\u51fb\u8fdb\u53bb\u4e00\u770b\uff0c\u53d1\u73b0\u5b83\u662f\u4e00\u4e2a\u63a5\u53e3\u3002\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u5b83\u662f\u9759\u6001\u7684\u5185\u90e8\u63a5\u53e3\uff0c\u8fd8\u65e0\u6cd5\u76f4\u63a5\u770b\u5230\u5b83\u7684\u5b9e\u73b0\u7c7b\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u4f9d\u6211\u591a\u5e74\u6e90\u7801\u9605\u8bfb\u7ecf\u9a8c\uff0c\u4e8e\u662f\u53c8\u5f80\u56de\u627e\uff0c\u56e0\u4e3a\u6211\u57fa\u672c\u4e0a\u80fd\u731c\u6d4b\u5230\u4e00\u5b9a\u662f\u5728\u67d0\u4e2a\u5730\u65b9\u505a\u4e86\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c\u4e8e\u662f\uff0c\u6211\u60f3\u627e\u5230\nEurekaServiceRegistry.register\u65b9\u6cd5\u4e2d\u7684 reg.getApplicationInfoManager \u8fd9\u4e2a\u5b9e\u4f8b\u662f\u4ec0\u4e48\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0ApplicationInfoManager\u662f\u6765\u81ea\u4e8eEurekaRegistration\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u5c5e\u6027\u3002\u800cEurekaRegistration\u53c8\u662f\u5728EurekaAutoServiceRegistration\u8fd9\u4e2a\u7c7b\u4e2d\u5b9e\u4f8b\u5316\u7684\u3002\u90a3\u6211\u5728\u60f3\uff0c\u662f\u4e0d\u662f\u5728\u81ea\u52a8\u88c5\u914d\u4e2d\u505a\u4e86\u4ec0\u4e48\u4e1c\u897f\u3002\u4e8e\u662f\u627e\u5230EurekaClientAutoConfiguration\u8fd9\u4e2a\u7c7b\uff0c\u679c\u7136\u770b\u5230\u4e86Bean\u7684\u4e00\u4e9b\u81ea\u52a8\u88c5\u914d\uff0c\u5176\u4e2d\u5305\u542b EurekaClient \u3001 ApplicationInfoMangager \u3001 EurekaRegistration \u7b49\u3002"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2.2.2 EurekaClientConfiguration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Configuration(proxyBeanMethods = false)\n@ConditionalOnMissingRefreshScope\nprotected static class EurekaClientConfiguration {\n    @Autowired\n    private ApplicationContext context;\n    @Autowired\n    private AbstractDiscoveryClientOptionalArgs<?> optionalArgs;\n    @Bean(destroyMethod = "shutdown")\n    @ConditionalOnMissingBean(value = EurekaClient.class,search = SearchStrategy.CURRENT)\n    public EurekaClient eurekaClient(ApplicationInfoManager manager,EurekaClientConfig config) {\n        return new CloudEurekaClient(manager, config, this.optionalArgs,this.context);\n    }\n    @Bean\n    @ConditionalOnMissingBean(value = ApplicationInfoManager.class,search = SearchStrategy.CURRENT)\n    public ApplicationInfoManager eurekaApplicationInfoManager(\n        EurekaInstanceConfig config) {\n        InstanceInfo instanceInfo = new InstanceInfoFactory().create(config);\n        return new ApplicationInfoManager(config, instanceInfo);\n    }\n    @Bean\n    @ConditionalOnBean(AutoServiceRegistrationProperties.class)\n    @ConditionalOnProperty(\n        value = "spring.cloud.service-registry.auto-registration.enabled",\n        matchIfMissing = true)\n    public EurekaRegistration eurekaRegistration(EurekaClient eurekaClient,CloudEurekaInstanceConfig\n                                                 instanceConfig,ApplicationInfoManager applicationInfoManager, @Autowired(required = false)\n                                                 ObjectProvider<HealthCheckHandler> healthCheckHandler) {\n        return EurekaRegistration.builder(instanceConfig).with(applicationInfoManager).with(eurekaClient).with(healthCheckHandler).build();\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u4e0d\u96be\u53d1\u73b0\uff0c\u6211\u4eec\u4f3c\u4e4e\u770b\u5230\u4e86\u4e00\u4e2a\u5f88\u91cd\u8981\u7684Bean\u5728\u542f\u52a8\u7684\u65f6\u5019\u505a\u4e86\u81ea\u52a8\u88c5\u914d\uff0c\u4e5f\u5c31\u662fCloudEurekaClient \u3002\u4ece\u540d\u5b57\u4e0a\u6765\u770b\uff0c\u6211\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u8bc6\u522b\u5e76\u731c\u6d4b\u51fa\u5b83\u662fEureka\u5ba2\u6237\u7aef\u7684\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u7528\u6765\u5b9e\u73b0\u548c\u670d\u52a1\u7aef\u7684\u901a\u4fe1\u4ee5\u53ca\u5904\u7406\u3002\u8fd9\u4e2a\u662f\u5f88\u591a\u6e90\u7801\u4e00\u8d2f\u7684\u5957\u8def\uff0c\u8981\u4e48\u5728\u6784\u9020\u65b9\u6cd5\u91cc\u9762\u53bb\u505a\u5f88\u591a\u7684\u521d\u59cb\u5316\u548c\u4e00\u4e9b\u540e\u53f0\u6267\u884c\u7684\u7a0b\u5e8f\u64cd\u4f5c\uff0c\u8981\u4e48\u5c31\u662f\u901a\u8fc7\u5f02\u6b65\u4e8b\u4ef6\u7684\u65b9\u5f0f\u6765\u5904\u7406\u3002\u63a5\u7740\uff0c\u6211\u4eec\u770b\u4e00\u4e0bCloudEurekaClient\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5b83\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u4f1a\u901a\u8fc7 super \u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u3002\u4e5f\u5c31\u662fDiscoveryClient\u7684\u6784\u9020\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.3 CloudEurekaClient"}),"\nsuper(applicationInfoManager, config, args);\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u800cCloudEurekaClient\u7684\u7236\u7c7b\u662fDiscoveryClient."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public CloudEurekaClient(ApplicationInfoManager applicationInfoManager,EurekaClientConfig config,AbstractDiscoveryClientOptionalArgs<?> args,ApplicationEventPublisher publisher) {\n    super(applicationInfoManager, config, args);\n    this.applicationInfoManager = applicationInfoManager;\n    this.publisher = publisher;\n    this.eurekaTransportField = ReflectionUtils.findField(DiscoveryClient.class,"eurekaTransport");\n    ReflectionUtils.makeAccessible(this.eurekaTransportField);\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.4 DiscoveryClient\u6784\u9020"}),"\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u6700\u7ec8\u7684DiscoveryClient\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u6709\u975e\u5e38\u957f\u7684\u4ee3\u7801\u3002\u5176\u5b9e\u5f88\u591a\u4ee3\u7801\u53ef\u4ee5\u4e0d\u9700\u8981\u5173\u5fc3\uff0c\u5927\u90e8\u5206\u90fd\u662f\u4e00\u4e9b\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u6bd4\u5982\u521d\u59cb\u5316\u4e86\u51e0\u4e2a\u5b9a\u65f6\u4efb\u52a1"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"scheduler"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"heartbeatExecutor \u5fc3\u8df3\u5b9a\u65f6\u4efb\u52a1"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"cacheRefreshExecutor \u5b9a\u65f6\u53bb\u540c\u6b65\u670d\u52a1\u7aef\u7684\u5b9e\u4f8b\u5217\u8868"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'DiscoveryClient(ApplicationInfoManager applicationInfoManager,EurekaClientConfig config, AbstractDiscoveryClientOptionalArgs args,Provider<BackupRegistry> backupRegistryProvider,EndpointRandomizer endpointRandomizer) {\n    //\u7701\u7565\u90e8\u5206\u4ee3\u7801...\n    //\u662f\u5426\u8981\u4eceeureka server\u4e0a\u83b7\u53d6\u670d\u52a1\u5730\u5740\u4fe1\u606f\n    if (config.shouldFetchRegistry()) {\n        this.registryStalenessMonitor = new ThresholdLevelsMetric(this,METRIC_REGISTRY_PREFIX + "lastUpdateSec_", new long[]{15L, 30L, 60L, 120L, 240L,480L});\n    } else {\n        this.registryStalenessMonitor = ThresholdLevelsMetric.NO_OP_METRIC;\n    }\n    //\u662f\u5426\u8981\u6ce8\u518c\u5230eureka server\u4e0a\n    if (config.shouldRegisterWithEureka()) {\n        this.heartbeatStalenessMonitor = new ThresholdLevelsMetric(this,METRIC_REGISTRATION_PREFIX + "lastHeartbeatSec_", new long[]{15L, 30L, 60L,120L, 240L, 480L});\n    } else {\n        this.heartbeatStalenessMonitor = ThresholdLevelsMetric.NO_OP_METRIC;\n    }\n    //\u5982\u679c\u4e0d\u9700\u8981\u6ce8\u518c\u5e76\u4e14\u4e0d\u9700\u8981\u66f4\u65b0\u670d\u52a1\u5730\u5740\n    if (!config.shouldRegisterWithEureka() && !config.shouldFetchRegistry()) {\n\n        return;  // no need to setup up an network tasks and we are done\n    }\n    try {\n        // default size of 2 - 1 each for heartbeat and cacheRefresh\n        scheduler = Executors.newScheduledThreadPool(2,new ThreadFactoryBuilder()       .setNameFormat("DiscoveryClient-%d")\n                                                     .setDaemon(true)\n                                                     .build());\n        heartbeatExecutor = new ThreadPoolExecutor(1, clientConfig.getHeartbeatExecutorThreadPoolSize(), 0,\n                                                   TimeUnit.SECONDS,\n                                                   new SynchronousQueue<Runnable>(),\n                                                   new ThreadFactoryBuilder()\n                                                   .setNameFormat("DiscoveryClient-HeartbeatExecutor-%d")\n                                                   .setDaemon(true)\n                                                   .build()\n                                                  );  // use direct handoff\n        cacheRefreshExecutor = new ThreadPoolExecutor(\n            1, clientConfig.getCacheRefreshExecutorThreadPoolSize(), 0,\n            TimeUnit.SECONDS,\n            new SynchronousQueue<Runnable>(),\n            new ThreadFactoryBuilder()\n            .setNameFormat("DiscoveryClient-CacheRefreshExecutor-%d")\n            .setDaemon(true)\n            .build()\n        );  // use direct handoff\n        eurekaTransport = new EurekaTransport();\n        scheduleServerEndpointTask(eurekaTransport, args);\n        AzToRegionMapper azToRegionMapper;\n        if (clientConfig.shouldUseDnsForFetchingServiceUrls()) {\n            azToRegionMapper = new DNSBasedAzToRegionMapper(clientConfig);\n        } else {\n            azToRegionMapper = new PropertyBasedAzToRegionMapper(clientConfig);\n        }\n        if (null != remoteRegionsToFetch.get()) {\n\n            azToRegionMapper.setRegionsToFetch(remoteRegionsToFetch.get().split(","));\n        }\n        instanceRegionChecker = new InstanceRegionChecker(azToRegionMapper,\n                                                          clientConfig.getRegion());\n    } catch (Throwable e) {\n        throw new RuntimeException("Failed to initialize DiscoveryClient!", e);\n    }\n    //\u5982\u679c\u9700\u8981\u6ce8\u518c\u5230Eureka server\u5e76\u4e14\u662f\u5f00\u542f\u4e86\u521d\u59cb\u5316\u7684\u65f6\u5019\u5f3a\u5236\u6ce8\u518c\uff0c\u5219\u8c03\u7528register()\u53d1\u8d77\u670d\u52a1\u6ce8\u518c\n    if (clientConfig.shouldRegisterWithEureka() &&\n        clientConfig.shouldEnforceRegistrationAtInit()) {\n        try {\n            if (!register() ) {\n                throw new IllegalStateException("Registration error at startup.Invalid server response.");\n            }\n        } catch (Throwable th) {\n            logger.error("Registration error at startup: {}", th.getMessage());\n            throw new IllegalStateException(th);\n        }\n    }\n    // finally, init the schedule tasks (e.g. cluster resolvers, heartbeat,instanceInfo replicator, fetch\n    initScheduledTasks();\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.5 initScheduledTasks"}),"\ninitScheduledTasks \u53bb\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u3002"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5982\u679c\u914d\u7f6e\u4e86\u5f00\u542f\u4ece\u6ce8\u518c\u4e2d\u5fc3\u5237\u65b0\u670d\u52a1\u5217\u8868\uff0c\u5219\u4f1a\u5f00\u542fcacheRefreshExecutor\u8fd9\u4e2a\u5b9a\u65f6\u4efb\u52a1"}),"\n",(0,r.jsx)(n.li,{children:"\u5982\u679c\u5f00\u542f\u4e86\u670d\u52a1\u6ce8\u518c\u5230Eureka\uff0c\u5219\u901a\u8fc7\u9700\u8981\u505a\u51e0\u4e2a\u4e8b\u60c5."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u5efa\u7acb\u5fc3\u8df3\u68c0\u6d4b\u673a\u5236"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u901a\u8fc7\u5185\u90e8\u7c7b\u6765\u5b9e\u4f8b\u5316StatusChangeListener \u5b9e\u4f8b\u72b6\u6001\u76d1\u63a7\u63a5\u53e3\uff0c\u8fd9\u4e2a\u5c31\u662f\u524d\u9762\u6211\u4eec\u5728\u5206\u6790\u542f\u52a8\u8fc7\u7a0b\u4e2d\u6240\u770b\u5230\u7684\uff0c\u8c03\u7528notify\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\u4f1a\u5728\u8fd9\u91cc\u4f53\u73b0\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private void initScheduledTasks() {\n    //\u5982\u679c\u914d\u7f6e\u4e86\u5f00\u542f\u4ece\u6ce8\u518c\u4e2d\u5fc3\u5237\u65b0\u670d\u52a1\u5217\u8868\uff0c\u5219\u4f1a\u5f00\u542fcacheRefreshExecutor\u8fd9\u4e2a\u5b9a\u65f6\u4efb\u52a1\n    if (clientConfig.shouldFetchRegistry()) {\n        // registry cache refresh timer\n        int registryFetchIntervalSeconds =\n            clientConfig.getRegistryFetchIntervalSeconds();\n        int expBackOffBound =\n            clientConfig.getCacheRefreshExecutorExponentialBackOffBound();\n        scheduler.schedule(\n            new TimedSupervisorTask(\n                "cacheRefresh",\n                scheduler,\n                cacheRefreshExecutor,\n                registryFetchIntervalSeconds,\n                TimeUnit.SECONDS,\n                expBackOffBound,\n                new CacheRefreshThread()\n            ),\n            registryFetchIntervalSeconds, TimeUnit.SECONDS);\n    }\n    //\u5982\u679c\u5f00\u542f\u4e86\u670d\u52a1\u6ce8\u518c\u5230Eureka\uff0c\u5219\u901a\u8fc7\u9700\u8981\u505a\u51e0\u4e2a\u4e8b\u60c5\n    if (clientConfig.shouldRegisterWithEureka()) {\n        int renewalIntervalInSecs =\n            instanceInfo.getLeaseInfo().getRenewalIntervalInSecs();\n        int expBackOffBound =\n            clientConfig.getHeartbeatExecutorExponentialBackOffBound();\n        logger.info("Starting heartbeat executor: " + "renew interval is: {}",\n                    renewalIntervalInSecs);\n        // Heartbeat timer\n        scheduler.schedule(\n            new TimedSupervisorTask(\n                "heartbeat",\n                scheduler,\n                heartbeatExecutor,\n                renewalIntervalInSecs,\n                TimeUnit.SECONDS,\n                expBackOffBound,\n                new HeartbeatThread()\n            ),\n            renewalIntervalInSecs, TimeUnit.SECONDS);\n        // InstanceInfo replicator \u521d\u59cb\u5316\u4e00\u4e2a:instanceInfoReplicator\n        instanceInfoReplicator = new InstanceInfoReplicator(\n            this,\n            instanceInfo,\n            clientConfig.getInstanceInfoReplicationIntervalSeconds(),\n            2); // burstSize\n        statusChangeListener = new ApplicationInfoManager.StatusChangeListener()\n        {\n            @Override\n            public String getId() {\n                return "statusChangeListener";\n            }\n            @Override\n            public void notify(StatusChangeEvent statusChangeEvent) {\n                if (InstanceStatus.DOWN == statusChangeEvent.getStatus() ||\n                    InstanceStatus.DOWN ==\n                    statusChangeEvent.getPreviousStatus()) {\n                    // log at warn level if DOWN was involved\n                    logger.warn("Saw local status change event {}",\n                                statusChangeEvent);\n                } else {\n                    logger.info("Saw local status change event {}",\n                                statusChangeEvent);\n                }\n                instanceInfoReplicator.onDemandUpdate();\n            }\n        };\n        //\u6ce8\u518c\u5b9e\u4f8b\u72b6\u6001\u53d8\u5316\u7684\u76d1\u542c\n        if (clientConfig.shouldOnDemandUpdateStatusChange()) {\n            applicationInfoManager.registerStatusChangeListener(statusChangeListener);\n        }\n        //\u542f\u52a8\u4e00\u4e2a\u5b9e\u4f8b\u4fe1\u606f\u590d\u5236\u5668\uff0c\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u5f00\u542f\u4e00\u4e2a\u5b9a\u65f6\u7ebf\u7a0b\uff0c\u6bcf40\u79d2\u5224\u65ad\u5b9e\u4f8b\u4fe1\u606f\u662f\u5426\u53d8\u66f4\uff0c\u5982\u679c\u53d8\u66f4\u4e86\u5219\u91cd\u65b0\u6ce8\u518c\n        instanceInfoReplicator.start(clientConfig.getInitialInstanceInfoReplicationInte\n                                     rvalSeconds());\n    } else {\n        logger.info("Not registering with Eureka server per configuration");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.6 onDemandUpdate"}),"\n\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6839\u636e\u5b9e\u4f8b\u6570\u636e\u662f\u5426\u53d1\u751f\u53d8\u5316\uff0c\u6765\u89e6\u53d1\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u7684\u6570\u636e\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public boolean onDemandUpdate() {\n    //\u9650\u6d41\u5224\u65ad\n    if (rateLimiter.acquire(burstSize, allowedRatePerMinute)) {\n        if (!scheduler.isShutdown()) {\n            //\u63d0\u4ea4\u4e00\u4e2a\u4efb\u52a1\n            scheduler.submit(new Runnable() {\n                @Override\n                public void run() {\n                    logger.debug("Executing on-demand update of local InstanceInfo");\n                    //\u53d6\u51fa\u4e4b\u524d\u5df2\u7ecf\u63d0\u4ea4\u7684\u4efb\u52a1\uff0c\u4e5f\u5c31\u662f\u5728start\u65b9\u6cd5\u4e2d\u63d0\u4ea4\u7684\u66f4\u65b0\u4efb\u52a1\uff0c\u5982\u679c\u4efb\u52a1\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6210\uff0c\u5219\u53d6\u6d88\u4e4b\u524d\u7684\u4efb\u52a1\u3002\n                    Future latestPeriodic = scheduledPeriodicRef.get();\n                    if (latestPeriodic != null && !latestPeriodic.isDone()) {\n                        logger.debug("Canceling the latest scheduled update, it will be rescheduled at the end of on demand update");\n                        latestPeriodic.cancel(false);//\u5982\u679c\u6b64\u4efb\u52a1\u672a\u5b8c\u6210\uff0c\u5c31\u7acb\u5373\u53d6\u6d88\n                    }\n                    //\u901a\u8fc7\u8c03\u7528run\u65b9\u6cd5\uff0c\u4ee4\u4efb\u52a1\u5728\u5ef6\u65f6\u540e\u6267\u884c\uff0c\u76f8\u5f53\u4e8e\u5468\u671f\u6027\u4efb\u52a1\u4e2d\u7684\u4e00\u6b21\n                    InstanceInfoReplicator.this.run();\n                }\n            });\n            return true;\n        } else {\n            logger.warn("Ignoring onDemand update due to stopped scheduler");\n            return false;\n        }\n    } else {\n        logger.warn("Ignoring onDemand update due to rate limiter");\n        return false;\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.7 run"}),"\nrun\u65b9\u6cd5\u5b9e\u9645\u4e0a\u548c\u524d\u9762\u81ea\u52a8\u88c5\u914d\u6240\u6267\u884c\u7684\u670d\u52a1\u6ce8\u518c\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8c03\u7528 register \u65b9\u6cd5\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\uff0c\u5e76\u4e14\u5728finally\u4e2d\uff0c\u6bcf30s\u4f1a\u5b9a\u65f6\u6267\u884c\u4e00\u4e0b\u5f53\u524d\u7684run \u65b9\u6cd5\u8fdb\u884c\u68c0\u67e5\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public void run() {\n    try {\n        discoveryClient.refreshInstanceInfo();\n        Long dirtyTimestamp = instanceInfo.isDirtyWithTime();\n        if (dirtyTimestamp != null) {\n            discoveryClient.register();\n            instanceInfo.unsetIsDirty(dirtyTimestamp);\n        }\n    } catch (Throwable t) {\n        logger.warn("There was a problem with the instance info replicator", t);\n    } finally {\n        Future next = scheduler.schedule(this, replicationIntervalSeconds,\n                                         TimeUnit.SECONDS);\n        scheduledPeriodicRef.set(next);\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.8 register"}),"\n\u6700\u7ec8\uff0c\u6211\u4eec\u7ec8\u4e8e\u627e\u5230\u670d\u52a1\u6ce8\u518c\u7684\u5165\u53e3\u4e86\uff0c\neurekaTransport.registrationClient.register \u6700\u7ec8\u8c03\u7528\u7684\u662f AbstractJerseyEurekaHttpClient#register(...)`\uff0c \u5f53\u7136\u5927\u5bb6\u5982\u679c\u81ea\u5df1\u53bb\u770b\u4ee3\u7801\uff0c\u5c31\u4f1a\u53d1\u73b0\u53bb\u8c03\u7528\u4e4b\u524d\u6709\u5f88\u591a\u7ed5\u6765\u7ed5\u53bb\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u5de5\u5382\u6a21\u5f0f\u3001\u88c5\u9970\u5668\u6a21\u5f0f\u7b49\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'boolean register() throws Throwable {\n    logger.info(PREFIX + "{}: registering service...", appPathIdentifier);\n    EurekaHttpResponse<Void> httpResponse;\n    try {\n        httpResponse = eurekaTransport.registrationClient.register(instanceInfo);\n    } catch (Exception e) {\n        logger.warn(PREFIX + "{} - registration failed {}", appPathIdentifier,e.getMessage(), e);\n        throw e;\n    }\n    if (logger.isInfoEnabled()) {\n        logger.info(PREFIX + "{} - registration status: {}", appPathIdentifier,httpResponse.getStatusCode());\n    }\n    return httpResponse.getStatusCode() == Status.NO_CONTENT.getStatusCode();\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u662f\u53d1\u8d77\u4e86\u4e00\u6b21http\u8bf7\u6c42\uff0c\u8bbf\u95eeEureka-Server\u7684",(0,r.jsx)(n.code,{children:"apps/${APP_NAME}"}),"\u63a5\u53e3\uff0c\u5c06\u5f53\u524d\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\u53d1\u9001\u5230Eureka Server\u8fdb\u884c\u4fdd\u5b58\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u81f3\u6b64\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u5df2\u7ecf\u77e5\u9053Spring Cloud Eureka \u662f\u5982\u4f55\u5728\u542f\u52a8\u7684\u65f6\u5019\u628a\u670d\u52a1\u4fe1\u606f\u6ce8\u518c\u5230Eureka Server\u4e0a\u7684\u4e86\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public EurekaHttpResponse<Void> register(InstanceInfo info) {\n    String urlPath = "apps/" + info.getAppName();\n    ClientResponse response = null;\n    try {\n        Builder resourceBuilder =\n            jerseyClient.resource(serviceUrl).path(urlPath).getRequestBuilder();\n        addExtraHeaders(resourceBuilder);\n        response = resourceBuilder\n            .header("Accept-Encoding", "gzip")\n            .type(MediaType.APPLICATION_JSON_TYPE)\n            .accept(MediaType.APPLICATION_JSON)\n            .post(ClientResponse.class, info);\n        return\n            anEurekaHttpResponse(response.getStatus()).headers(headersOf(response)).build();\n    } finally {\n        if (logger.isDebugEnabled()) {\n            logger.debug("Jersey HTTP POST {}/{} with instance {}; statusCode={}", serviceUrl, urlPath, info.getId(),\n                         response == null ? "N/A" : response.getStatus());\n        }\n        if (response != null) {\n            response.close();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u4f46\u662f\uff0c\u4f3c\u4e4e\u6700\u5f00\u59cb\u7684\u95ee\u9898\u8fd8\u6ca1\u6709\u89e3\u51b3\uff0c\u4e5f\u5c31\u662fSpring Boot\u5e94\u7528\u5728\u542f\u52a8\u65f6\uff0c\u4f1a\u8c03\u7528start\u65b9\u6cd5\uff0c\u6700\u7ec8\u8c03\u7528\nStatusChangeListener.notify \u53bb\u66f4\u65b0\u670d\u52a1\u7684\u4e00\u4e2a\u72b6\u6001\uff0c\u5e76\u6ca1\u6709\u76f4\u63a5\u8c03\u7528register\u65b9\u6cd5\u6ce8\u518c\u3002\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u53bb\u770b\u4e00\u4e0b statusChangeListener.notify \u65b9\u6cd5\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2.9 \u670d\u52a1\u603b\u7ed3"}),"\n\u81f3\u6b64\uff0c\u6211\u4eec\u77e5\u9053Eureka Client\u53d1\u8d77\u670d\u52a1\u6ce8\u518c\u65f6\uff0c\u6709\u4e24\u4e2a\u5730\u65b9\u4f1a\u6267\u884c\u670d\u52a1\u6ce8\u518c\u7684\u4efb\u52a1"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u5728Spring Boot\u542f\u52a8\u65f6\uff0c\u7531\u4e8e\u81ea\u52a8\u88c5\u914d\u673a\u5236\u5c06CloudEurekaClient\u6ce8\u5165\u5230\u4e86\u5bb9\u5668\uff0c\u5e76\u4e14\u6267\u884c\u4e86\u6784\u9020\u65b9\u6cd5\uff0c\u800c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u6709\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u6bcf40s\u4f1a\u6267\u884c\u4e00\u6b21\u5224\u65ad\uff0c\u5224\u65ad\u5b9e\u4f8b\u4fe1\u606f\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5982\u679c\u662f\u5219\u4f1a\u53d1\u8d77\u670d\u52a1\u6ce8\u518c\u7684\u6d41\u7a0b"}),"\n",(0,r.jsxs)(n.li,{children:["\u5728Spring Boot\u542f\u52a8\u65f6\uff0c\u901a\u8fc7refresh\u65b9\u6cd5\uff0c\u6700\u7ec8\u8c03\u7528StatusChangeListener.notify\u8fdb\u884c\u670d\u52a1\u72b6\u6001\u53d8\u66f4\u7684\u76d1\u542c\uff0c\u800c\u8fd9\u4e2a\u76d1\u542c\u7684\u65b9\u6cd5\u53d7\u5230\u4e8b\u4ef6\u4e4b\u540e\u4f1a\u53bb\u6267\u884c\u670d\u52a1\u6ce8\u518c\u3002\n",(0,r.jsx)(n.strong,{children:"2.3 Server\u7aef\u903b\u8f91"}),"\n\u5728\u6ca1\u5206\u6790\u6e90\u7801\u5b9e\u73b0\u4e4b\u524d\uff0c\u6211\u4eec\u4e00\u5b9a\u77e5\u9053\u5b83\u80af\u5b9a\u5bf9\u8bf7\u6c42\u8fc7\u6765\u7684\u670d\u52a1\u5b9e\u4f8b\u6570\u636e\u8fdb\u884c\u4e86\u5b58\u50a8\u3002\u90a3\u4e48\u6211\u4eec\u53bbEureka Server\u7aef\u770b\u4e00\u4e0b\u5904\u7406\u6d41\u7a0b\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u8bf7\u6c42\u5165\u53e3\u5728\uff1a\ncom.netflix.eureka.resources.ApplicationResource.addInstance() \u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u5927\u5bb6\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u6240\u63d0\u4f9b\u7684REST\u670d\u52a1\uff0c\u91c7\u7528\u7684\u662fjersey\u6765\u5b9e\u73b0\u7684\u3002Jersey\u662f\u57fa\u4e8eJAX-RS\u6807\u51c6\uff0c\u63d0\u4f9bREST\u7684\u5b9e\u73b0\u7684\u652f\u6301\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u5206\u6790\u4e86\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.3.1 addInstance()"}),"\n\u5f53EurekaClient\u8c03\u7528register\u65b9\u6cd5\u53d1\u8d77\u6ce8\u518c\u65f6\uff0c\u4f1a\u8c03\u7528\nApplicationResource.addInstance\u65b9\u6cd5\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u670d\u52a1\u6ce8\u518c\u5c31\u662f\u53d1\u9001\u4e00\u4e2aPOST\u8bf7\u6c42\u5e26\u4e0a\u5f53\u524d\u5b9e\u4f8b\u4fe1\u606f\u5230\u7c7b ApplicationResource \u7684 addInstance\u65b9\u6cd5\u8fdb\u884c\u670d\u52a1\u6ce8\u518c\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@POST\n@Consumes({"application/json", "application/xml"})\npublic Response addInstance(InstanceInfo info, @HeaderParam("x-netflix-discovery-replication") String isReplication) {\n    logger.debug("Registering instance {} (replication={})", info.getId(),\n                 isReplication);\n    DataCenterInfo dataCenterInfo = info.getDataCenterInfo();\n    if (dataCenterInfo instanceof UniqueIdentifier) {\n        String dataCenterInfoId =\n            ((UniqueIdentifier)dataCenterInfo).getId();\n        if (this.isBlank(dataCenterInfoId)) {\n            boolean experimental =            "true".equalsIgnoreCase(this.serverConfig.getExperimental("registration.validation.dataCenterInfoId"));\n            if (experimental) {\n                String entity = "DataCenterInfo of type " +\n                    dataCenterInfo.getClass() + " must contain a valid id";\n                return Response.status(400).entity(entity).build();\n            }\n            if (dataCenterInfo instanceof AmazonInfo) {\n                AmazonInfo amazonInfo = (AmazonInfo)dataCenterInfo;\n                String effectiveId = amazonInfo.get(MetaDataKey.instanceId);\n                if (effectiveId == null) {\n                    amazonInfo.getMetadata().put(MetaDataKey.instanceId.getName(), info.getId());\n                }\n            } else {\n                logger.warn("Registering DataCenterInfo of type {} without an appropriate id", dataCenterInfo.getClass());\n            }\n        }\n    }\n    this.registry.register(info, "true".equals(isReplication));\n    return Response.status(204).build();\n}\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.3.2 register"}),"\n\u6211\u4eec\u5148\u6765\u770b\nPeerAwareInstanceRegistryImpl\u7684\u7c7b\u5173\u7cfb\u56fe\uff0c\u4ece\u7c7b\u5173\u7cfb\u56fe\u53ef\u4ee5\u770b\u51fa\uff0cPeerAwareInstanceRegistry\u7684\u6700\u9876\u5c42\u63a5\u53e3\u4e3aLeaseManager\u4e0eLookupService,"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5176\u4e2dLookupService\u5b9a\u4e49\u4e86\u6700\u57fa\u672c\u7684\u53d1\u73b0\u793a\u4f8b\u7684\u884c\u4e3a"}),"\n",(0,r.jsx)(n.li,{children:"LeaseManager\u5b9a\u4e49\u4e86\u5904\u7406\u5ba2\u6237\u7aef\u6ce8\u518c\uff0c\u7eed\u7ea6\uff0c\u6ce8\u9500\u7b49\u64cd\u4f5c"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://java-tutorial.oss-cn-shanghai.aliyuncs.com/897d97d444664479bda0430417ec683f1f079a.jpg",alt:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a",title:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bEureka-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a"}),"\u5728 addInstance \u65b9\u6cd5\u4e2d\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u662f\nPeerAwareInstanceRegistryImpl.register \u65b9\u6cd5\u3002"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"leaseDuration \u8868\u793a\u79df\u7ea6\u8fc7\u671f\u65f6\u95f4\uff0c\u9ed8\u8ba4\u662f90s\uff0c\u4e5f\u5c31\u662f\u5f53\u670d\u52a1\u7aef\u8d85\u8fc790s\u6ca1\u6709\u6536\u5230\u5ba2\u6237\u7aef\u7684\u5fc3\u8df3\uff0c\u5219\u4e3b\u52a8\u5254\u9664\u8be5\u8282\u70b9"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u8c03\u7528super.register\u53d1\u8d77\u8282\u70b9\u6ce8\u518c"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u5c06\u4fe1\u606f\u590d\u5236\u5230Eureka Server\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u540c\u6b65\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u83b7\u5f97\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\uff0c\u7136\u540e\u9010\u4e2a\u53d1\u8d77\u6ce8\u518c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"public void register(final InstanceInfo info, final boolean isReplication) {\n    int leaseDuration = Lease.DEFAULT_DURATION_IN_SECS;\n    if (info.getLeaseInfo() != null && info.getLeaseInfo().getDurationInSecs() >0) {\n        leaseDuration = info.getLeaseInfo().getDurationInSecs(); //\u5982\u679c\u5ba2\u6237\u7aef\u6709\u81ea\u5df1\u5b9a\u4e49\u5fc3\u8df3\u8d85\u65f6\u65f6\u95f4\uff0c\u5219\u91c7\u7528\u5ba2\u6237\u7aef\u7684\u65f6\u95f4\n    }\n    super.register(info, leaseDuration, isReplication); //\u8282\u70b9\u6ce8\u518c\n    //\u590d\u5236\u5230Eureka Server\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\n    replicateToPeers(Action.Register, info.getAppName(), info.getId(), info,\n                     null, isReplication);\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.3.3 AbstractInstanceRegistry.register"}),"\n\u7b80\u5355\u6765\u8bf4\uff0cEureka-Server\u7684\u670d\u52a1\u6ce8\u518c\uff0c\u5b9e\u9645\u4e0a\u662f\u5c06\u5ba2\u6237\u7aef\u4f20\u9012\u8fc7\u6765\u7684\u5b9e\u4f8b\u6570\u636e\u4fdd\u5b58\u5230Eureka-Server\u4e2d\u7684ConcurrentHashMap\u4e2d\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public void register(InstanceInfo registrant, int leaseDuration, boolean\n                     isReplication) {\n    try {\n        read.lock();\n        //\u4eceregistry\u4e2d\u83b7\u5f97\u5f53\u524d\u5b9e\u4f8b\u4fe1\u606f\uff0c\u6839\u636eappName\n        Map<String, Lease<InstanceInfo>> gMap =\n            registry.get(registrant.getAppName());\n        REGISTER.increment(isReplication); //\u589e\u52a0\u6ce8\u518c\u6b21\u6570\u5230\u76d1\u63a7\u4fe1\u606f\u4e2d\n        if (gMap == null) {//\u5982\u679c\u5f53\u524dappName\u662f\u7b2c\u4e00\u6b21\u6ce8\u518c\uff0c\u5219\u521d\u59cb\u5316\u4e00\u4e2aConcurrentHashMap\n            final ConcurrentHashMap<String, Lease<InstanceInfo>> gNewMap = new\n                ConcurrentHashMap<String, Lease<InstanceInfo>>();\n            gMap = registry.putIfAbsent(registrant.getAppName(), gNewMap);\n            if (gMap == null) {\n                gMap = gNewMap;\n            }\n        }\n        //\u4ecegMap\u4e2d\u67e5\u8be2\u5df2\u7ecf\u5b58\u5728\u7684Lease\u4fe1\u606f\uff0cLease\u4e2d\u6587\u7ffb\u8bd1\u4e3a\u79df\u7ea6\uff0c\u5b9e\u9645\u4e0a\u5b83\u628a\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5b9e\u4f8b\u4fe1\u606f\u5305\u88c5\u6210\u4e86\u4e00\u4e2alease\uff0c\u91cc\u9762\u63d0\u4f9b\u4e86\u5bf9\u4e8e\u6539\u670d\u52a1\u5b9e\u4f8b\u7684\u79df\u7ea6\u7ba1\u7406\n        Lease<InstanceInfo> existingLease = gMap.get(registrant.getId());\n        // \u5f53instance\u5df2\u7ecf\u5b58\u5728\u662f\uff0c\u548c\u5ba2\u6237\u7aef\u7684instance\u7684\u4fe1\u606f\u505a\u6bd4\u8f83\uff0c\u65f6\u95f4\u6700\u65b0\u7684\u90a3\u4e2a\uff0c\u4e3a\u6709\u6548instance\u4fe1\u606f\n        if (existingLease != null && (existingLease.getHolder() != null)) {\n            Long existingLastDirtyTimestamp =\n                existingLease.getHolder().getLastDirtyTimestamp();\n            Long registrationLastDirtyTimestamp =\n                registrant.getLastDirtyTimestamp();\n            logger.debug("Existing lease found (existing={}, provided={}",\n                         existingLastDirtyTimestamp, registrationLastDirtyTimestamp);\n            // this is a > instead of a >= because if the timestamps are equal,we still take the remote transmitted\n            // InstanceInfo instead of the server local copy.\n            if (existingLastDirtyTimestamp > registrationLastDirtyTimestamp) {\n                logger.warn("There is an existing lease and the existing lease\'s dirty timestamp {} is greater" +\n                            " than the one that is being registered {}",\n                            existingLastDirtyTimestamp, registrationLastDirtyTimestamp);\n                logger.warn("Using the existing instanceInfo instead of the new instanceInfo as the registrant");\n                registrant = existingLease.getHolder();\n            }\n        } else {\n            //\u5f53lease\u4e0d\u5b58\u5728\u65f6\uff0c\u8fdb\u5165\u5230\u8fd9\u6bb5\u4ee3\u7801\uff0c\n            synchronized (lock) {\n                if (this.expectedNumberOfClientsSendingRenews > 0) {\n                    // Since the client wants to register it, increase the number of clients sending renews\n                    this.expectedNumberOfClientsSendingRenews =\n                        this.expectedNumberOfClientsSendingRenews + 1;\n                    updateRenewsPerMinThreshold();\n                }\n            }\n            logger.debug("No previous lease information found; it is new registration");\n        }\n        //\u6784\u5efa\u4e00\u4e2alease\n        Lease<InstanceInfo> lease = new Lease<InstanceInfo>(registrant,\n                                                            leaseDuration);\n        if (existingLease != null) {\n            // \u5f53\u539f\u6765\u5b58\u5728Lease\u7684\u4fe1\u606f\u65f6\uff0c\u8bbe\u7f6eserviceUpTimestamp, \u4fdd\u8bc1\u670d\u52a1\u542f\u52a8\u7684\u65f6\u95f4\u4e00\u76f4\u662f\u7b2c\u4e00\u6b21\u6ce8\u518c\u7684\u90a3\u4e2a\n            lease.setServiceUpTimestamp(existingLease.getServiceUpTimestamp());\n        }\n        gMap.put(registrant.getId(), lease);\n        synchronized (recentRegisteredQueue) {//\u6dfb\u52a0\u5230\u6700\u8fd1\u6ce8\u518c\u7684\u961f\u5217\u4e2d\n            recentRegisteredQueue.add(new Pair<Long, String>(\n                System.currentTimeMillis(),\n                registrant.getAppName() + "(" + registrant.getId() + ")"));\n        }\n        // \u68c0\u67e5\u5b9e\u4f8b\u72b6\u6001\u662f\u5426\u53d1\u751f\u53d8\u5316\uff0c\u5982\u679c\u662f\u5e76\u4e14\u5b58\u5728\uff0c\u5219\u8986\u76d6\u539f\u6765\u7684\u72b6\u6001\n        if (!InstanceStatus.UNKNOWN.equals(registrant.getOverriddenStatus())) {\n            logger.debug("Found overridden status {} for instance {}. Checking to see if needs to be add to the "\n                         + "overrides", registrant.getOverriddenStatus(),\n                         registrant.getId());\n            if (!overriddenInstanceStatusMap.containsKey(registrant.getId())) {\n                logger.info("Not found overridden id {} and hence adding it",\n                            registrant.getId());\n                overriddenInstanceStatusMap.put(registrant.getId(),\n                                                registrant.getOverriddenStatus());\n            }\n        }\n        InstanceStatus overriddenStatusFromMap =\n            overriddenInstanceStatusMap.get(registrant.getId());\n        if (overriddenStatusFromMap != null) {\n            logger.info("Storing overridden status {} from map",\n                        overriddenStatusFromMap);\n            registrant.setOverriddenStatus(overriddenStatusFromMap);\n        }\n        // Set the status based on the overridden status rules\n        InstanceStatus overriddenInstanceStatus =\n            getOverriddenInstanceStatus(registrant, existingLease, isReplication);\n        registrant.setStatusWithoutDirty(overriddenInstanceStatus);\n        // \u5f97\u5230instanceStatus\uff0c\u5224\u65ad\u662f\u5426\u662fUP\u72b6\u6001\uff0c\n        if (InstanceStatus.UP.equals(registrant.getStatus())) {\n            lease.serviceUp();\n        }\n        // \u8bbe\u7f6e\u6ce8\u518c\u7c7b\u578b\u4e3a\u6dfb\u52a0\n        registrant.setActionType(ActionType.ADDED);\n        // \u79df\u7ea6\u53d8\u66f4\u8bb0\u5f55\u961f\u5217\uff0c\u8bb0\u5f55\u4e86\u5b9e\u4f8b\u7684\u6bcf\u6b21\u53d8\u5316\uff0c \u7528\u4e8e\u6ce8\u518c\u4fe1\u606f\u7684\u589e\u91cf\u83b7\u53d6\n        recentlyChangedQueue.add(new RecentlyChangedItem(lease));\n        registrant.setLastUpdatedTimestamp();\n        //\u8ba9\u7f13\u5b58\u5931\u6548\n        invalidateCache(registrant.getAppName(), registrant.getVIPAddress(),\n                        registrant.getSecureVipAddress());\n        logger.info("Registered instance {}/{} with status {} (replication={})",\n                    registrant.getAppName(), registrant.getId(),\n                    registrant.getStatus(), isReplication);\n    } finally {\n        read.unlock();\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.3.4 \u5c0f\u7ed3"}),"\n\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u628a\u670d\u52a1\u6ce8\u518c\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5904\u7406\u8fc7\u7a0b\u505a\u4e86\u4e00\u4e2a\u8be6\u7ec6\u7684\u5206\u6790\uff0c\u5b9e\u9645\u4e0a\u5728Eureka Server\u7aef\uff0c\u4f1a\u628a\u5ba2\u6237\u7aef\u7684\u5730\u5740\u4fe1\u606f\u4fdd\u5b58\u5230ConcurrentHashMap\u4e2d\u5b58\u50a8\u3002\u5e76\u4e14\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6ce8\u518c\u4e2d\u5fc3\u4e4b\u95f4\uff0c\u4f1a\u5efa\u7acb\u4e00\u4e2a\u5fc3\u8df3\u68c0\u6d4b\u673a\u5236\u3002\u7528\u4e8e\u76d1\u63a7\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5065\u5eb7\u72b6\u6001\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.4 Eureka \u7684\u591a\u7ea7\u7f13\u5b58\u8bbe\u8ba1"}),"\nEureka Server\u5b58\u5728\u4e09\u4e2a\u53d8\u91cf\uff1a(registry\u3001readWriteCacheMap\u3001readOnlyCacheMap)\u4fdd\u5b58\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b9a\u65f6\u4efb\u52a1\u6bcf30s\u5c06readWriteCacheMap\u540c\u6b65\u81f3readOnlyCacheMap\uff0c\u6bcf60s\u6e05\u7406\u8d85\u8fc790s\u672a\u7eed\u7ea6\u7684\u8282\u70b9\uff0cEureka Client\u6bcf30s\u4ecereadOnlyCacheMap\u66f4\u65b0\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\uff0c\u800c\u5ba2\u6237\u7aef\u670d\u52a1\u7684\u6ce8\u518c\u5219\u4eceregistry\u66f4\u65b0\u670d\u52a1\u6ce8\u518c\u4fe1\u606f\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.4.1 \u591a\u7ea7\u7f13\u5b58\u7684\u610f\u4e49"}),"\n\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u8bbe\u8ba1\u591a\u7ea7\u7f13\u5b58\u5462\uff1f\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5f53\u5b58\u5728\u5927\u89c4\u6a21\u7684\u670d\u52a1\u6ce8\u518c\u548c\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e00\u4e2aConcurrentHashMap\u6570\u636e\uff0c\u90a3\u4e48\u52bf\u5fc5\u56e0\u4e3a\u9501\u7684\u5b58\u5728\u5bfc\u81f4\u7ade\u4e89\uff0c\u5f71\u54cd\u6027\u80fd\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u800cEureka\u53c8\u662fAP\u6a21\u578b\uff0c\u53ea\u9700\u8981\u6ee1\u8db3\u6700\u7ec8\u53ef\u7528\u5c31\u884c\u3002\u6240\u4ee5\u5b83\u5728\u8fd9\u91cc\u7528\u5230\u591a\u7ea7\u7f13\u5b58\u6765\u5b9e\u73b0\u8bfb\u5199\u5206\u79bb\u3002\u6ce8\u518c\u65b9\u6cd5\u5199\u7684\u65f6\u5019\u76f4\u63a5\u5199\u5185\u5b58\u6ce8\u518c\u8868\uff0c\u5199\u5b8c\u8868\u4e4b\u540e\u4e3b\u52a8\u5931\u6548\u8bfb\u5199\u7f13\u5b58\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u83b7\u53d6\u6ce8\u518c\u4fe1\u606f\u63a5\u53e3\u5148\u4ece\u53ea\u8bfb\u7f13\u5b58\u53d6\uff0c\u53ea\u8bfb\u7f13\u5b58\u6ca1\u6709\u518d\u53bb\u8bfb\u5199\u7f13\u5b58\u53d6\uff0c\u8bfb\u5199\u7f13\u5b58\u6ca1\u6709\u518d\u53bb\u5185\u5b58\u6ce8\u518c\u8868\u91cc\u53d6\uff08\u4e0d\u53ea\u662f\u53d6\uff0c\u6b64\u5904\u8f83\u590d\u6742\uff09\u3002\u5e76\u4e14\uff0c\u8bfb\u5199\u7f13\u5b58\u4f1a\u66f4\u65b0\u56de\u5199\u53ea\u8bfb\u7f13\u5b58"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"responseCacheUpdateIntervalMs \uff1a readOnlyCacheMap \u7f13\u5b58\u66f4\u65b0\u7684\u5b9a\u65f6\u5668\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4\u4e3a30\u79d2"}),"\n",(0,r.jsxs)(n.li,{children:["responseCacheAutoExpirationInSeconds : readWriteCacheMap \u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 180 \u79d2\u3002\n",(0,r.jsx)(n.strong,{children:"2.4.2 \u670d\u52a1\u6ce8\u518c\u7684\u7f13\u5b58\u5931\u6548"}),"\n\u5728AbstractInstanceRegistry.register\u65b9\u6cd5\u7684\u6700\u540e\uff0c\u4f1a\u8c03\u7528invalidateCache(registrant.getAppName(), registrant.getVIPAddress(),registrant.getSecureVipAddress()); \u65b9\u6cd5\uff0c\u4f7f\u5f97\u8bfb\u5199\u7f13\u5b58\u5931\u6548\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public void invalidate(Key... keys) {\n    for (Key key : keys) {\n        logger.debug("Invalidating the response cache key : {} {} {} {}, {}",\n                     key.getEntityType(), key.getName(), key.getVersion(),\n                     key.getType(), key.getEurekaAccept());\n        readWriteCacheMap.invalidate(key);\n        Collection<Key> keysWithRegions = regionSpecificKeys.get(key);\n        if (null != keysWithRegions && !keysWithRegions.isEmpty()) {\n            for (Key keysWithRegion : keysWithRegions) {\n                logger.debug("Invalidating the response cache key : {} {} {} {} {}",\n                             key.getEntityType(), key.getName(),\n                             key.getVersion(), key.getType(), key.getEurekaAccept());\n                readWriteCacheMap.invalidate(keysWithRegion);\n            }\n        }\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.4.3 \u5b9a\u65f6\u540c\u6b65\u7f13\u5b58"}),"\nResponseCacheImpl\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u8fd9\u4e2a\u4efb\u52a1\u4f1a\u5b9a\u65f6\u68c0\u67e5\u5199\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u53d8\u5316\uff0c\u8fdb\u884c\u66f4\u65b0\u548c\u540c\u6b65\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private TimerTask getCacheUpdateTask() {\n    return new TimerTask() {\n        @Override\n        public void run() {\n            logger.debug("Updating the client cache from response cache");\n            for (Key key : readOnlyCacheMap.keySet()) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug("Updating the client cache from response cache for key : {} {} {} {}",\n                                 key.getEntityType(), key.getName(),\n                                 key.getVersion(), key.getType());\n                }\n                try {\n                    CurrentRequestVersion.set(key.getVersion());\n                    Value cacheValue = readWriteCacheMap.get(key);\n                    Value currentCacheValue = readOnlyCacheMap.get(key);\n                    if (cacheValue != currentCacheValue) {\n                        readOnlyCacheMap.put(key, cacheValue);\n                    }\n                } catch (Throwable th) {\n                    logger.error("Error while updating the client cache from response cache for key {}", key.toStringCompact(), th);\n                } finally {\n                    CurrentRequestVersion.remove();\n                }\n            }\n        }\n    };\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5 \u670d\u52a1\u7eed\u7ea6"}),"\n\u6240\u8c13\u7684\u670d\u52a1\u7eed\u7ea6\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u5fc3\u8df3\u68c0\u67e5\u673a\u5236\u3002\u5ba2\u6237\u7aef\u4f1a\u5b9a\u671f\u53d1\u9001\u5fc3\u8df3\u6765\u7eed\u7ea6\u3002\u90a3\u4e48\u7b80\u5355\u7ed9\u5927\u5bb6\u770b\u4e00\u4e0b\u4ee3\u7801\u7684\u5b9e\u73b0"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5.1 initScheduledTasks"}),"\n\u5ba2\u6237\u7aef\u4f1a\u5728\nDiscoveryClient.initScheduledTasks \u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u5fc3\u8df3\u68c0\u6d4b\u7684\u5b9a\u65f6\u4efb\u52a1"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'// Heartbeat timer\nscheduler.schedule(\n    new TimedSupervisorTask(\n        "heartbeat",\n        scheduler,\n        heartbeatExecutor,\n        renewalIntervalInSecs,\n        TimeUnit.SECONDS,\n        expBackOffBound,\n        new HeartbeatThread()\n    ),\n    renewalIntervalInSecs, TimeUnit.SECONDS);\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5.2 HeartbeatThread"}),"\n\u7136\u540e\u8fd9\u4e2a\u5b9a\u65f6\u4efb\u52a1\u4e2d\uff0c\u4f1a\u6267\u884c\u4e00\u4e2a HearbeatThread \u7684\u7ebf\u7a0b\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u4f1a\u5b9a\u65f6\u8c03\u7528renew()\u6765\u505a\u7eed\u7ea6\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"//\u6bcf\u969430s\u53d1\u9001\u4e00\u4e2a\u5fc3\u8df3\u8bf7\u6c42\u5230\nprivate class HeartbeatThread implements Runnable {\n    public void run() {\n        if (renew()) {\n            lastSuccessfulHeartbeatTimestamp = System.currentTimeMillis();\n        }\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5.3 \u670d\u52a1\u7aef\u6536\u5230\u5fc3\u8df3\u8bf7\u6c42\u7684\u5904\u7406"}),"\n\u5728ApplicationResource.getInstanceInfo\u8fd9\u4e2a\u63a5\u53e3\u4e2d\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2aInstanceResource\u7684\u5b9e\u4f8b\uff0c\u5728\u8be5\u5b9e\u4f8b\u4e0b\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2astatusUpdate\u7684\u63a5\u53e3\u6765\u66f4\u65b0\u72b6\u6001"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Path("{id}")\npublic InstanceResource getInstanceInfo(@PathParam("id") String id) {\n    return new InstanceResource(this, id, serverConfig, registry);\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5.4 InstanceResource.statusUpdate()"}),"\n\u5728\u8be5\u65b9\u6cd5\u4e2d\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8 registry.statusUpdate \u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5b83\u4f1a\u8c03\u7528\nAbstractInstanceRegistry.statusUpdate\u6765\u66f4\u65b0\u6307\u5b9a\u670d\u52a1\u63d0\u4f9b\u8005\u5728\u670d\u52a1\u7aef\u5b58\u50a8\u7684\u4fe1\u606f\u4e2d\u7684\u53d8\u5316\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@PUT\n@Path("status")\npublic Response statusUpdate(\n    @QueryParam("value") String newStatus,\n    @HeaderParam(PeerEurekaNode.HEADER_REPLICATION) String isReplication,\n    @QueryParam("lastDirtyTimestamp") String lastDirtyTimestamp) {\n    try {\n        if (registry.getInstanceByAppAndId(app.getName(), id) == null) {\n            logger.warn("Instance not found: {}/{}", app.getName(), id);\n            return Response.status(Status.NOT_FOUND).build();\n        }\n        boolean isSuccess = registry.statusUpdate(app.getName(), id,                      \n                                                  InstanceStatus.valueOf(newStatus), lastDirtyTimestamp,\n                                                  "true".equals(isReplication));\n        if (isSuccess) {\n            logger.info("Status updated: {} - {} - {}", app.getName(), id,\n                        newStatus);\n            return Response.ok().build();\n        } else {\n            logger.warn("Unable to update status: {} - {} - {}", app.getName(),\n                        id, newStatus);\n            return Response.serverError().build();\n        }\n    } catch (Throwable e) {\n        logger.error("Error updating instance {} for status {}", id,\n                     newStatus);\n        return Response.serverError().build();\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.5.5 AbstractInstanceRegistry.statusUpdate"}),"\n\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\uff0c\u4f1a\u62ff\u5230\u5e94\u7528\u5bf9\u5e94\u7684\u5b9e\u4f8b\u5217\u8868\uff0c\u7136\u540e\u8c03\u7528Lease.renew()\u53bb\u8fdb\u884c\u5fc3\u8df3\u7eed\u7ea6\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"public boolean statusUpdate(String appName, String id,\n                            InstanceStatus newStatus, String\n                            lastDirtyTimestamp,\n                            boolean isReplication) {\n    try {\n        read.lock();\n        // \u66f4\u65b0\u72b6\u6001\u7684\u6b21\u6570 \u72b6\u6001\u7edf\u8ba1\n        STATUS_UPDATE.increment(isReplication);\n        // \u4ece\u672c\u5730\u6570\u636e\u91cc\u9762\u83b7\u53d6\u5b9e\u4f8b\u4fe1\u606f\uff0c\n        Map<String, Lease<InstanceInfo>> gMap = registry.get(appName);\n        Lease<InstanceInfo> lease = null;\n        if (gMap != null) {\n            lease = gMap.get(id);\n        }\n        // \u5b9e\u4f8b\u4e0d\u5b58\u5728\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u8868\u793a\u5931\u8d25\n        if (lease == null) {\n            return false;\n        } else {\n            // \u6267\u884c\u4e00\u4e0blease\u7684renew\u65b9\u6cd5\uff0c\u91cc\u9762\u4e3b\u8981\u662f\u66f4\u65b0\u4e86\u8fd9\u4e2ainstance\u7684\u6700\u540e\u66f4\u65b0\u65f6\u95f4\u3002\n            lease.renew();\n            // \u83b7\u53d6instance\u5b9e\u4f8b\u4fe1\u606f\n            InstanceInfo info = lease.getHolder();\n            // Lease is always created with its instance info object.\n            // This log statement is provided as a safeguard, in case this invariant is violated.\n            if (info == null) {\n                logger.error(\"Found Lease without a holder for instance id {}\",\n                             id);\n            }\n            // \u5f53instance\u4fe1\u606f\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5e76\u4e14\u5b9e\u4f8b\u72b6\u6001\u53d1\u751f\u4e86\u53d8\u5316\n            if ((info != null) && !(info.getStatus().equals(newStatus))) {\n                // \u5982\u679c\u65b0\u72b6\u6001\u662fUP\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u542f\u52a8\u4e00\u4e0bserviceUp() , \u4e3b\u8981\u662f\u66f4\u65b0\u670d\u52a1\u7684\u6ce8\u518c\u65f6\n                \u95f4\n                    if (InstanceStatus.UP.equals(newStatus)) {\n                        lease.serviceUp();\n                    }\n                // \u5c06instance Id \u548c\u8fd9\u4e2a\u72b6\u6001\u7684\u6620\u5c04\u4fe1\u606f\u653e\u5165\u8986\u76d6\u7f13\u5b58MAP\u91cc\u9762\u53bb\n                overriddenInstanceStatusMap.put(id, newStatus);\n                // Set it for transfer of overridden status to replica on\n                // \u8bbe\u7f6e\u8986\u76d6\u72b6\u6001\u5230\u5b9e\u4f8b\u4fe1\u606f\u91cc\u9762\u53bb\n                info.setOverriddenStatus(newStatus);\n                long replicaDirtyTimestamp = 0;\n                info.setStatusWithoutDirty(newStatus);\n                if (lastDirtyTimestamp != null) {\n                    replicaDirtyTimestamp = Long.valueOf(lastDirtyTimestamp);\n                }\n                // If the replication's dirty timestamp is more than the existing one, just update\n                // it to the replica's.\n                // \u5982\u679creplicaDirtyTimestamp \u7684\u65f6\u95f4\u5927\u4e8einstance\u7684getLastDirtyTimestamp() ,\u5219\u66f4\u65b0\n\n                if (replicaDirtyTimestamp > info.getLastDirtyTimestamp()) {\n                    info.setLastDirtyTimestamp(replicaDirtyTimestamp);\n                }\n                info.setActionType(ActionType.MODIFIED);\n                recentlyChangedQueue.add(new RecentlyChangedItem(lease));\n                info.setLastUpdatedTimestamp();\n                //\u66f4\u65b0\u5199\u7f13\u5b58\n                invalidateCache(appName, info.getVIPAddress(),\n                                info.getSecureVipAddress());\n            }\n            return true;\n        }\n    } finally {\n        read.unlock();\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u81f3\u6b64\uff0c\u5fc3\u8df3\u7eed\u7ea6\u529f\u80fd\u5c31\u5206\u6790\u5b8c\u6210\u4e86\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6 \u670d\u52a1\u53d1\u73b0"}),"\n\u6211\u4eec\u7ee7\u7eed\u6765\u7814\u7a76\u670d\u52a1\u7684\u53d1\u73b0\u8fc7\u7a0b\uff0c\u5c31\u662f\u5ba2\u6237\u7aef\u9700\u8981\u80fd\u591f\u6ee1\u8db3\u4e24\u4e2a\u529f\u80fd"]}),"\n",(0,r.jsxs)(n.p,{children:["\u5728\u542f\u52a8\u7684\u65f6\u5019\u83b7\u53d6\u6307\u5b9a\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5730\u5740\u5217\u8868\nEureka server\u7aef\u5730\u5740\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u52a8\u6001\u611f\u77e5\n",(0,r.jsx)(n.strong,{children:"2.6.1 DiscoveryClient\u6784\u9020\u65f6\u67e5\u8be2"}),"\n\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u7684\u5ba2\u6237\u7aef\u9ed8\u8ba4\u5f00\u542f\u4e86fetchRegistry\uff0c\u5219\u4f1a\u4eceeureka-server\u4e2d\u62c9\u53d6\u6570\u636e\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DiscoveryClient(ApplicationInfoManager applicationInfoManager,\n                EurekaClientConfig config, AbstractDiscoveryClientOptionalArgs args,\n                Provider<BackupRegistry> backupRegistryProvider,\n                EndpointRandomizer endpointRandomizer) {\n    if (clientConfig.shouldFetchRegistry() && !fetchRegistry(false)) {\n        fetchRegistryFromBackup();\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2.6.2 fetchRegistry"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private boolean fetchRegistry(boolean forceFullRegistryFetch) {\n    Stopwatch tracer = FETCH_REGISTRY_TIMER.start();\n    try {\n        // If the delta is disabled or if it is the first time, get all\n        // applications\n        Applications applications = getApplications();\n        if (clientConfig.shouldDisableDelta()\n            ||\n            (!Strings.isNullOrEmpty(clientConfig.getRegistryRefreshSingleVipAddress()))\n            || forceFullRegistryFetch\n            || (applications == null)\n            || (applications.getRegisteredApplications().size() == 0)\n            || (applications.getVersion() == -1)) //Client application does not have latest library supporting delta\n        {\n            logger.info("Disable delta property : {}",\n                        clientConfig.shouldDisableDelta());\n            logger.info("Single vip registry refresh property : {}",\n                        clientConfig.getRegistryRefreshSingleVipAddress());\n            logger.info("Force full registry fetch : {}",\n                        forceFullRegistryFetch);\n            logger.info("Application is null : {}", (applications == null));\n            logger.info("Registered Applications size is zero : {}",\n                        (applications.getRegisteredApplications().size() == 0));\n            logger.info("Application version is -1: {}",\n                        (applications.getVersion() == -1));\n            getAndStoreFullRegistry();\n        } else {\n            getAndUpdateDelta(applications);\n        }\n        applications.setAppsHashCode(applications.getReconcileHashCode());\n        logTotalInstances();\n    } catch (Throwable e) {\n        logger.error(PREFIX + "{} - was unable to refresh its cache! status = {}", appPathIdentifier, e.getMessage(), e);\n        return false;\n    } finally {\n        if (tracer != null) {\n            tracer.stop();\n        }\n    }\n    // Notify about cache refresh before updating the instance remote status\n    onCacheRefreshed();\n    // Update remote status based on refreshed data held in the cache\n    updateInstanceRemoteStatus();\n    // registry was fetched successfully, so return true\n    return true;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.3 \u5b9a\u65f6\u5237\u65b0\u672c\u5730\u5730\u5740\u5217\u8868"}),"\n\u4efb\u52a1\u6bcf\u969430s\u66f4\u65b0\u4e00\u6b21\n\u5728DiscoveryClient\u6784\u9020\u7684\u65f6\u5019\uff0c\u4f1a\u521d\u59cb\u5316\u4e00\u4e9b\u4efb\u52a1\uff0c\u8fd9\u4e2a\u5728\u524d\u9762\u54b1\u4eec\u5206\u6790\u8fc7\u4e86\u3002\u5176\u4e2d\u6709\u4e00\u4e2a\u4efb\u52a1\u52a8\u6001\u66f4\u65b0\u672c\u5730\u670d\u52a1\u5730\u5740\u5217\u8868\uff0c\u53eb cacheRefreshTask \u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u4efb\u52a1\u6700\u7ec8\u6267\u884c\u7684\u662fCacheRefreshThread\u8fd9\u4e2a\u7ebf\u7a0b\u3002\u5b83\u662f\u4e00\u4e2a\u5468\u671f\u6027\u6267\u884c\u7684\u4efb\u52a1\uff0c\u5177\u4f53\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private void initScheduledTasks() {\n    if (clientConfig.shouldFetchRegistry()) {\n        // registry cache refresh timer\n        int registryFetchIntervalSeconds =\n            clientConfig.getRegistryFetchIntervalSeconds();\n        int expBackOffBound =\n            clientConfig.getCacheRefreshExecutorExponentialBackOffBound();\n        cacheRefreshTask = new TimedSupervisorTask(\n            "cacheRefresh",\n            scheduler,\n            cacheRefreshExecutor,\n            registryFetchIntervalSeconds,\n            TimeUnit.SECONDS,\n            expBackOffBound,\n            new CacheRefreshThread()\n        );\n        scheduler.schedule(\n            cacheRefreshTask,\n            registryFetchIntervalSeconds, TimeUnit.SECONDS);\n    }\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.4 TimedSupervisorTask"}),"\n\u4ece\u6574\u4f53\u4e0a\u770b\uff0cTimedSupervisorTask\u662f\u56fa\u5b9a\u95f4\u9694\u7684\u5468\u671f\u6027\u4efb\u52a1\uff0c\u4e00\u65e6\u9047\u5230\u8d85\u65f6\u5c31\u4f1a\u5c06\u4e0b\u4e00\u4e2a\u5468\u671f\u7684\u95f4\u9694\u65f6\u95f4\u8c03\u5927\uff0c\u5982\u679c\u8fde\u7eed\u8d85\u65f6\uff0c\u90a3\u4e48\u6bcf\u6b21\u95f4\u9694\u65f6\u95f4\u90fd\u4f1a\u589e\u5927\u4e00\u500d\uff0c\u4e00\u76f4\u5230\u8fbe\u5916\u90e8\u53c2\u6570\u8bbe\u5b9a\u7684\u4e0a\u9650\u4e3a\u6b62\uff0c\u4e00\u65e6\u65b0\u4efb\u52a1\u4e0d\u518d\u8d85\u65f6\uff0c\u95f4\u9694\u65f6\u95f4\u53c8\u4f1a\u81ea\u52a8\u6062\u590d\u4e3a\u521d\u59cb\u503c\u3002\u8fd9\u79cd\u8bbe\u8ba1\u8fd8\u662f\u503c\u5f97\u5b66\u4e60\u7684\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public void run() {\n      Future future = null;\n  try {\n    //\u4f7f\u7528Future\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u5b50\u7ebf\u7a0b\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8fd9\u6837\u5f53\u524d\u7ebf\u7a0b\u5c31\u4e0d\u7528\u65e0\u9650\u7b49\u5f85\u4e86\n    future = executor.submit(task);\n    threadPoolLevelGauge.set((long) executor.getActiveCount());\n    //\u6307\u5b9a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7684\u6700\u957f\u65f6\u95f4\n    future.get(timeoutMillis, TimeUnit.MILLISECONDS);  // block until done or timeout\n    //delay\u662f\u4e2a\u5f88\u6709\u7528\u7684\u53d8\u91cf\uff0c\u540e\u9762\u4f1a\u7528\u5230\uff0c\u8fd9\u91cc\u8bb0\u5f97\u6bcf\u6b21\u6267\u884c\u4efb\u52a1\u6210\u529f\u90fd\u4f1a\u5c06delay\u91cd\u7f6e\n    delay.set(timeoutMillis);\n    threadPoolLevelGauge.set((long) executor.getActiveCount());\n } catch (TimeoutException e) {\n    logger.error("task supervisor timed out", e);\n    timeoutCounter.increment();\n    long currentDelay = delay.get();\n    //\u4efb\u52a1\u7ebf\u7a0b\u8d85\u65f6\u7684\u65f6\u5019\uff0c\u5c31\u628adelay\u53d8\u91cf\u7ffb\u500d\uff0c\u4f46\u4e0d\u4f1a\u8d85\u8fc7\u5916\u90e8\u8c03\u7528\u65f6\u8bbe\u5b9a\u7684\u6700\u5927\u5ef6\u65f6\u65f6\u95f4\n    long newDelay = Math.min(maxDelay, currentDelay * 2);\n    //\u8bbe\u7f6e\u4e3a\u6700\u65b0\u7684\u503c\uff0c\u8003\u8651\u5230\u591a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u7528\u4e86CAS\n    delay.compareAndSet(currentDelay, newDelay);\n } catch (RejectedExecutionException e) {\n    //\u4e00\u65e6\u7ebf\u7a0b\u6c60\u7684\u963b\u585e\u961f\u5217\u4e2d\u653e\u6ee1\u4e86\u5f85\u5904\u7406\u4efb\u52a1\uff0c\u89e6\u53d1\u4e86\u62d2\u7edd\u7b56\u7565\uff0c\u5c31\u4f1a\u5c06\u8c03\u5ea6\u5668\u505c\u6389\n    if (executor.isShutdown() || scheduler.isShutdown()) {\n      logger.warn("task supervisor shutting down, reject the task", e);\n   } else {\n      logger.error("task supervisor rejected the task", e);\n   }\n    rejectedCounter.increment();\n } catch (Throwable e) {\n    //\u4e00\u65e6\u51fa\u73b0\u672a\u77e5\u7684\u5f02\u5e38\uff0c\u5c31\u505c\u6389\u8c03\u5ea6\u5668\n    if (executor.isShutdown() || scheduler.isShutdown()) {\n      logger.warn("task supervisor shutting down, can\'t accept the task");\n   } else {\n      logger.error("task supervisor threw an exception", e);\n   }\n    throwableCounter.increment();\n } finally {\n    //\u8fd9\u91cc\u4efb\u52a1\u8981\u4e48\u6267\u884c\u5b8c\u6bd5\uff0c\u8981\u4e48\u53d1\u751f\u5f02\u5e38\uff0c\u90fd\u7528cancel\u65b9\u6cd5\u6765\u6e05\u7406\u4efb\u52a1\uff1b\n    if (future != null) {\n      future.cancel(true);\n   }\n    //\u53ea\u8981\u8c03\u5ea6\u5668\u6ca1\u6709\u505c\u6b62\uff0c\u5c31\u518d\u6307\u5b9a\u7b49\u5f85\u65f6\u95f4\u4e4b\u540e\u5728\u6267\u884c\u4e00\u6b21\u540c\u6837\u7684\u4efb\u52a1\n    if (!scheduler.isShutdown()) {\n      //\u8fd9\u91cc\u5c31\u662f\u5468\u671f\u6027\u4efb\u52a1\u7684\u539f\u56e0\uff1a\u53ea\u8981\u6ca1\u6709\u505c\u6b62\u8c03\u5ea6\u5668\uff0c\u5c31\u518d\u521b\u5efa\u4e00\u6b21\u6027\u4efb\u52a1\uff0c\u6267\u884c\u65f6\u95f4\u65f6dealy\u7684\u503c\uff0c\n      //\u5047\u8bbe\u5916\u90e8\u8c03\u7528\u65f6\u4f20\u5165\u7684\u8d85\u65f6\u65f6\u95f4\u4e3a30\u79d2\uff08\u6784\u9020\u65b9\u6cd5\u7684\u5165\u53c2timeout\uff09\uff0c\u6700\u5927\u95f4\u9694\u65f6\u95f4\u4e3a50\u79d2(\u6784\u9020\u65b9\u6cd5\u7684\u5165\u53c2expBackOffBound)\n      //\u5982\u679c\u6700\u8fd1\u4e00\u6b21\u4efb\u52a1\u6ca1\u6709\u8d85\u65f6\uff0c\u90a3\u4e48\u5c31\u572830\u79d2\u540e\u5f00\u59cb\u65b0\u4efb\u52a1\uff0c\n      //\u5982\u679c\u6700\u8fd1\u4e00\u6b21\u4efb\u52a1\u8d85\u65f6\u4e86\uff0c\u90a3\u4e48\u5c31\u572850\u79d2\u540e\u5f00\u59cb\u65b0\u4efb\u52a1\uff08\u5f02\u5e38\u5904\u7406\u4e2d\u6709\u4e2a\u4e58\u4ee5\u4e8c\u7684\u64cd\u4f5c\uff0c\u4e58\u4ee5\u4e8c\u540e\u768460\u79d2\u8d85\u8fc7\u4e86\u6700\u5927\u95f4\u969450\u79d2\uff09\n      scheduler.schedule(this, delay.get(), TimeUnit.MILLISECONDS);\n   }\n }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.5 refreshRegistry"}),"\n\u8fd9\u6bb5\u4ee3\u7801\u4e3b\u8981\u4e24\u4e2a\u903b\u8f91"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u5224\u65adremoteRegions\u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u8c03\u7528fetchRegistry\u83b7\u53d6\u672c\u5730\u670d\u52a1\u5730\u5740\u7f13\u5b58"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@VisibleForTesting\nvoid refreshRegistry() {\n    try {\n        boolean isFetchingRemoteRegionRegistries =\n            isFetchingRemoteRegionRegistries();\n        boolean remoteRegionsModified = false;\n        //\u5982\u679c\u90e8\u7f72\u5728aws\u73af\u5883\u4e0a\uff0c\u4f1a\u5224\u65ad\u6700\u540e\u4e00\u6b21\u8fdc\u7a0b\u533a\u57df\u66f4\u65b0\u7684\u4fe1\u606f\u548c\u5f53\u524d\u8fdc\u7a0b\u533a\u57df\u4fe1\u606f\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u60f3\u7b49\uff0c\u5219\u66f4\u65b0\n        String latestRemoteRegions =\n            clientConfig.fetchRegistryForRemoteRegions();\n        if (null != latestRemoteRegions) {\n            String currentRemoteRegions = remoteRegionsToFetch.get();\n            if (!latestRemoteRegions.equals(currentRemoteRegions)) {\n                //\u5224\u65ad\u6700\u540e\u4e00\u6b21\n            }\n            boolean success = fetchRegistry(remoteRegionsModified);\n            if (success) {\n                registrySize = localRegionApps.get().size();\n                lastSuccessfulRegistryFetchTimestamp =\n                    System.currentTimeMillis();\n            }\n            // \u7701\u7565\n        } catch (Throwable e) {\n            logger.error("Cannot fetch registry from server", e);\n        }\n    }\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2.6.6 fetchRegistry"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private boolean fetchRegistry(boolean forceFullRegistryFetch) {\n    Stopwatch tracer = FETCH_REGISTRY_TIMER.start();\n    try {\n        // If the delta is disabled or if it is the first time, get all\n        // applications\n        // \u53d6\u51fa\u672c\u5730\u7f13\u5b58\u7684\u670d\u52a1\u5217\u8868\u4fe1\u606f\n        Applications applications = getApplications();\n        //\u5224\u65ad\u591a\u4e2a\u6761\u4ef6\uff0c\u786e\u5b9a\u662f\u5426\u89e6\u53d1\u5168\u91cf\u66f4\u65b0\uff0c\u5982\u4e0b\u4efb\u4e00\u4e2a\u6ee1\u8db3\u90fd\u4f1a\u5168\u91cf\u66f4\u65b0\uff1a\n        //1\\. \u662f\u5426\u7981\u7528\u589e\u91cf\u66f4\u65b0\uff1b\n        //2\\. \u662f\u5426\u5bf9\u67d0\u4e2aregion\u7279\u522b\u5173\u6ce8\uff1b\n        //3\\. \u5916\u90e8\u8c03\u7528\u65f6\u662f\u5426\u901a\u8fc7\u5165\u53c2\u6307\u5b9a\u5168\u91cf\u66f4\u65b0\uff1b\n        //4\\. \u672c\u5730\u8fd8\u672a\u7f13\u5b58\u6709\u6548\u7684\u670d\u52a1\u5217\u8868\u4fe1\u606f\uff1b\n        if (clientConfig.shouldDisableDelta()\n            ||\n            (!Strings.isNullOrEmpty(clientConfig.getRegistryRefreshSingleVipAddress()))\n            || forceFullRegistryFetch\n            || (applications == null)\n            || (applications.getRegisteredApplications().size() == 0)\n            || (applications.getVersion() == -1)) //Client application does not\n            have latest library supporting delta\n        {\n            //\u8c03\u7528\u5168\u91cf\u66f4\u65b0\n            getAndStoreFullRegistry();\n        } else {\n            //\u8c03\u7528\u589e\u91cf\u66f4\u65b0\n            getAndUpdateDelta(applications);\n        }\n        //\u91cd\u65b0\u8ba1\u7b97\u548c\u8bbe\u7f6e\u4e00\u81f4\u6027hash\u7801\n        applications.setAppsHashCode(applications.getReconcileHashCode());\n        logTotalInstances(); //\u65e5\u5fd7\u6253\u5370\u6240\u6709\u5e94\u7528\u7684\u6240\u6709\u5b9e\u4f8b\u6570\u4e4b\u548c\n    } catch (Throwable e) {\n        logger.error(PREFIX + "{} - was unable to refresh its cache! status = {}", appPathIdentifier, e.getMessage(), e);\n        return false;\n    } finally {\n        if (tracer != null) {\n            tracer.stop();\n        }\n    }\n    //\u5c06\u672c\u5730\u7f13\u5b58\u66f4\u65b0\u7684\u4e8b\u4ef6\u5e7f\u64ad\u7ed9\u6240\u6709\u5df2\u6ce8\u518c\u7684\u76d1\u542c\u5668\uff0c\u6ce8\u610f\u8be5\u65b9\u6cd5\u5df2\u88abCloudEurekaClient\u7c7b\u91cd\u5199\n    onCacheRefreshed();\n    // Update remote status based on refreshed data held in the cache\n    //\u68c0\u67e5\u521a\u521a\u66f4\u65b0\u7684\u7f13\u5b58\u4e2d\uff0c\u6709\u6765\u81eaEureka server\u7684\u670d\u52a1\u5217\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u5e94\u7528\u7684\u72b6\u6001\uff0c\n    //\u5f53\u524d\u5b9e\u4f8b\u7684\u6210\u5458\u53d8\u91cflastRemoteInstanceStatus\uff0c\u8bb0\u5f55\u7684\u662f\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u7684\u5f53\u524d\u5e94\u7528\u72b6\u6001\uff0c\n    //\u4e0a\u8ff0\u4e24\u79cd\u72b6\u6001\u5728updateInstanceRemoteStatus\u65b9\u6cd5\u4e2d\u4f5c\u6bd4\u8f83 \uff0c\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u5c31\u66f4\u65b0lastRemoteInstanceStatus\uff0c\u5e76\u4e14\u5e7f\u64ad\u5bf9\u5e94\u7684\u4e8b\u4ef6\n    updateInstanceRemoteStatus();\n    // registry was fetched successfully, so return true\n    return true;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.7 getAndStoreFullRegistry"}),"\n\u4eceeureka server\u7aef\u83b7\u53d6\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u7684\u5730\u5740\u4fe1\u606f\uff0c\u7136\u540e\u66f4\u65b0\u5e76\u8bbe\u7f6e\u5230\u672c\u5730\u7f13\u5b58 localRegionApps \u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private void getAndStoreFullRegistry() throws Throwable {\n    long currentUpdateGeneration = fetchRegistryGeneration.get();\n    logger.info("Getting all instance registry info from the eureka server");\n    Applications apps = null;\n    EurekaHttpResponse<Applications> httpResponse =\n        clientConfig.getRegistryRefreshSingleVipAddress() == null\n        ? eurekaTransport.queryClient.getApplications(remoteRegionsRef.get())\n        :\n    eurekaTransport.queryClient.getVip(clientConfig.getRegistryRefreshSingleVipAddre\n                                       ss(), remoteRegionsRef.get());\n    if (httpResponse.getStatusCode() == Status.OK.getStatusCode()) {\n        apps = httpResponse.getEntity();\n    }\n    logger.info("The response status is {}", httpResponse.getStatusCode());\n    if (apps == null) {\n        logger.error("The application is null for some reason. Not storing this information");\n    } else if (fetchRegistryGeneration.compareAndSet(currentUpdateGeneration,\n                                                     currentUpdateGeneration + 1)) {\n        localRegionApps.set(this.filterAndShuffle(apps));\n        logger.debug("Got full registry with apps hashcode {}",\n                     apps.getAppsHashCode());\n    } else {\n        logger.warn("Not updating applications as another thread is updating it already");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.8 \u670d\u52a1\u7aef\u67e5\u8be2\u670d\u52a1\u5730\u5740\u6d41\u7a0b"}),"\n\u524d\u9762\u6211\u4eec\u77e5\u9053\uff0c\u5ba2\u6237\u7aef\u53d1\u8d77\u670d\u52a1\u5730\u5740\u7684\u67e5\u8be2\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5168\u91cf\u3001\u53e6\u4e00\u79cd\u662f\u589e\u91cf\u3002\u5bf9\u4e8e\u5168\u91cf\u67e5\u8be2\u7684\u8bf7\u6c42\uff0c\u4f1a\u8c03\u7528Eureka-server\u7684ApplicationsResource\u7684getContainers\u65b9\u6cd5\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u800c\u5bf9\u4e8e\u589e\u91cf\u8bf7\u6c42\uff0c\u4f1a\u8c03\u7528\nApplicationsResource.getContainerDifferential\u3002"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.9 ApplicationsResource.getContainers"}),"\n\u63a5\u6536\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u83b7\u53d6\u5168\u91cf\u6ce8\u518c\u4fe1\u606f\u8bf7\u6c42\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@GET\npublic Response getContainers(@PathParam("version") String version,\n                              @HeaderParam(HEADER_ACCEPT) String acceptHeader,\n                              @HeaderParam(HEADER_ACCEPT_ENCODING) String\n                              acceptEncoding,\n                              @HeaderParam(EurekaAccept.HTTP_X_EUREKA_ACCEPT)\n                              String eurekaAccept,\n                              @Context UriInfo uriInfo,\n                              @Nullable @QueryParam("regions") String\n                              regionsStr) {\n    boolean isRemoteRegionRequested = null != regionsStr &&\n        !regionsStr.isEmpty();\n    String[] regions = null;\n    if (!isRemoteRegionRequested) {\n        EurekaMonitors.GET_ALL.increment();\n    } else {\n        regions = regionsStr.toLowerCase().split(",");\n        Arrays.sort(regions); // So we don\'t have different caches for same regions queried in different order.\n        EurekaMonitors.GET_ALL_WITH_REMOTE_REGIONS.increment();\n    }\n    // EurekaServer\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1\uff0c\u8fd4\u56de403\n    if (!registry.shouldAllowAccess(isRemoteRegionRequested)) {\n        return Response.status(Status.FORBIDDEN).build();\n    }\n    CurrentRequestVersion.set(Version.toEnum(version));\n    KeyType keyType = Key.KeyType.JSON;// \u8bbe\u7f6e\u8fd4\u56de\u6570\u636e\u683c\u5f0f\uff0c\u9ed8\u8ba4JSON\n    String returnMediaType = MediaType.APPLICATION_JSON;\n    if (acceptHeader == null || !acceptHeader.contains(HEADER_JSON_VALUE)) {\n        // \u5982\u679c\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u5934\u90e8\u6ca1\u6709\u5177\u4f53\u683c\u5f0f\u4fe1\u606f\uff0c\u5219\u8fd4\u56de\u683c\u5f0f\u4e3aXML\n        keyType = Key.KeyType.XML;\n        returnMediaType = MediaType.APPLICATION_XML;\n    }\n    // \u6784\u5efa\u7f13\u5b58\u952e\n    Key cacheKey = new Key(Key.EntityType.Application,\n                           ResponseCacheImpl.ALL_APPS,\n                           keyType, CurrentRequestVersion.get(),\n                           EurekaAccept.fromString(eurekaAccept), regions\n                          );\n    // \u8fd4\u56de\u4e0d\u540c\u7684\u7f16\u7801\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53bb\u7f13\u5b58\u4e2d\u53d6\u6570\u636e\u7684\u65b9\u6cd5\u57fa\u672c\u4e00\u81f4\n    Response response;\n    if (acceptEncoding != null && acceptEncoding.contains(HEADER_GZIP_VALUE)) {\n        response = Response.ok(responseCache.getGZIP(cacheKey))\n            .header(HEADER_CONTENT_ENCODING, HEADER_GZIP_VALUE)\n            .header(HEADER_CONTENT_TYPE, returnMediaType)\n            .build();\n    } else {\n        response = Response.ok(responseCache.get(cacheKey))\n            .build();\n    }\n    CurrentRequestVersion.remove();\n    return response;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.6.10 responseCache.getGZIP"}),"\n\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\u3002"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public byte[] getGZIP(Key key) {\n    Value payload = getValue(key, shouldUseReadOnlyResponseCache);\n    if (payload == null) {\n        return null;\n    }\n    return payload.getGzipped();\n}\nValue getValue(final Key key, boolean useReadOnlyCache) {\n    Value payload = null;\n    try {\n        if (useReadOnlyCache) {\n            final Value currentPayload = readOnlyCacheMap.get(key);\n            if (currentPayload != null) {\n                payload = currentPayload;\n            } else {\n                payload = readWriteCacheMap.get(key);\n                readOnlyCacheMap.put(key, payload);\n            }\n        } else {\n            payload = readWriteCacheMap.get(key);\n        }\n    } catch (Throwable t) {\n        logger.error("Cannot get value for key : {}", key, t);\n    }\n    return payload;\n}\n'})}),"\n",(0,r.jsx)(n.h1,{id:"\u53c2\u8003\u6587\u7ae0",children:"\u53c2\u8003\u6587\u7ae0"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF",children:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF"}),"\n",(0,r.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA",children:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA"}),"\n",(0,r.jsx)(n.a,{href:"https://juejin.cn/post/6931922457741770760",children:"https://juejin.cn/post/6931922457741770760"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/D2C-Cai/herring",children:"https://github.com/D2C-Cai/herring"}),"\n",(0,r.jsx)(n.a,{href:"http://c.biancheng.net/springcloud",children:"http://c.biancheng.net/springcloud"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/macrozheng/springcloud-learning",children:"https://github.com/macrozheng/springcloud-learning"})]})]})}function g(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},88672:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var r=t(50959);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);