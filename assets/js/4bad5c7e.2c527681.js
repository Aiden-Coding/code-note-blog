"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[6323],{74981:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=t(11527),a=t(88672);const i={},o="\u53c2\u8003\u6587\u7ae0",l={id:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790",title:"SpringCloudGateway\u6e90\u7801\u5206\u6790",description:"\u5b66\u4e60\u76ee\u6807",source:"@site/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790.md",sourceDirName:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790",slug:"/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"spring",previous:{title:"SpringCloudEureka\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudEureka\u6e90\u7801\u5206\u6790"},next:{title:"SpringCloudHystrix\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790"}},s={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u5b66\u4e60\u76ee\u6807"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Gateway\u6838\u5fc3\u539f\u7406\u5206\u6790\n",(0,r.jsx)(n.strong,{children:"\u7b2c1\u7ae0 Bean\u7684\u51c6\u5907"}),"\n\u524d\u9762\u4e5f\u8bb2\u4e86\u8fd9\u4e48\u591a\u7ec4\u4ef6\u4e86\uff0c\u8fd9\u4f1a\u513f\u6211\u4eec\u96c6\u6210\nspring-cloud-starter-gateway\u7ec4\u4ef6\u53d1\u73b0\uff0c\u53c8\u662f\u4e00\u4e2astarter\u7ec4\u4ef6\uff0c\u4e8c\u8bdd\u4e0d\u8bf4\uff0c\u5148\u53bb\u627espring.factories\u6587\u4ef6\uff0c\u5206\u6790\u4e00\u4e0b\u6709\u54ea\u4e9b\u91cd\u8981\u7684bean\u88ab\u81ea\u52a8\u88c5\u914d\u8fdbIoC\u5bb9\u5668\u91cc\u9762\u4e86\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://dl-harmonyos.51cto.com/images/202207/788f3c1494307a2ad7d935811c9e62bab2c435.jpg",alt:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bGateway\u7f51\u5173-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a",title:"SpringCloud\u7cfb\u5217\u2014Spring Cloud \u6e90\u7801\u5206\u6790\u4e4bGateway\u7f51\u5173-\u5f00\u6e90\u57fa\u7840\u8f6f\u4ef6\u793e\u533a"}),"1.\u5148\u6765\u770b\nGatewayClassPathWarningAutoConfiguration\u8fd9\u4e2a\u914d\u7f6e\u7c7b"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Configuration(proxyBeanMethods = false)\n//\u5f53\u524d\u914d\u7f6e\u7c7b\u5728GatewayAutoConfiguration\u8fd9\u4e2a\u6838\u5fc3\u914d\u7f6e\u7c7b\u4e4b\u524d\u52a0\u8f7d\n@AutoConfigureBefore(GatewayAutoConfiguration.class)\npublic class GatewayClassPathWarningAutoConfiguration {\n\t...      \n\t@Configuration(proxyBeanMethods = false)\n\t@ConditionalOnClass(name = "org.springframework.web.servlet.DispatcherServlet")\n\tprotected static class SpringMvcFoundOnClasspathConfiguration {\n\t\tpublic SpringMvcFoundOnClasspathConfiguration() {\n\t\t\tlog.warn(BORDER\n\t\t\t\t\t+ "Spring MVC found on classpath, which is incompatible with Spring Cloud Gateway at this time. "\n\t\t\t\t\t+ "Please remove spring-boot-starter-web dependency." + BORDER);\n\t\t}\n\n\t}\n\t@Configuration(proxyBeanMethods = false)\n\t@ConditionalOnMissingClass("org.springframework.web.reactive.DispatcherHandler")\n\tprotected static class WebfluxMissingFromClasspathConfiguration {\n\n\t\tpublic WebfluxMissingFromClasspathConfiguration() {\n\t\t\tlog.warn(BORDER + "Spring Webflux is missing from the classpath, "\n\t\t\t\t\t+ "which is required for Spring Cloud Gateway at this time. "\n\t\t\t\t\t+ "Please add spring-boot-starter-webflux dependency." + BORDER);\n\t\t}\n\t}\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u4ece\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u80fd\u770b\u51fa\u6765\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u901a\u8fc7ConditionOnClass\u548cConditionOnMissingClass\u4e24\u4e2a\u505a\u4e86\u4e24\u4e2a\u65e5\u5fd7\u6253\u5370\u7684\u529f\u80fd\uff1b\u5982\u679cClassPath\u4e0b\u6709\norg.springframework.web.servlet.DispatcherServlet\u7c7b\u7684\u8bdd\uff0c\u5219\u5b9e\u4f8b\u7b2c\u4e00\u4e2aBean\u5bf9\u8c61\uff0c\u7136\u540e\u6253\u5370\u65e5\u5fd7\uff1a\u4e0d\u80fd\u4f9d\u8d56spring-boot-starter-web\u8fd9\u4e2a\u5305\u3002\u7136\u540e\u518d\u68c0\u67e5ClassPath\u4e0b\u662f\u5426\u6709\u6b63\u786e\u7684\u914d\u7f6ewebflux\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u6253\u5370\u65e5\u5fd7\uff1a\u52a0spring-boot-starter-webflux\u4f9d\u8d56\u3002"}),"\n",(0,r.jsx)(n.p,{children:"2.\u6838\u5fc3\u914d\u7f6e\u7c7bGatewayAutoConfiguration"}),"\n",(0,r.jsx)(n.p,{children:"\u56e0\u4e3a\u4ee3\u7801\u592a\u957f\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u793a\u4e86\uff0c\u8fd9\u91cc\u5c31\u5217\u4e3e\u51e0\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PropertiesRouteDefinitionLocator\uff1a\u7528\u4e8e\u4ece\u914d\u7f6e\u6587\u4ef6\uff08yml/properties\uff09\u4e2d\u8bfb\u53d6\u8def\u7531\u914d\u7f6e\u4fe1\u606f\uff01"}),"\n",(0,r.jsx)(n.li,{children:"RouteDefinitionLocator\uff1a\u628a RouteDefinition \u8f6c\u5316\u4e3a Route"}),"\n",(0,r.jsx)(n.li,{children:"RoutePredicateHandlerMapping\uff1a\u7c7b\u4f3c\u4e8e mvc \u7684HandlerMapping\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u662f Gateway\u5b9e\u73b0\u7684\u3002\u7528\u4e8e\u5339\u914d\u5bf9\u5e94\u7684\u8bf7\u6c42route"}),"\n",(0,r.jsx)(n.li,{children:"GatewayProperties\uff1ayml\u914d\u7f6e\u4fe1\u606f\u5c01\u88c5\u5728 GatewayProperties \u5bf9\u8c61\u4e2d"}),"\n",(0,r.jsx)(n.li,{children:"AfterRoutePredicateFactory\uff1a\u5404\u79cd\u8def\u7531\u65ad\u8a00\u5de5\u5382\uff0c\u6b63\u662f\u8fd9\u4e9b\u65ad\u8a00\u5de5\u5382\u5728\u542f\u52a8\u65f6\u5df2\u7ecf\u751f\u6210\u5bf9\u5e94\u7684bean\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u5728 yml \u4e2d\u914d\u7f6e\u4e00\u4e0b\uff0c\u5373\u53ef\u751f\u6548"}),"\n",(0,r.jsx)(n.li,{children:"RetryGatewayFilterFactory\uff1a\u5404\u79cd Gateway \u8fc7\u6ee4\u5668\uff0c\u6b63\u662f\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u5728\u542f\u52a8\u65f6\u5df2\u7ecf\u751f\u6210\u5bf9\u5e94\u7684bean\uff0c\u6211\u4eec\u624d\u53ef\u4ee5\u5728 yml \u4e2d\u914d\u7f6e\u4e00\u4e0b\uff0c\u5373\u53ef\u751f\u6548"}),"\n",(0,r.jsx)(n.li,{children:"GlobalFilter\u5b9e\u73b0\u7c7b\uff1a\u5168\u5c40\u8fc7\u6ee4\u5668"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"3.HttpHandlerAutoConfiguration\u548cWebFluxAutoConfiguration\u914d\u7f6e\u7c7b\uff0c\u5728GatewayAutoConfiguration\u4e4b\u540e\u5b9e\u4f8b\u5316\uff0c\u5206\u522b\u5b9e\u4f8b\u5316\u4e86HttpHandler\u548cWebFluxConfigBean"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\u7b2c2\u7ae0 \u6267\u884c\u6d41\u7a0b"}),"\n\u4e0a\u4e00\u6587\u4e2d\u8bb2\u5230Hystrix\u7684\u539f\u7406\uff0c\u5728Hystrix\u4e2d\u6838\u5fc3\u4e1a\u52a1\u903b\u8f91\u90fd\u662f\u901a\u8fc7\u54cd\u5e94\u5f0f\u7f16\u7a0b\u5b8c\u6210\u7684\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5728Gateway\u4e2d\u4e5f\u90fd\u662f\u57fa\u4e8e\u540c\u6837\u7684\u7f16\u7a0b\u98ce\u683c\u3002\u540c\u6837\u7684\uff0cGateway\u7684\u6d41\u7a0b\u540cSpringMVC\u6d41\u7a0b\u4e5f\u975e\u5e38\u76f8\u4f3c\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u5f53\u524d\u7aef\u6709\u8bf7\u6c42\u8fdb\u6765\u7684\u65f6\u5019\uff0c\u5927\u4f53\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u9996\u5148\u88abDispatcherHandler\u7ed9\u6355\u83b7\u62e6\u622a\uff0c\u7136\u540e\u5bf9\u8bf7\u6c42\u7684URI\u8fdb\u884c\u89e3\u6790"}),"\n",(0,r.jsx)(n.li,{children:"\u7136\u540e\u6839\u636eURI\u53bb\u8c03\u7528HandlerMapping\uff0c\u83b7\u53d6\u771f\u6b63\u8981\u6267\u884c\u7684WebHandler"}),"\n",(0,r.jsx)(n.li,{children:"\u7136\u540e\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u9002\u914d\u5668HandlerAdapter\u6267\u884c"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884cWebHandler\n\u5f53\u8bf7\u6c42gateway\u670d\u52a1\u65f6\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u4f1a\u8fdb\u5165\u5230DispatcherHandler\u4e2d\u7684handle\u65b9\u6cd5\uff0c\u4e0b\u9762\u6211\u4eec\u4e00\u8d77\u770b\u770b\u8fd9\u4e2a\u65b9\u6cd5"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@Override\npublic Mono<Void> handle(ServerWebExchange exchange) {\n    if (this.handlerMappings == null) {\n        return createNotFoundError();\n    }\n    //\u8fd9\u91cc\u5c31\u662fwebFlux\u7684\u54cd\u5e94\u5f0f\u7f16\u7a0b\n    return Flux\n        // 1.\u8fd9\u91cc\u5c31\u662f\u904d\u5386\u6240\u6709\u7684 handlerMapping\n        .fromIterable(this.handlerMappings)\n        // 2.\u83b7\u53d6\u5bf9\u5e94\u7684handlerMapping \uff0c\u6bd4\u5982\u5e38\u7528\u7684 RequestMappingHandlerMapping\u3001RoutePredicateHandlerMapping\n        .concatMap(mapping -> mapping.getHandler(exchange))\n        .next()\n        .switchIfEmpty(createNotFoundError())\n        // 3.\u83b7\u53d6\u5bf9\u5e94\u7684\u9002\u914d\u5668\uff0c\u8c03\u7528\u5bf9\u5e94\u7684\u5904\u7406\u5668\n        .flatMap(handler -> invokeHandler(exchange, handler))\n        // 4.\u8fd4\u56de\u5904\u7406\u7ed3\u679c\n        .flatMap(result -> handleResult(exchange, result));\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.1 getHandler"}),"\n\u6211\u4eec\u5148\u6765\u770b\u770bgetHandler\u65b9\u6cd5\uff0c\u5b83\u5c31\u662fGateway\u7684\u6838\u5fc3\u903b\u8f91\u6240\u5728\uff0c\u518dgetHandler\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684HandlerMapping\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u4e0b\u9762\u662f\nAbstractHandlerMapping.getHandler\u7684\u6e90\u7801"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Override\npublic Mono<Object> getHandler(ServerWebExchange exchange) {\n    //\u8fd9\u4e00\u6b65\u4f1a\u83b7\u53d6\u8def\u7531\u7684\u5b9e\u73b0\u7c7b\uff0c\u4f1a\u8fdb\u5165\u5230RoutePredicateHandlerMapping\n    return getHandlerInternal(exchange).map(handler -> {\n        if (logger.isDebugEnabled()) {\n            logger.debug(exchange.getLogPrefix() + "Mapped to " + handler);\n        }\n        ServerHttpRequest request = exchange.getRequest();\n        if (hasCorsConfigurationSource(handler) || CorsUtils.isPreFlightRequest(request)) {\n            CorsConfiguration config = (this.corsConfigurationSource != null ? this.corsConfigurationSource.getCorsConfiguration(exchange) : null);\n            CorsConfiguration handlerConfig = getCorsConfiguration(handler, exchange);\n            config = (config != null ? config.combine(handlerConfig) : handlerConfig);\n            if (!this.corsProcessor.process(config, exchange) || CorsUtils.isPreFlightRequest(request)) {\n                return REQUEST_HANDLED_HANDLER;\n            }\n        }\n        return handler;\n    });\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Override\nprotected Mono<?> getHandlerInternal(ServerWebExchange exchange) {\n    // don\'t handle requests on management port if set and different than server port\n    if (this.managementPortType == DIFFERENT && this.managementPort != null\n        && exchange.getRequest().getURI().getPort() == this.managementPort) {\n        return Mono.empty();\n    }\n    exchange.getAttributes().put(GATEWAY_HANDLER_MAPPER_ATTR, getSimpleName());\n    //\u5bfb\u627e\u5e76\u5339\u914d\u8def\u7531\n    return lookupRoute(exchange)\n        // .log("route-predicate-handler-mapping", Level.FINER) //name this\n        .flatMap((Function<Route, Mono<?>>) r -> {\n            //\u79fb\u9664\u4e0a\u4e0b\u6587\u4e2d\u65e7\u7684\u5c5e\u6027\n            exchange.getAttributes().remove(GATEWAY_PREDICATE_ROUTE_ATTR);\n            if (logger.isDebugEnabled()) {\n                logger.debug(\n                    "Mapping [" + getExchangeDesc(exchange) + "] to " + r);\n            }\n            //\u628a\u8be5\u8def\u7531\u4e0e\u4e0a\u4e0b\u6587\u7ed1\u5b9a\uff0c\u540e\u7eed\u8d1f\u8f7d\u5747\u8861\u4f1a\u7528\n            exchange.getAttributes().put(GATEWAY_ROUTE_ATTR, r);\n            //\u8fd4\u56de webHandler\n            return Mono.just(webHandler);\n        }).switchIfEmpty(Mono.empty().then(Mono.fromRunnable(() -> {\n        exchange.getAttributes().remove(GATEWAY_PREDICATE_ROUTE_ATTR);\n        if (logger.isTraceEnabled()) {\n            logger.trace("No RouteDefinition found for ["\n                         + getExchangeDesc(exchange) + "]");\n        }\n    })));\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5176\u4e2dlookupRoute\u65b9\u6cd5\u4f1a\u627e\u5230yml\u4e2d\u914d\u7f6e\u7684\u6240\u6709\u7684\u8def\u7531\u65ad\u8a00\u5de5\u5382\uff08Before\u3001After\u3001Path\u7b49\u7b49\uff09\uff0c\u5e76\u6267\u884capply\u65b9\u6cd5\uff0c\u8fdb\u884c\u8def\u7531\u5339\u914d\uff0c\u5224\u65ad\u662f\u5426\u5141\u8bb8\u8bf7\u6c42\u901a\u8fc7\uff01\u6267\u884c\u987a\u5e8f\u7531springboot\u81ea\u52a8\u914d\u7f6e\u65f6\u81ea\u5df1\u5236\u5b9a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'protected Mono<Route> lookupRoute(ServerWebExchange exchange) {\n    // getRoutes \u83b7\u53d6\u6240\u6709\u7684\u65ad\u8a00\u5de5\u5382\n    return this.routeLocator.getRoutes()\n        .concatMap(route -> Mono.just(route).filterWhen(r -> {\n            exchange.getAttributes().put(GATEWAY_PREDICATE_ROUTE_ATTR, r.getId());\n            // \u5148\u83b7\u53d6Route\u5185\u90e8\u7684predicate\u5c5e\u6027\n            //\u7136\u540e\u8c03\u7528apply\u65b9\u6cd5 \u6267\u884c\u65ad\u8a00\uff01\u5224\u65ad\u8bf7\u6c42\u662f\u5426\u901a\u8fc7\n            return r.getPredicate().apply(exchange);\n        }).doOnError(e -> logger.error(\n                       "Error applying predicate for route: " + route.getId(),\n                       e))\n                   .onErrorResume(e -> Mono.empty()))\n        .next()\n        .map(route -> {\n            if (logger.isDebugEnabled()) {\n                logger.debug("Route matched: " + route.getId());\n            }\n            validateRoute(route, exchange);\n            return route;\n        });\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u5176\u4e2dgetRoutes()\u65b9\u6cd5\u5c31\u662f\u901a\u8fc7\nRouteDefinitionRouteLocator\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u6240\u6709\u8def\u7531\u7684\uff0c\u7136\u540e\u628a\u627e\u5230\u7684\u8def\u7531\u8f6c\u6362\u6210Route"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@Override\npublic Flux<Route> getRoutes() {\n    // getRouteDefinitions() \u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u6240\u6709\u8def\u7531\n    Flux<Route> routes = this.routeDefinitionLocator.getRouteDefinitions()\n        // convertToRoute()\uff1a\u628a\u627e\u5230\u7684\u8def\u7531\u8f6c\u6362\u6210Route\n        .map(this::convertToRoute);\n    ...\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"public class Route implements Ordered {\n\tprivate final String id;\n\tprivate final URI uri;\n\tprivate final int order;\n\tprivate final AsyncPredicate<ServerWebExchange> predicate;\n\tprivate final List<GatewayFilter> gatewayFilters;\n\tprivate final Map<String, Object> metadata;\t\n    ...\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"2.2 invokeHandler"}),"\nGateway\u7531\u4e8e\u5728\u4e0a\u4e00\u6b65\u5339\u914d\u8def\u7531\u540e\u8fd4\u56de\u7684\u662fwebHandler\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u627e\u5230\u5bf9\u5e94\u7684HandlerAdaptor\uff0c\u8fdb\u5165\u83b7\u53d6\u5bf9\u5e94\u7684\u9002\u914d\u5668\u65b9\u6cd5 invokeHandler(exchange, handler)\u4e2d"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'private Mono<HandlerResult> invokeHandler(ServerWebExchange exchange, Object handler) {\n    if (this.handlerAdapters != null) {\n        //\u627e\u5230\u6240\u6709\u7684HandlerAdapter\u53bb\u5339\u914dWebFlux\u7c7b\u578b\n        for (HandlerAdapter handlerAdapter : this.handlerAdapters) {\n            if (handlerAdapter.supports(handler)) {\n                return handlerAdapter.handle(exchange, handler);\n            }\n        }\n    }\n    return Mono.error(new IllegalStateException("No HandlerAdapter: " + handler));\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"SimpleHandlerAdapter \u4e2d\u7684handle\u65b9\u6cd5\u5982\u4e0b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"@Override\npublic Mono<HandlerResult> handle(ServerWebExchange exchange, Object handler) {\n    //\u5904\u7406WebHandler \u7c7b\u578b\n    WebHandler webHandler = (WebHandler) handler;\n    Mono<Void> mono = webHandler.handle(exchange);\n    return mono.then(Mono.empty());\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5176\u4e2dwebHandler.handle\u65b9\u6cd5\u5c31\u662f\u5904\u7406\u6240\u6709\u8fc7\u6ee4\u5668\u94fe\u7684\u65b9\u6cd5\uff0c\u8be5\u8fc7\u6ee4\u5668\u94fe\u5305\u62ecglobalFilters\u548cgatewayFilters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'@Override\npublic Mono<Void> handle(ServerWebExchange exchange) {\n    // 1\\. \u6839\u636e\u8def\u7531\u4e0e\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u5173\u7cfb\uff0c\u83b7\u53d6\u5bf9\u5e94\u7684\u8def\u7531Route\n    Route route = exchange.getRequiredAttribute(GATEWAY_ROUTE_ATTR);\n    List<GatewayFilter> gatewayFilters = route.getFilters();\n    // 2\\. \u6536\u96c6\u6240\u6709\u7684 globalFilters \u5e76\u653e\u5165List<GatewayFilter>\n    //\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u4e86\u9002\u914d\u5668\u6a21\u5f0f\n    List<GatewayFilter> combined = new ArrayList<>(this.globalFilters);\n    // 3\\. \u628a gatewayFilters \u4e5f\u653e\u5165List<GatewayFilter>\uff0c\u5f62\u6210\u4e00\u6761\u8fc7\u6ee4\u5668\u7acb\u6848\n    combined.addAll(gatewayFilters);\n    // 4\\. \u6839\u636eorder\u6392\u5e8f\n    AnnotationAwareOrderComparator.sort(combined);\n    if (logger.isDebugEnabled()) {\n        logger.debug("Sorted gatewayFilterFactories: " + combined);\n    }\n    // 5\\. \u6267\u884c\u8fc7\u6ee4\u5668\u94fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8fc7\u6ee4\u5668\u65b9\u6cd5\uff01\n    return new DefaultGatewayFilterChain(combined).filter(exchange);\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u6ce8\u610f\uff1a\u5728\u7ec4\u88c5\u8fc7\u6ee4\u5668\u94fe\u7684\u65f6\u5019\uff0c\u662f\u628aglobalFilters\u548cgatewayFilters\u4e24\u79cd\u8fc7\u6ee4\u5668\u90fd\u653e\u8fdb\u4e86",(0,r.jsx)(n.code,{children:"List<GatewayFilter>"}),"\u4e2d\uff0c\u8fd9\u662f\u600e\u4e48\u505a\u7684\u5462\uff1f"]}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u5176\u5b9e\u7528\u5230\u4e86\u4e00\u79cd \u9002\u914d\u5668 \u7684\u8bbe\u8ba1\u6a21\u5f0f\uff01"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5982\u679c\u653e\u5165\u7684\u662fglobalFilters\uff0c\u4f1a\u5148\u628aglobalFilters\u8f6c\u5316\u6210GatewayFilterAdapter\u3002 GatewayFilterAdapter\u5728\u5185\u90e8\u96c6\u6210\u4e86GlobalFilter\uff0c\u540c\u65f6\u4e5f\u5b9e\u73b0\u4e86GatewayFilter\uff0c\u4f7f globalFilters\u548cgatewayFilters\u5728 \u9002\u914d\u5668 \u7c7bGatewayFilterAdapter\u4e2d\u5171\u5b58\uff01"}),"\n",(0,r.jsxs)(n.li,{children:["\u5982\u679c\u653e\u5165\u7684\u662fgatewayFilters\uff0c\u76f4\u63a5\u653e\u5165\u5373\u53ef\uff01\n",(0,r.jsx)(n.strong,{children:"\u7b2c3\u7ae0 \u8d1f\u8f7d\u5747\u8861\u6d41\u7a0b"}),"\nGateway\u7684\u8d1f\u8f7d\u5747\u8861\u53ea\u9700\u8981\u5728yml\u4e2d\u914d\u7f6e uri: lb://user\u5373\u53ef\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\uff0c\u5e95\u5c42\u662f\u7531\u5168\u5c40\u8fc7\u6ee4\u5668LoadBalancerClientFilter\u7684filter\u65b9\u6cd5\u53bb\u505a\u7684\uff01"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u4ee5\u8ba2\u5355\u670d\u52a1\u7684\n",(0,r.jsx)(n.a,{href:"http://localhost:9527/get/3%E4%B8%BA%E4%BE%8B%EF%BC%819527%E4%B8%BA%E7%BD%91%E5%85%B3Gateway%E7%9A%84%E7%AB%AF%E5%8F%A3",children:"http://localhost:9527/get/3\u4e3a\u4f8b\uff019527\u4e3a\u7f51\u5173Gateway\u7684\u7aef\u53e3"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n    // 1\\. \u6839\u636e\u8def\u7531\u4e0e\u4e0a\u4e0b\u6587\u7ed1\u5b9a\u5173\u7cfb\n    // \u83b7\u53d6\u539f\u59cb\u7684url\uff1ahttp://localhost:9527/get/3\n    URI url = exchange.getAttribute(GATEWAY_REQUEST_URL_ATTR);\n    String schemePrefix = exchange.getAttribute(GATEWAY_SCHEME_PREFIX_ATTR);\n    if (url == null\n        || (!"lb".equals(url.getScheme()) && !"lb".equals(schemePrefix))) {\n        return chain.filter(exchange);\n    }\n    addOriginalRequestUrl(exchange, url);\n    if (log.isTraceEnabled()) {\n        log.trace("LoadBalancerClientFilter url before: " + url);\n    }\n    // 2\\. \u901a\u8fc7ribbon\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff0c\u6839\u636e\u670d\u52a1\u540d\u53bbnacos\u6216\u8005Eureka\u9009\u62e9\u4e00\u4e2a\u5b9e\u4f8b\uff01\n    // \u8be5\u5b9e\u4f8b\u5c31\u6709user\u670d\u52a1\u771f\u6b63\u7684 url \u5730\u5740\uff1ahttp://localhost:8080/get/3\n    final ServiceInstance instance = choose(exchange);\n    if (instance == null) {\n        throw NotFoundException.create(properties.isUse404(),\n                                       "Unable to find instance for " + url.getHost());\n    }\n    // 3\\. \u62ff\u5230\u539f\u751f\u7684 uri \uff1ahttp://localhost:9527/get/3\n    URI uri = exchange.getRequest().getURI();\n    String overrideScheme = instance.isSecure() ? "https" : "http";\n    if (schemePrefix != null) {\n        overrideScheme = url.getScheme();\n    }\n    // 4\\. \u62ff\u670d\u52a1\u5b9e\u4f8binstance\u7684uri\u66ff\u6362\u539f\u751f\u7684uri\u5730\u5740 \u5f97\u5230 \u65b0\u7684url\n    // \u65b0\u7684url: http://localhost:8080/get/3\n    URI requestUrl = loadBalancer.reconstructURI(\n        new DelegatingServiceInstance(instance, overrideScheme), uri);\n    if (log.isTraceEnabled()) {\n        log.trace("LoadBalancerClientFilter url chosen: " + requestUrl);\n    }\n    // 5\\. \u518d\u6b21\u8bb0\u5f55\u4e0a\u4e0b\u6587\u5173\u7cfb\n    exchange.getAttributes().put(GATEWAY_REQUEST_URL_ATTR, requestUrl);\n    // 6\\. \u6267\u884c\u8fc7\u6ee4\u5668\u94fe\u4e2d\u7684\u5176\u4ed6\u8fc7\u6ee4\u8bf7\u6c42\n    return chain.filter(exchange);\n}\n'})}),"\n",(0,r.jsx)(n.h1,{id:"\u53c2\u8003\u6587\u7ae0",children:"\u53c2\u8003\u6587\u7ae0"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF",children:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF"}),"\n",(0,r.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA",children:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA"}),"\n",(0,r.jsx)(n.a,{href:"https://juejin.cn/post/6931922457741770760",children:"https://juejin.cn/post/6931922457741770760"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/D2C-Cai/herring",children:"https://github.com/D2C-Cai/herring"}),"\n",(0,r.jsx)(n.a,{href:"http://c.biancheng.net/springcloud",children:"http://c.biancheng.net/springcloud"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/macrozheng/springcloud-learning",children:"https://github.com/macrozheng/springcloud-learning"})]})]})}function g(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},88672:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var r=t(50959);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);