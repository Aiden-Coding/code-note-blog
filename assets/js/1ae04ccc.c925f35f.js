"use strict";(self.webpackChunkcode_note_blog=self.webpackChunkcode_note_blog||[]).push([[3937],{54469:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(11527),i=t(88672);const o={},a="\u53c2\u8003\u6587\u7ae0",l={id:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790",title:"SpringCloudHystrix\u6e90\u7801\u5206\u6790",description:"\u5b66\u4e60\u76ee\u6807",source:"@site/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790.md",sourceDirName:"Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790",slug:"/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudHystrix\u6e90\u7801\u5206\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"spring",previous:{title:"SpringCloudGateway\u6e90\u7801\u5206\u6790",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudGateway\u6e90\u7801\u5206\u6790"},next:{title:"Spring Cloud LoadBalancer",permalink:"/code-note-blog/docs/Spring\u5168\u5bb6\u6876/SpringCloud\u6e90\u7801\u5206\u6790/SpringCloudLoadBalancer\u6e90\u7801\u5206\u6790"}},s={},c=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"\u5b66\u4e60\u76ee\u6807"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u624b\u5199Mini\u7248\u7684Hystrix"}),"\n",(0,r.jsx)(n.li,{children:"RxJava\u77e5\u8bc6\u68b3\u7406"}),"\n",(0,r.jsx)(n.li,{children:"Hystrix\u7684\u6838\u5fc3\u6d41\u7a0b\u5206\u6790"}),"\n",(0,r.jsx)(n.li,{children:"\u6e90\u7801\u9a8c\u8bc1\n\u7b2c1\u7ae0 \u624b\u5199Mini\u7248\n\u4e0a\u6587\u4e2d\u5df2\u7ecf\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u8fc7\u4e86Hystrix\u7684\u6838\u5fc3\u529f\u80fd\u548c\u4f7f\u7528\u4e86\uff0c\u5b83\u65e0\u975e\u5c31\u662f\u63d0\u4f9b\u4e86\u7194\u65ad\u3001\u964d\u7ea7\u3001\u9694\u79bb\u7b49\u529f\u80fd\uff0c\u5176\u4e2d\u7194\u65ad\u548c\u9694\u79bb\u662f\u76ee\u7684\uff0c\u964d\u7ea7\u662f\u7ed3\u679c\u3002\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u5176\u5b9e\u6700\u6838\u5fc3\u7684\u6709\u4e09\u4e2a\u6ce8\u89e3\uff1a@EnableHystrix\u3001@HystrixCommand\u548c@HystrixCollapser\u3002\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3 @HystrixCommand\u3001\u6216\u8005\u7ee7\u627f HystrixCommand \u6765\u5b9e\u73b0\u964d\u7ea7\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8bf7\u6c42\u5408\u5e76\u7b49\u64cd\u4f5c\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u6b63\u5f0f\u8bb2\u89e3\u539f\u7406\u4e4b\u524d\uff0c\u6211\u4eec\u9996\u5148\u8981\u660e\u786e\u4e00\u4e2a\u70b9\uff0c\u5f53\u91c7\u7528 @HystrixCommand \u6ce8\u89e3\u6765\u5b9e\u73b0\u670d\u52a1\u964d\u7ea7\uff0c\u5728Hystrix \u7684\u5185\u90e8\u662f\u91c7\u7528AOP\u7684\u65b9\u5f0f\u8fdb\u884c\u62e6\u622a\u5904\u7406\u8bf7\u6c42\u7684\uff0c\u8fd9\u5757\u5185\u5bb9\uff0c\u540e\u9762\u4e5f\u4f1a\u8be6\u7ec6\u5206\u6790\u3002\u6211\u4eec\u8fd9\u91cc\u5c31\u5148\u6765\u5b9e\u73b0\u4e00\u4e0b\u7b80\u6613\u7248\u7684 Hystrix \u6765\u4f53\u4f1a\u4e00\u4e0b\uff0c\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u6b65\u9aa4"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5b9a\u4e49\u81ea\u5df1\u7684@HystrixCommand \u6ce8\u89e3\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5b9e\u73b0\u62e6\u622a\u8bf7\u6c42\u7684\u5904\u7406\u903b\u8f91\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u6d4b\u8bd5\u8c03\u7528\u3002\n1.\u81ea\u5b9a\u4e49\u6ce8\u89e3"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    @Target({ElementType.METHOD})\n    @Retention(RetentionPolicy.RUNTIME)\n    @Documented\n    public @interface MyHystrixCommand {\n        //\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\n        int timeout() default 1000;\n        //\u56de\u9000\u65b9\u6cd5\n        String fallback() default "";\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"2.\u81ea\u5b9a\u4e49\u5207\u9762\u7c7b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    @Aspect  //\u5f00\u542fAspect\u652f\u6301\u5e76\u4e14\u6807\u8bb0\u4e3a\u4e00\u4e2a\u5207\u9762\u7c7b\n    @Component\n    public class MyHystrixCommandAspect {\n        ExecutorService executorService= Executors.newFixedThreadPool(10);\n    \n        //\u5b9a\u4e49\u5207\u70b9\n        @Pointcut(value = "@annotation(MyHystrixCommand)")\n        public void pointCut(){\n    \n        }\n        //\u5728\u5207\u70b9\u65b9\u6cd5\u5916\u73af\u7ed5\u6267\u884c  @Around\u76f8\u5f53\u4e8e@Before\u548c@AfterReturning\u529f\u80fd\u7684\u603b\u548c\n        @Around(value = "pointCut()&&@annotation(hystrixCommand)")\n        public Object doPointCut(ProceedingJoinPoint joinPoint, MyHystrixCommand hystrixCommand) throws Exception {\n            int timeout=hystrixCommand.timeout();\n            Future future=executorService.submit(()->{\n                try {\n                    //\u6267\u884cproceed\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u8ba9\u76ee\u6807\u65b9\u6cd5\u6267\u884c\n                    return joinPoint.proceed();\n                } catch (Throwable throwable) {\n                    throwable.printStackTrace();\n                }\n                return null;\n            });\n            Object rs;\n            try {\n                //\u901a\u8fc7get\u7684\u5f02\u6b65\u7b49\u5f85\u6765\u5b9e\u73b0\u8d85\u65f6\n                rs=future.get(timeout, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException | ExecutionException | TimeoutException e) {\n                future.cancel(true);\n                if(StringUtils.isBlank(hystrixCommand.fallback())){\n                    throw new Exception("fallback is null");\n                }\n                //\u8c03\u7528fallback\n                rs=invokeFallback(joinPoint,hystrixCommand.fallback());\n            }\n            return rs;\n        }\n        private Object invokeFallback(ProceedingJoinPoint joinPoint,String fallback) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n            //\u83b7\u53d6\u88ab\u4ee3\u7406\u7684\u65b9\u6cd5\u53c2\u6570\u548cMethod\n            MethodSignature signature=(MethodSignature)joinPoint.getSignature(); //\u83b7\u53d6\u4ee3\u7406\u7c7b\u548c\u88ab\u4ee3\u7406\u7c7b\u7684\u4fe1\u606f\n            Method method=signature.getMethod();\n            Class<?>[] parameterTypes=method.getParameterTypes();\n            //\u5f97\u5230\u56de\u8c03\u65b9\u6cd5\n            try {\n                Method fallbackMethod=joinPoint.getTarget().getClass().getMethod(fallback,parameterTypes);\n                method.setAccessible(true);\n                //\u901a\u8fc7\u53cd\u5c04\u56de\u8c03\n                return fallbackMethod.invoke(joinPoint.getTarget(),joinPoint.getArgs());\n            } catch (Exception e) {\n                throw e;\n            }\n        }\n    }\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"3.\u81ea\u5b9a\u4e49\u6d4b\u8bd5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n\n    @RestController\n    public class MyHystrixController {\n        @Autowired\n        OrderServiceClient orderServiceClient;\n        @MyHystrixCommand(fallback = "fallback",timeout = 2000)\n        @GetMapping("/myhystrix/get/{num}")\n        public String get(@PathVariable("num") int num){\n            return orderServiceClient.orderLists(num);\n        }\n        public String fallback(int num){\n            return "\u81ea\u5b9a\u4e49\u6ce8\u89e3\u65b9\u6cd5\u88ab\u964d\u7ea7";\n        }\n    }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u5f53\u8bf7\u6c42",(0,r.jsx)(n.a,{href:"http://localhost:8080/myhystrix/get/1%E6%97%B6%E4%BC%9A%E8%A7%A6%E5%8F%91%E9%99%8D%E7%BA%A7%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%8C%E5%BD%93num=1%E6%97%B6%E4%BC%9A%E4%BC%91%E7%9C%A03s%E3%80%82",children:"http://localhost:8080/myhystrix/get/1\u65f6\u4f1a\u89e6\u53d1\u964d\u7ea7\uff0c\u56e0\u4e3a\u5728\u670d\u52a1\u7aef\uff0c\u5f53num=1\u65f6\u4f1a\u4f11\u77203s\u3002"})]}),"\n",(0,r.jsx)(n.p,{children:"OK\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u6613\u7248\u7684HystrixCommand\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u662f\u5b9e\u73b0\u4e86Hystrix\u7684\u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6ce8\u89e3\u548c\u5207\u9762\uff0c\u4f46\u662f\u5b83\u7684\u5e95\u5c42\u903b\u8f91\u8fdc\u8fdc\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff0c\u5728\u8bb2\u6e90\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u6765\u634b\u4e00\u634bRxJava\u662f\u4ec0\u4e48\uff0c\u56e0\u4e3aHystrix\u5e95\u5c42\u903b\u8f91\u662f\u57fa\u4e8e\u54cd\u5e94\u5f0f\u7f16\u7a0b\u5b9e\u73b0\u7684\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u7b2c2\u7ae0 RxJava\u4f53\u9a8c\n2.1 RxJava\u6982\u8ff0\nRxJava \u662f\u4e00\u79cd\u54cd\u5e94\u5f0f\u7f16\u7a0b\uff0c\u6765\u521b\u5efa\u57fa\u4e8e\u4e8b\u4ef6\u7684\u5f02\u6b65\u64cd\u4f5c\u5e93\u3002\u57fa\u4e8e\u4e8b\u4ef6\u6d41\u7684\u94fe\u5f0f\u8c03\u7528\u3001\u903b\u8f91\u6e05\u6670\u7b80\u6d01\u3002"}),"\n",(0,r.jsx)(n.p,{children:"RxJava\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u5bf9\u6bd4"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u4f20\u7edf\u89c2\u5bdf\u8005\u662f\u4e00\u4e2a\u88ab\u89c2\u5bdf\u8005\u591a\u8fc7\u89c2\u5bdf\u8005\uff0c\u5f53\u88ab\u89c2\u5bdf\u8005\u53d1\u751f\u6539\u53d8\u65f6\u5019\u53ca\u65f6\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005"}),"\n",(0,r.jsx)(n.li,{children:"RxJava\u662f\u4e00\u4e2a\u89c2\u5bdf\u8005\u591a\u4e2a\u88ab\u89c2\u5bdf\u8005\uff0c\u88ab\u89c2\u5bdf\u8005\u50cf\u94fe\u6761\u4e00\u6837\u4e32\u8d77\u6765\uff0c\u6570\u636e\u5728\u88ab\u89c2\u5bdf\u8005\u4e4b\u95f4\u671d\u7740\u4e00\u4e2a\u65b9\u5411\u4f20\u9012\uff0c\u76f4\u5230\u4f20\u9012\u7ed9\u89c2\u5bdf\u8005 \u3002\n\u5176\u5b9e\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u5728RxJava\u4e2d\u5b58\u57282\u79cd\u6982\u5ff5\uff0c\u4e00\u79cd\u662f\u88ab\u89c2\u5bdf\u8005\uff0c\u4e00\u79cd\u662f\u89c2\u5bdf\u8005\uff0c\u5f53\u591a\u4e2a\u88ab\u89c2\u5bdf\u8005\u8ba2\u9605\u4e86\u540c\u4e00\u4e2a\u89c2\u5bdf\u8005\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u968f\u7740\u88ab\u89c2\u5bdf\u8005\u5b8c\u6210\u67d0\u4e2a\u4e8b\u4ef6\u7684\u65f6\u5019\u5c31\u4f1a\u53bb\u56de\u8c03\u89c2\u5bdf\u8005\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"2.2 \u89c2\u5bdf\u8005"}),"\n",(0,r.jsx)(n.p,{children:"Observer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n    Observer observer = new Observer() {\n        @Override\n        public void onCompleted() {\n            System.out.println("\u5f53\u88ab\u89c2\u5bdf\u8005\u751f\u4ea7Complete\u4e8b\u4ef6\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5");\n        }\n        @Override\n        public void onError(Throwable throwable) {\n            System.out.println("\u5bf9Error\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94");\n        }\n        @Override\n        public void onNext(Object o) {\n            System.out.println("\u5bf9Next\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94:" + o);\n        }\n    };\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    //Subscriber\u7c7b = RxJava \u5185\u7f6e\u7684\u4e00\u4e2a\u5b9e\u73b0\u4e86 Observer \u7684\u62bd\u8c61\u7c7b\uff0c\u5bf9 Observer \u63a5\u53e3\u8fdb\u884c\u4e86\u6269\u5c55\n    Subscriber subscriber = new Subscriber() {\n        @Override\n        public void onCompleted() {\n            System.out.println("\u5f53\u88ab\u89c2\u5bdf\u8005\u751f\u4ea7Complete\u4e8b\u4ef6\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5");\n        }\n        @Override\n        public void onError(Throwable throwable) {\n            System.out.println("\u5bf9Error\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94");\n        }\n        @Override\n        public void onNext(Object o) {\n            System.out.println("\u5bf9Next\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94:" + o);\n        }\n    };\n'})}),"\n",(0,r.jsx)(n.p,{children:"Subscriber \u62bd\u8c61\u7c7b\u4e0eObserver \u63a5\u53e3\u7684\u533a\u522b"}),"\n",(0,r.jsx)(n.p,{children:"\u4e8c\u8005\u57fa\u672c\u4f7f\u7528\u65b9\u5f0f\u4e00\u81f4\uff08\u5728RxJava\u7684subscribe\u8fc7\u7a0b\u4e2d\uff0cObserver\u4f1a\u5148\u88ab\u8f6c\u6362\u6210Subscriber\u518d\u4f7f\u7528\uff09\nSubscriber\u62bd\u8c61\u7c7b\u5bf9 Observer \u63a5\u53e3\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u65b0\u589e\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"onStart()\uff1a\u5728\u8fd8\u672a\u54cd\u5e94\u4e8b\u4ef6\u524d\u8c03\u7528\uff0c\u7528\u4e8e\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u4ed6\u662f\u5728subscribe \u6240\u5728\u7684\u7ebf\u7a0b\u8c03\u7528\uff0c\u4e0d\u80fd\u5207\u6362\u7ebf\u7a0b\uff0c\u6240\u4ee5\u4e0d\u80fd\u8fdb\u884c\u754c\u9762UI\u66f4\u65b0\u6bd4\u5982\u5f39\u6846\u8fd9\u4e9b\u3002"}),"\n",(0,r.jsx)(n.li,{children:"unsubscribe()\uff1a\u7528\u4e8e\u53d6\u6d88\u8ba2\u9605\u3002\u5728\u8be5\u65b9\u6cd5\u88ab\u8c03\u7528\u540e\uff0c\u89c2\u5bdf\u8005\u5c06\u4e0d\u518d\u63a5\u6536\u54cd\u5e94\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5728onStop\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u8c03\u7528\u6b64\u65b9\u6cd5\u7ed3\u675f\u8ba2\u9605\u3002\u8c03\u7528\u8be5\u65b9\u6cd5\u524d\uff0c\u5148\u4f7f\u7528 isUnsubscribed() \u5224\u65ad\u72b6\u6001\uff0c\u786e\u5b9a\u88ab\u89c2\u5bdf\u8005Observable\u662f\u5426\u8fd8\u6301\u6709\u89c2\u5bdf\u8005Subscriber\u7684\u5f15\u7528\u3002\n2.3 \u88ab\u89c2\u5bdf\u8005\nRxJava \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u7528\u4e8e \u521b\u5efa\u88ab\u89c2\u5bdf\u8005\u5bf9\u8c61Observable\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    // \u65b9\u6cd51\uff1ajust(T...)\uff1a\u76f4\u63a5\u5c06\u4f20\u5165\u7684\u53c2\u6570\u4f9d\u6b21\u53d1\u9001\u51fa\u6765\n    Observable observable = Observable.just("A", "B", "C");\n    // \u5c06\u4f1a\u4f9d\u6b21\u8c03\u7528\uff1a\n    // onNext("A");\n    // onNext("B");\n    // onNext("C");\n    // onCompleted();\n    // \u65b9\u6cd52\uff1afromArray(T[]) / from(Iterable<? extends T>) : \u5c06\u4f20\u5165\u7684\u6570\u7ec4 / Iterable \u62c6\u5206\u6210\u5177\u4f53\u5bf9\u8c61\u540e\uff0c\u4f9d\u6b21\u53d1\u9001\u51fa\u6765\n    String[] words = {"A", "B", "C"};\n    Observable observable = Observable.fromArray(words);\n    // \u5c06\u4f1a\u4f9d\u6b21\u8c03\u7528\uff1a\n    // onNext("A");\n    // onNext("B");\n    // onNext("C");\n    // onCompleted();\n'})}),"\n",(0,r.jsx)(n.p,{children:"2.4 \u8ba2\u9605"}),"\n",(0,r.jsx)(n.p,{children:"observable.subscribe(observer); //\u5efa\u7acb\u8ba2\u9605\u5173\u7cfb"}),"\n",(0,r.jsx)(n.p,{children:"2.5 \u6848\u4f8b"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    public class RxJavaDemo {\n        // ReactiveX Java  \u54cd\u5e94\u5f0f\u7f16\u7a0b\u6846\u67b6(android\uff09\n        // Java stream() java8\n        //\u89c2\u5bdf\u8005\u6a21\u5f0f\n        public static void main(String[] args) throws ExecutionException, InterruptedException {\n            final String[] datas = new String[]{"\u4e8b\u4ef61"};\n            // \u547d\u4ee4\u6267\u884c\u5b8c\u7684\u56de\u8c03\u64cd\u4f5c \u7ec8\u6b62\u547d\u4ee4\u6e05\u7406\n            //\u4f1a\u5728Observable\u7ed3\u675f\u524d\u89e6\u53d1\u56de\u8c03\u8be5call\u65b9\u6cd5\uff0c\u65e0\u8bba\u662f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u7ec8\u6b62\n            final Action0 onComplated = new Action0() {\n                @Override\n                public void call() {\n                    System.out.println("\u88ab\u89c2\u5bdf\u8005\u8981\u7ed3\u675f\u4e86");\n                }\n            };\n            //\u88ab\u89c2\u5bdf\u8005\n            Observable<String> observable = Observable.defer(new Func0<Observable<String>>() {\n                @Override\n                public Observable<String> call() {\n                    Observable observable1 = Observable.from(datas);\n                    return observable1.doOnCompleted(onComplated);\n                }\n            });\n    //        Observable<String> observable = Observable.just("\u4e8b\u4ef61","\u4e8b\u4ef62","\u7ed3\u675f");\n            //\u89c2\u5bdf\u8005\n            Observer observer = new Observer() {\n                @Override\n                public void onCompleted() {\n                    System.out.println("\u5bf9Comlate\u4e8b\u4ef6\u505a\u51fa\u54cd\u5e94");\n                }\n                @Override\n                public void onError(Throwable throwable) {\n                    System.out.println("\u5bf9Error\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94");\n                }\n                @Override\n                public void onNext(Object o) {\n                    System.out.println("\u5bf9Next\u4e8b\u4ef6\u4f5c\u51fa\u54cd\u5e94:" + o);\n                }\n            };\n            observable.subscribe(observer); //\u5efa\u7acb\u8ba2\u9605\u5173\u7cfb\n    \n    //        String s = observable.toBlocking().toFuture().get();//\u5f02\u6b65\u7b49\u5f85\u7ed3\u679c\n    //        System.out.println(s);\n        }\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"OK\uff0c\u5927\u4f53\u7684\u6307\u5bfc\u5982\u4f55\u4f7f\u7528RxJava\u7f16\u7a0b\u4e86\uff0c\u8bb0\u4e0b\u6765\u6211\u4eec\u5f00\u59cb\u64b8\u6e90\u7801\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u7b2c3\u7ae0 \u6e90\u7801\u89e3\u6790\n\u5148\u4e0a\u5b98\u7f51\u63d0\u4f9b\u7684\u6e90\u7801\u6d41\u7a0b\u56fe\uff0c\u4ece\u56fe\u4e0a\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5176\u5b9e\u5c31\u662f\u5148\u53bb\u626b\u63cf\u5e26\u6709HystrixCommand\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u884c\u5207\u9762\u62e6\u622a\uff0c\u6267\u884c\u5207\u9762\u7684\u903b\u8f91\u3002\u8fd9\u4e2a\u5207\u9762\u5b9a\u4e49\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff1aexecute\u548cqueue\uff0c\u4e8c\u9009\u4e00\u8fdb\u884c\u8c03\u7528\uff0c\u7136\u540e\u8fdb\u5165\u771f\u6b63\u7684\u62e6\u622a\u903b\u8f91\u3002\u6240\u4ee5\u5165\u53e3\u662fHystrixCommand\u6ce8\u89e3\uff0c\u800c\u5f00\u542fHystrix\u662f@EnableHystrix\u6ce8\u89e3\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    @SpringBootApplication\n    @EnableFeignClients("com.example.clients")\n    //@EnableDiscoveryClient //\u6ce8\u9500\u8868\u793aUser\u670d\u52a1\u4e0d\u6ce8\u518c\n    @EnableHystrix //\u6ce8\u89e3\u65b9\u5f0f\u5f00\u542fHystrix\n    public class HystrixEclipseUserApplication {\n    \n        public static void main(String[] args) {\n            SpringApplication.run(HystrixEclipseUserApplication.class, args);\n        }\n    \n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fdb\u5165\u5230@EnableHystrix\u6ce8\u89e3\u4e2d"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n    @Target({ElementType.TYPE})\n    @Retention(RetentionPolicy.RUNTIME)\n    @Documented\n    @Inherited\n    @EnableCircuitBreaker\n    public @interface EnableHystrix {\n    }\n    //\u6700\u7ec8@EnableHystrix\u7ee7\u627f\u4e86@EnableCircuitBreaker\n    @Target(ElementType.TYPE)\n    @Retention(RetentionPolicy.RUNTIME)\n    @Documented\n    @Inherited\n    @Import(EnableCircuitBreakerImportSelector.class)\n    public @interface EnableCircuitBreaker {\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u770b\u5230\u8fd9\u6b65\u4ee3\u7801\uff0c\u6211\u76f8\u4fe1\u5f88\u591a\u5b66\u8fc7springboot\u7684\u540c\u5b66\u90fd\u5f88\u719f\u6089\u4e86\uff0c\u8fd9\u91cc\u7528\u5230\u4e86Import\u6ce8\u89e3\uff0c\u90a3\u80af\u5b9a\u662f\u5f15\u8fdb\u6765\u4e00\u4e9b\u914d\u7f6e\u7c7b\u4e86\uff0c\u7136\u540e\u6211\u4eec\u518d\u8fdb\nEnableCircuitBreakerImportSelector\u7c7b\u4e2d;"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    @Order(Ordered.LOWEST_PRECEDENCE - 100)\n    public class EnableCircuitBreakerImportSelector\n    \t\textends SpringFactoryImportSelector<EnableCircuitBreaker> {\n    \t@Override\n    \tprotected boolean isEnabled() {\n    \t\treturn getEnvironment().getProperty("spring.cloud.circuit.breaker.enabled",\n    \t\t\t\tBoolean.class, Boolean.TRUE);\n    \t}\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"EnableCircuitBreakerImportSelector\u7ee7\u627f\u4e86SpringFactoryImportSelector\uff0c\u8fdb\u5165SpringFactoryImportSelector\u7c7b\u540e\u53d1\u73b0\u662f\u6211\u4eec\u719f\u6089\u7684\u4ee3\u7801\uff0c\u5b83\u5b9e\u73b0\u4e86DeferredImportSelector\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86selectImports\u65b9\u6cd5\uff0cselectImports\u65b9\u6cd5\u4f1a\u4ece\u914d\u7f6e\u6587\u4ef6spring.factories\u91cc\u52a0\u8f7d\u5bf9\u5e94\u7684\u7c7b org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker\uff0c\u6211\u4eec\u6765\u770b\u770bspring.facotries\u6587\u4ef6\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n    org.springframework.cloud.netflix.hystrix.HystrixAutoConfiguration,\\\n    org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerAutoConfiguration,\\\n    org.springframework.cloud.netflix.hystrix.ReactiveHystrixCircuitBreakerAutoConfiguration,\\\n    org.springframework.cloud.netflix.hystrix.security.HystrixSecurityAutoConfiguration\n    org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker=\\\n    org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u5e94EnableAutoConfiguration\u7684\u8fd9\u4e9b\u5b9e\u73b0\u7c7b\u5728spring\u542f\u52a8\u7684\u65f6\u5019\u901a\u8fc7\u81ea\u52a8\u88c5\u914d\u673a\u5236\u4f1a\u53bb\u5b9e\u4f8b\u5316\u5e76\u4e14\u6ce8\u5165\u5230IoC\u5bb9\u5668\u4e2d\uff0c\u8fd9\u91cc\u6211\u4eec\u6838\u5fc3\u5173\u6ce8\nHystrixCircuitBreakerConfiguration\u7c7b\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    @Configuration(proxyBeanMethods = false)\n    public class HystrixCircuitBreakerConfiguration {\n        //\u8fd9\u91cc\u662f\u6838\u5fc3\u7684\u5207\u9762bean\n    \t@Bean\n    \tpublic HystrixCommandAspect hystrixCommandAspect() {\n    \t\treturn new HystrixCommandAspect();\n    \t}\n    \t...\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fdb\u5165\u5230\u8fd9\u4e2a\u5207\u9762\u7c7b\u4e2d\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5207\u9762\u4e3b\u8981\u9488\u5bf9\u4e86\u4e24\u4e2a\u6ce8\u89e3\u4f5c\u4e3a\u5207\u5165\u70b9@HystrixCommand\u548c@HystrixCollapser\uff0c\u5f53\u6267\u884c\u8fd9\u4e24\u4e2a\u6ce8\u89e3\u4fee\u9970\u7684\u65b9\u6cd5\u65f6\uff0c\u4f1a\u88ab\u62e6\u622a\u6267\u884c\nmethodsAnnotatedWithHystrixCommand"}),"\n",(0,r.jsx)(n.p,{children:"3.1 HystrixCommandAspect"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'    @Aspect\n    public class HystrixCommandAspect {\n        private static final Map<HystrixPointcutType, MetaHolderFactory> META_HOLDER_FACTORY_MAP;\n        static {\n            //\u901a\u8fc7\u9759\u6001\u65b9\u6cd5\u5c06\u4e24\u4e2a\u6ce8\u89e3\u7684\u4e24\u4e2a\u5de5\u5382\u5b9e\u4f8b\u5316\n            META_HOLDER_FACTORY_MAP = ImmutableMap.<HystrixPointcutType, MetaHolderFactory>builder()\n                .put(HystrixPointcutType.COMMAND, new CommandMetaHolderFactory())\n                .put(HystrixPointcutType.COLLAPSER, new CollapserMetaHolderFactory())\n                .build();\n        }\n        //\u5b9a\u4e49\u5207\u5165\u70b9\u6ce8\u89e3HystrixCommand\n        @Pointcut("@annotation(com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand)")\n        public void hystrixCommandAnnotationPointcut() {\n        }\n        //\u5b9a\u4e49\u5207\u5165\u70b9\u6ce8\u89e3HystrixCollapser\uff08\u8bf7\u6c42\u5408\u5e76\uff09\n        @Pointcut("@annotation(com.netflix.hystrix.contrib.javanica.annotation.HystrixCollapser)")\n        public void hystrixCollapserAnnotationPointcut() {\n        }\n        //\u73af\u7ed5\u901a\u77e5\n        @Around("hystrixCommandAnnotationPointcut() || hystrixCollapserAnnotationPointcut()")\n        public Object methodsAnnotatedWithHystrixCommand(final ProceedingJoinPoint joinPoint) throws Throwable {\n            //\u83b7\u53d6\u76ee\u6807\u65b9\u6cd5\n            Method method = getMethodFromTarget(joinPoint);\n            Validate.notNull(method, "failed to get method from joinPoint: %s", joinPoint);\n            //\u53ea\u5904\u7406\u8fd9\u4e24\u79cd\u6ce8\u89e3\u6807\u6ce8\u7684\u65b9\u6cd5\n            if (method.isAnnotationPresent(HystrixCommand.class) && method.isAnnotationPresent(HystrixCollapser.class)) {\n                throw new IllegalStateException("method cannot be annotated with HystrixCommand and HystrixCollapser " +\n                                                "annotations at the same time");\n            }\n            //\u6839\u636e\u4e0d\u540c\u7684\u6ce8\u89e3\uff0c\u9009\u62e9\u5bf9\u5e94\u7684metaHolderFactory, \u521b\u5efaMetaHolder, MetaHolder \u91cc\u9762\u5305\u542b\u4e86\u6240\u6709\u4fe1\u606f\n            MetaHolderFactory metaHolderFactory = META_HOLDER_FACTORY_MAP.get(HystrixPointcutType.of(method));\n            //\u83b7\u53d6\u76ee\u6807\u65b9\u6cd5\u7684\u7684\u5143\u6570\u636e\uff0c\u65b9\u6cd5\u7b7e\u540d\uff0c\u53c2\u6570\u7b49\n            MetaHolder metaHolder = metaHolderFactory.create(joinPoint);\n            /**\n             * \u521b\u5efa\u5904\u7406\u5668CommandCollapser \u6216 GenericCommand \uff08\u540c\u6b65\uff09 \u6216GenericObservableCommand\uff08\u5f02\u6b65\uff09\n             * GenericCommand\u91cc\u6709\u5f88\u591asuper\uff0c\u6700\u7ec8\u901a\u8fc7HystrixCommandBuilderFactory.getInstance().create(metaHolder) \u6784\u5efa\u4e86\u4e00\u4e2aHystrixCommandBuilder\u4f5c\u4e3aGenericCommad\u7684\u53c2\u6570\n             * new  GenericCommand \u901a\u8fc7super\u5230AbstractHystrixCommand\uff0c\n             * AbstractHystrixCommand \u901a\u8fc7super\u5230HystrixCommand\uff0c\n             * HystrixCommand\u6700\u7ec8\u5230\u4e86AbstractCommand  \u4e00\u8def\u4f20\u9012\n             * \u4e00\u4f1a\u5728AbstractCommand\u4e2d\u5206\u6790\u4e0b\n             */\n            HystrixInvokable invokable = HystrixCommandFactory.getInstance().create(metaHolder);\n            //\u6839\u636e\u8fd4\u56de\u503c\u63a8\u65ad\u6267\u884c\u7c7b\u578b\n            ExecutionType executionType = metaHolder.isCollapserAnnotationPresent() ?\n                metaHolder.getCollapserExecutionType() : metaHolder.getExecutionType();\n            //\u6839\u636e\u4e0d\u540c\u7684\u547d\u4ee4\u7c7b\u578b\uff0c\u6267\u884c\u547d\u4ee4\uff0c\u8fd4\u56de\u7ed3\u679c\n            Object result;\n            try {\n                //\u662f\u5426\u662f\u54cd\u5e94\u5f0f\u7684\uff08\u7531\u4e8e\u6211\u4eec\u8fd9\u4e9b\u90fd\u662f\u540c\u6b65\u7684\u4f1a\u8d70\u8fd9\u4e2a\u903b\u8f91\uff09\n                if (!metaHolder.isObservable()) {\n                    //execute\u6267\u884c\n                    result = CommandExecutor.execute(invokable, executionType, metaHolder);\n                } else {\n                    result = executeObservable(invokable, executionType, metaHolder);\n                }\n            } catch (HystrixBadRequestException e) {\n                throw e.getCause();\n            } catch (HystrixRuntimeException e) {\n                throw hystrixRuntimeExceptionToThrowable(metaHolder, e);\n            }\n            return result;\n        }\n        //HystrixCommand\u7684\u65f6\u5019MetaHolder\u7684\u521b\u5efa\n        private static class CommandMetaHolderFactory extends MetaHolderFactory {\n            @Override\n            public MetaHolder create(Object proxy, Method method, Object obj, Object[] args, final ProceedingJoinPoint joinPoint) {\n                //\u83b7\u53d6\u6ce8\u89e3HystrixCommand\n                HystrixCommand hystrixCommand = method.getAnnotation(HystrixCommand.class);\n                //\u6839\u636e\u8fd4\u56de\u7ed3\u679c\u63a8\u65ad\u4efb\u52a1\u7c7b\u578b\uff0c\u53ef\u4ee5\u77e5\u9053\u4ee5\u54ea\u79cd\u65b9\u5f0f\u6267\u884c\n                ExecutionType executionType = ExecutionType.getExecutionType(method.getReturnType());\n                MetaHolder.Builder builder = metaHolderBuilder(proxy, method, obj, args, joinPoint);\n                if (isCompileWeaving()) {\n                    builder.ajcMethod(getAjcMethodFromTarget(joinPoint));\n                }\n                //\u8fd9\u91cc\u6ca1\u6709\u591a\u5c11\u53c2\u6570\uff0c\u6700\u91cd\u8981\u7684\u4e00\u4e2ahystrixCommand\uff0c\u4f60\u5728\u6ce8\u89e3\u91cc\u52a0\u4e86\u4ec0\u4e48\n                return builder.defaultCommandKey(method.getName())\n                    .hystrixCommand(hystrixCommand)\n                    .observableExecutionMode(hystrixCommand.observableExecutionMode())  //\u6267\u884c\u6a21\u5f0f\n                    .executionType(executionType) //\u6267\u884c\u65b9\u5f0f\n                    .observable(ExecutionType.OBSERVABLE == executionType)\n                    .build();\n            }\n        }\n    }\n    //\u5728\u679a\u4e3eExecutionType\u7c7b\u91cc\n    public static ExecutionType getExecutionType(Class<?> type) {\n        if (Future.class.isAssignableFrom(type)) {\n            return ExecutionType.ASYNCHRONOUS;\n        } else if (Observable.class.isAssignableFrom(type)) {\n            return ExecutionType.OBSERVABLE;\n        } else {\n            return ExecutionType.SYNCHRONOUS;\n        }\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u6211\u4eec\u91cd\u70b9\u5206\u6790\u4e0b\u540c\u6b65\u5904\u7406\uff0c\u901a\u8fc7\u4ee3\u7801\u6211\u4eec\u53ef\u4ee5\u770b\u5230HystrixInvokable \u662f GenericCommand\uff0c\u6211\u4eec\u540c\u6b65\u91cc\u7684\u770b\u4e0b CommandExecutor.execute(invokable, executionType, metaHolder)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n    public class CommandExecutor {\n        public static Object execute(HystrixInvokable invokable, ExecutionType executionType, MetaHolder metaHolder) throws RuntimeException {\n            Validate.notNull(invokable);\n            Validate.notNull(metaHolder);\n    \n            switch (executionType) {\n                case SYNCHRONOUS: {\n                    //\u91cd\u70b9\u770b\u540c\u6b65\u5904\u7406\u8fd9\u4e2a\uff0c\u5148\u628aGenericCommand \u8f6c\u6210HystrixExecutable \u518d\u6267\u884cexecute\n                    return castToExecutable(invokable, executionType).execute();\n                }\n                case ASYNCHRONOUS: {\n                    // \u5f3a\u8f6c\u6210HystrixExecutable  \u5f02\u6b65\u6267\u884c\n                    HystrixExecutable executable = castToExecutable(invokable, executionType);\n                    // \u5982\u679c\u6709 fallback\u65b9\u6cd5\uff0c\u4e14\u662f\u5f02\u6b65\u6267\u884c\uff0c\u5219\u6267\u884c\u5e76\u8fd4\u56de\u5305\u88c5\u7ed3\u679c\n                    if (metaHolder.hasFallbackMethodCommand()\n                            && ExecutionType.ASYNCHRONOUS == metaHolder.getFallbackExecutionType()) {\n                        return new FutureDecorator(executable.queue());\n                    }\n                    return executable.queue();\n                }\n                case OBSERVABLE: {\n                    // \u5f3a\u8f6c\u6210 HystrixObservable\n                    HystrixObservable observable = castToObservable(invokable);\n                    // \u5224\u65ad\u6267\u884c\u6a21\u5f0f\u662f\u4e0d\u662f\u6025\u5207/\u61d2\u60f0\uff0c\u6765\u9009\u62e9\u6a21\u5f0f\u6267\u884c\n                    return ObservableExecutionMode.EAGER == metaHolder.getObservableExecutionMode() ? observable.observe() : observable.toObservable();\n                }\n                default:\n                    throw new RuntimeException("unsupported execution type: " + executionType);\n            }\n        }\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u7528\u6765\u6267\u884c\u547d\u4ee4\uff0c\u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\u8fd9\u91cc\u6709\u4e09\u4e2a\u6267\u884c\u7c7b\u578b\uff0c\u5206\u522b\u662f\u540c\u6b65\u3001\u5f02\u6b65\u3001\u4ee5\u53ca\u54cd\u5e94\u5f0f\u3002\u5176\u4e2d\uff0c\u54cd\u5e94\u5f0f\u53c8\u5206\u4e3aCold Observable\uff08observable.toObservable()\uff09 \u548c HotObservable\uff08observable.observe()\uff09\u9ed8\u8ba4\u7684executionType=SYNCHRONOUS \uff0c\u540c\u6b65\u8bf7\u6c42\u3002"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"execute()\uff1a\u540c\u6b65\u6267\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u5bf9\u8c61\u7ed3\u679c\uff0c\u53d1\u751f\u9519\u8bef\u65f6\u629b\u51fa\u5f02\u5e38\u3002"}),"\n",(0,r.jsx)(n.li,{children:"queue()\uff1a\u5f02\u6b65\u6267\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a Future \u5bf9\u8c61\uff0c\u5305\u542b\u7740\u6267\u884c\u7ed3\u675f\u540e\u8fd4\u56de\u7684\u5355\u4e00\u7ed3\u679c\u3002"}),"\n",(0,r.jsx)(n.li,{children:"observe()\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a Observable \u5bf9\u8c61\uff0c\u5b83\u4ee3\u8868\u64cd\u4f5c\u7684\u591a\u4e2a\u7ed3\u679c\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab\u8ba2\u9605\u8005\u6d88\u8d39\u6389\u4e86\u3002"}),"\n",(0,r.jsx)(n.li,{children:"toObservable()\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a Observable \u5bf9\u8c61\uff0c\u5b83\u4ee3\u8868\u64cd\u4f5c\u7684\u591a\u4e2a\u7ed3\u679c\uff0c\u9700\u8981\u54b1\u4eec\u81ea\u5df1\u624b\u52a8\u8ba2\u9605\u5e76\u6d88\u8d39\u6389\u3002\n\u7c7b\u56fe\u5173\u7cfb\u5982\u4e0b\uff1a"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u901a\u8fc7GenericCommand\u4e00\u5c42\u5c42\u7684\u5f80\u4e0a\u7ffb\uff0c\u6700\u7ec8\u5b9a\u4f4d\u5230HystrixCommand\u6709\u4e2aexecute()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    public abstract class HystrixCommand<R> extends AbstractCommand<R> implements HystrixExecutable<R>, HystrixInvokableInfo<R>, HystrixObservable<R> {\n        //\u540c\u6b65\u6267\u884c\n        public R execute() {\n            try {\n                //\u901a\u8fc7queue().get()\u6765\u540c\u6b65\u6267\u884c\uff08\u5c01\u88c5\u5f02\u6b65\u5904\u7406\u7684\u7ed3\u679c\uff09\n                return queue().get();\n            } catch (Exception e) {\n                throw Exceptions.sneakyThrow(decomposeException(e));\n            }\n        }\n       //\u5f02\u6b65\u6267\u884c\uff0c\u4ec0\u4e48\u65f6\u5019get()\uff0c\u7531\u8c03\u7528\u8005\u51b3\u5b9a\uff0cget()\u7684\u65f6\u5019\u4f1a\u963b\u585e\n       public Future<R> queue() {\n            //\u6838\u5fc3\u5904\u7406\uff0c\u6700\u7ec8\u5b9a\u4f4d\u5230\u4e86AbstractCommand\u91cc\u7684toObservable()\u91cc\n            // toObservable\u8f6c\u6362\u4e3aObservable,toBlocking\u8f6c\u6362\u4e3aBlockingObservable, \n            // toFuture\u8f6c\u6362\u4e3aFuture,\u5b8c\u6210\u4e86Observable\u7684\u521b\u5efa\u548c\u8ba2\u9605\n            final Future<R> delegate = toObservable().toBlocking().toFuture();   \t\n            final Future<R> f = new Future<R>() {\n                .....\n                @Override\n                public R get() throws InterruptedException, ExecutionException {\n                    return delegate.get();\n                }\n                @Override\n                public R get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {\n                    return delegate.get(timeout, unit);\n                }       \t\n            };\n            //\u7279\u6b8a\u5904\u7406\u4e86\u4e0b\uff0c\u5df2\u7ecf\u6267\u884c\u5b8c\u4e86\uff0cget()\u4e5f\u4e0d\u4f1a\u963b\u585e\u4e86\n            if (f.isDone()) {\n                try {\n                    f.get();\n                    return f;\n                } catch (Exception e) {\n                    ...\n                }\n            }\n            return f;\n        }\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u91cd\u70b9\u6765\u4e86\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\njava.util.concurrent.Future \uff0c\u7136\u540e\u8c03\u7528 get\u7684\u65f6\u5019\u59d4\u6d3e\u7ed9 delegate\uff0c\u800c delegate\u6765\u81ea\u4e8e toObservable().toBlocking().toFuture(); \u8fd9\u6b63\u662f\u6211\u4eec\u4e0a\u9762\u4f8b\u5b50\u91cc\u9762\u5f97\u4ee3\u7801\u3002\u6240\u4ee5\u73b0\u5728\u7684\u91cd\u70b9\u5e94\u8be5\u653e\u5728 toObservable() \u65b9\u6cd5\u4e2d\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"3.2 toObservable\n\u901a\u8fc7Observable\u5b9a\u4e49\u4e00\u4e2a\u88ab\u89c2\u5bdf\u8005\uff0c\u8fd9\u4e2a\u88ab\u89c2\u5bdf\u8005\u4f1a\u88abtoObservable().toBlocking().toFuture() \uff0c\u5b9e\u9645\u4e0a\u8fd9\u884c\u4ee3\u7801\u7684\u6838\u5fc3\u542b\u4e49\u5c31\u662f\u53bb\u6839\u636e\u4e00\u4e9b\u7194\u65ad\u903b\u8f91\u5224\u65ad\u662f\u6267\u884c\u771f\u5b9e\u7684\u4e1a\u52a1\u903b\u8f91\u8fd8\u662f\u6267\u884cfallback\u7684\u56de\u8c03\u65b9\u6cd5\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9Future\u3002\u91cc\u9762\u7684 run() \u65b9\u6cd5\u5c31\u662f\u6267\u884c\u6b63\u5e38\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u505a\u4e86\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u521b\u5efa\u4e00\u5806\u7684\u52a8\u4f5c\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u4e9b\u52a8\u4f5c\u662f\u5e72\u5565\u7684\uff0c\u4e0d\u91cd\u8981\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5224\u65ad\u662f\u5426\u5f00\u542f\u4e86\u7f13\u5b58\uff0c\u5982\u679c\u5f00\u4e86\uff0c\u800c\u4e14\u4e5f\u547d\u4e2d\u4e86\uff0c\u5c31\u53bb\u7f13\u5b58\u91cc\u9762\u4ee5Observable\u5f62\u5f0f\u8fd4\u56de\u4e00\u4e2a\u7f13\u5b58\u7ed3\u679c"}),"\n",(0,r.jsx)(n.li,{children:"\u521b\u5efa\u4e00\u4e2a\u88ab\u89c2\u5bdf\u8005\uff0c\u8fd9\u4e2a\u88ab\u89c2\u5bdf\u8005\u540e\u9762\u4f1a\u53bb\u56de\u8c03\u771f\u5b9e\u4e1a\u52a1\u903b\u8f91\u6216\u8005fallback\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u6838\u5fc3\u903b\u8f91\u662f\u8fd9\u4e2a\u88ab\u89c2\u5bdf\u8005\u4f1a\u53bb\u6267\u884capplyHystrixSemantics\u91cc\u9762\u7684\u52a8\u4f5c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n    public Observable<R> toObservable() {\n        final AbstractCommand<R> _cmd = this;\n        // \u547d\u4ee4\u6267\u884c\u5b8c\u7684\u56de\u8c03\u64cd\u4f5c \u7ec8\u6b62\u547d\u4ee4\u6e05\u7406\n        //\u4f1a\u5728Observable\u7ed3\u675f\u524d\u89e6\u53d1\u56de\u8c03\u8be5call\u65b9\u6cd5\uff0c\u65e0\u8bba\u662f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u7ec8\u6b62\n        final Action0 terminateCommandCleanup = new Action0() {\n    \t\t...\n        };\n        // \u5c06\u547d\u4ee4\u6807\u8bb0\u4e3a\u5df2\u53d6\u6d88\u5e76\u5b58\u50a8\u5ef6\u8fdf\uff08\u9664\u4e86\u6807\u51c6\u6e05\u7406\uff09\n        //\u53d6\u6d88\u8ba2\u9605\u65f6\u7684\u76d1\u542c\u4f1a\u8fdb\u884c\u56de\u8c03\u8be5 call\u65b9\u6cd5\n        final Action0 unsubscribeCommandCleanup = new Action0() {\n            @Override\n            public void call() {\n    \t\t\t...\n            }\n        };\n        // \u6267\u884c\u547d\u4ee4\u65f6\u7684\u56de\u8c03\n        final Func0<Observable<R>> applyHystrixSemantics = new Func0<Observable<R>>() {\n            @Override\n            public Observable<R> call() {\n                if (commandState.get().equals(CommandState.UNSUBSCRIBED)) {\n                    // \u7acb\u5373\u7ec8\u6b62\u6574\u4e2a\u6d41\u7a0b\u3002\n                    return Observable.never();\n                }\n                //\u8fd4\u56de\u6267\u884c\u547d\u4ee4\u7684Observable\n                return applyHystrixSemantics(_cmd);\n            }\n        };\n        final Func1<R, R> wrapWithAllOnNextHooks = new Func1<R, R>() {\n            @Override\n            public R call(R r) {\n    \t\t\t...\n            }\n        };\n        final Action0 fireOnCompletedHook = new Action0() {\n            @Override\n            public void call() {\n    \t\t\t...\n            }\n        };\n        // \u521b\u5efaObservable,\u8bbe\u7f6e\u5404\u79cd\u5904\u7406\u64cd\u4f5c\n        return Observable.defer(new Func0<Observable<R>>() {\n            @Override\n            public Observable<R> call() {\n                // \u8bbe\u7f6e\u5df2\u542f\u52a8\u6807\u5fd7, CAS\u4fdd\u8bc1\u547d\u4ee4\u53ea\u6267\u884c\u4e00\u6b21\n                if (!commandState.compareAndSet(CommandState.NOT_STARTED, CommandState.OBSERVABLE_CHAIN_CREATED)) {\n                    IllegalStateException ex = new IllegalStateException("This instance can only be executed once. Please instantiate a new instance.");\n                    //TODO make a new error type for this\n                    throw new HystrixRuntimeException(FailureType.BAD_REQUEST_EXCEPTION, _cmd.getClass(), getLogMessagePrefix() + " command executed multiple times - this is not permitted.", ex, null);\n                }\n                // \u547d\u4ee4\u5f00\u59cb\u65f6\u95f4\u6233\n                commandStartTimestamp = System.currentTimeMillis();\n                // \u6253\u5370\u65e5\u5fd7\n                if (properties.requestLogEnabled().get()) {\n                    // log this command execution regardless of what happened\n                    if (currentRequestLog != null) {\n                        currentRequestLog.addExecutedCommand(_cmd);\n                    }\n                }\n                // \u7f13\u5b58\u5f00\u5173\uff0c\u7f13\u5b58KEY\uff08\u8fd9\u4e2a\u662fHystrix\u4e2d\u8bf7\u6c42\u7f13\u5b58\u529f\u80fd\uff0chystrix\u652f\u6301\u5c06\u4e00\u4e2a\u8bf7\u6c42\u7ed3\u679c\u7f13\u5b58\u8d77\u6765\uff0c\n                // \u4e0b\u4e00\u4e2a\u5177\u6709\u76f8\u540ckey\u7684\u8bf7\u6c42\u5c06\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u53d6\u51fa\u7ed3\u679c\uff0c\u51cf\u5c11\u8bf7\u6c42\u5f00\u9500\uff09\n                final boolean requestCacheEnabled = isRequestCachingEnabled();\n                final String cacheKey = getCacheKey();\n                // \u5982\u679c\u914d\u7f6e\u5141\u8bb8\u7f13\u5b58\uff0c\u5148\u8bd5\u56fe\u4ece\u7f13\u5b58\u83b7\u53d6\uff0c\u9ed8\u8ba4 false\n                if (requestCacheEnabled) {\n                    HystrixCommandResponseFromCache<R> fromCache = (HystrixCommandResponseFromCache<R>) requestCache.get(cacheKey);\n                    if (fromCache != null) {\n                        isResponseFromCache = true;\n                        return handleRequestCacheHitAndEmitValues(fromCache, _cmd);\n                    }\n                }\n                // \u58f0\u660e\u6267\u884c\u547d\u4ee4\u7684Observable\n                // \u521b\u5efaObservable, applyHystrixSemantics() \u6765\u751f\u6210Observable\n                Observable<R> hystrixObservable =\n                    Observable.defer(applyHystrixSemantics)\n                    .map(wrapWithAllOnNextHooks);\n                Observable<R> afterCache;\n                // put in cache \u4fdd\u5b58\u8bf7\u6c42\u7ed3\u679c\u5230\u7f13\u5b58\u4e2d\n                if (requestCacheEnabled && cacheKey != null) {\n                    // wrap it for caching\n                    HystrixCachedObservable<R> toCache = HystrixCachedObservable.from(hystrixObservable, _cmd);\n                    HystrixCommandResponseFromCache<R> fromCache = (HystrixCommandResponseFromCache<R>) requestCache.putIfAbsent(cacheKey, toCache);\n                    if (fromCache != null) {\n                        // another thread beat us so we\'ll use the cached value instead\n                        toCache.unsubscribe();\n                        isResponseFromCache = true;\n                        return handleRequestCacheHitAndEmitValues(fromCache, _cmd);\n                    } else {\n                        // we just created an ObservableCommand so we cast and return it\n                        afterCache = toCache.toObservable();\n                    }\n                } else {\n                    afterCache = hystrixObservable;\n                }\n                // \u751f\u547d\u5468\u671f\u56de\u8c03\u8bbe\u7f6e\n                return afterCache\n                    //\u4f1a\u5728Observable\u7ed3\u675f\u524d\u89e6\u53d1\u56de\u8c03\uff0c\u65e0\u8bba\u662f\u6b63\u5e38\u8fd8\u662f\u5f02\u5e38\u7ec8\u6b62\n                    .doOnTerminate(terminateCommandCleanup)     \n                    //\u53d6\u6d88\u8ba2\u9605\u65f6\u7684\u76d1\u542c\n                    .doOnUnsubscribe(unsubscribeCommandCleanup) \n                    //Observable\u6b63\u5e38\u7ec8\u6b62\u65f6\u7684\u76d1\u542c\n                    .doOnCompleted(fireOnCompletedHook);\n            }\n        });\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u63a5\u4e0b\u6765\u770b\u770b\u6838\u5fc3\u903b\u8f91applyHystrixSemantics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n    Observable<R> hystrixObservable =\n        Observable.defer(applyHystrixSemantics)\n        .map(wrapWithAllOnNextHooks);\n\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    final Func0<Observable<R>> applyHystrixSemantics = new Func0<Observable<R>>() {\n        @Override\n        public Observable<R> call() {\n            if (commandState.get().equals(CommandState.UNSUBSCRIBED)) {\n                return Observable.never();\n            }\n            return applyHystrixSemantics(_cmd);\n        }\n    };\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u91cc\u4f20\u5165\u7684_cmd\u662f\u4e00\u4e2aGenericCommand\uff0c\u6700\u7ec8\u4f1a\u6267\u884c\u5230\u8fd9\u4e2aGenericCommand\u4e2d\u7684run\u65b9\u6cd5\u3002"}),"\n",(0,r.jsx)(n.p,{children:"circuitBreaker.allowRequest() \u8fd9\u4e2a\u662f\u5224\u65ad\u662f\u5426\u5904\u4e8e\u7194\u65ad\u72b6\u6001\u7684\uff0ctrue\u8868\u793a\u6ca1\u6709\u5904\u4e8e\u7194\u65ad\u72b6\u6001\uff0c\u6b63\u5e38\u6267\u884c\uff0c\u5426\u5219\uff0c\u8c03\u7528 handleShortCircuitViaFallback \u5b9e\u73b0\u670d\u52a1\u964d\u7ea7\uff0c\u6700\u7ec8\u4f1a\u56de\u8c03\u5230\u6211\u4eec\u81ea\u5b9a\u4e49\u7684fallback\u65b9\u6cd5\u4e2d\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u5982\u679c\u5f53\u524dhystrix\u5904\u4e8e\u672a\u7194\u65ad\u72b6\u6001\uff0c\u5219"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"getExecutionSemaphore \u5224\u65ad\u5f53\u524d\u7b56\u7565\u662f\u5426\u4e3a\u4fe1\u53f7\u91cf\u8fd8\u662f\u7ebf\u7a0b\u6c60\uff0c\u663e\u7136\u9ed8\u8ba4\u662f\u7ebf\u7a0b\u6c60\uff0c\u7136\u540e\u518d\u8c03\u7528tryAcquire\u65f6\u5199\u6b7b\u4e86\u4e3atrue\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u8c03\u7528executeCommandAndObserve\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n    private Observable<R> applyHystrixSemantics(final AbstractCommand<R> _cmd) {\n    \n        executionHook.onStart(_cmd);\n    \n        // \u662f\u5426\u5141\u8bb8\u8bf7\u6c42\uff0c\u5373\u65ad\u8def\u5668\u662f\u5426\u5f00\u542f \uff0c\u8fd9\u91cc\u4e5f\u6709\u597d\u51e0\u79cd\u60c5\u51b5\n        if (circuitBreaker.allowRequest()) {\n            // \u4fe1\u53f7\u91cf\u83b7\u53d6\n            final TryableSemaphore executionSemaphore = getExecutionSemaphore();\n            final AtomicBoolean semaphoreHasBeenReleased = new AtomicBoolean(false);\n    \n            // \u4fe1\u53f7\u91ca\u653e\u56de\u8c03\n            final Action0 singleSemaphoreRelease = new Action0() {\n                @Override\n                public void call() {\n                    if (semaphoreHasBeenReleased.compareAndSet(false, true)) {\n                        executionSemaphore.release();\n                    }\n                }\n            };\n    \n            // \u5f02\u5e38\u56de\u8c03\n            final Action1<Throwable> markExceptionThrown = new Action1<Throwable>() {\n                @Override\n                public void call(Throwable t) {\n                    eventNotifier.markEvent(HystrixEventType.EXCEPTION_THROWN, commandKey);\n                }\n            };\n    \n            // \u83b7\u53d6\u4fe1\u53f7\uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684 Observable\n            // \u662f\u5426\u5f00\u542f\u4fe1\u53f7\u91cf\u8d44\u6e90\u9694\u79bb\uff0c\u672a\u914d\u7f6e\u8d70 com.netflix.hystrix.AbstractCommand.TryableSemaphoreNoOp#tryAcquire \u9ed8\u8ba4\u8fd4\u56de\u901a\u8fc7\n            if (executionSemaphore.tryAcquire()) {\n                try {\n                    executionResult = executionResult.setInvocationStartTime(System.currentTimeMillis());\n                    return executeCommandAndObserve(_cmd)   // \u6267\u884c\u547d\u4ee4\uff0c\u4ee5\u4e0b\u4e09\u4e2a\u662f\u56de\u8c03\uff0c\u53ef\u4ee5\u4e0d\u770b\n                        .doOnError(markExceptionThrown)\n                        .doOnTerminate(singleSemaphoreRelease)\n                        .doOnUnsubscribe(singleSemaphoreRelease);\n                } catch (RuntimeException e) {\n                    return Observable.error(e);\n                }\n            } else {\n                // \u83b7\u53d6\u4fe1\u53f7\u5931\u8d25\u5219\u964d\u7ea7\n                return handleSemaphoreRejectionViaFallback();\n            }\n        } else {\n            // \u65ad\u8def\u5668\u5df2\u6253\u5f00\uff0c\u76f4\u63a5\u964d\u7ea7\n            return handleShortCircuitViaFallback();\n        }\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5148\u6765\u770b\u4e00\u4e0b\u6267\u884c\u5931\u8d25\u8fdb\u5165\u964d\u7ea7\u7684\u903b\u8f91\uff0c\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u8fdb\u5165\u5230 HystrixCommand#getFallbackObservable"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n    public abstract class HystrixCommand<R> extends AbstractCommand<R> implements HystrixExecutable<R>, HystrixInvokableInfo<R>, HystrixObservable<R> {\n        @Override\n        final protected Observable<R> getFallbackObservable() {\n            return Observable.defer(new Func0<Observable<R>>() {\n                @Override\n                public Observable<R> call() {\n                    try {\n                        return Observable.just(getFallback());\n                    } catch (Throwable ex) {\n                        return Observable.error(ex);\n                    }\n                }\n            });\n        }\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u91cc\u7684getFallback\u6700\u7ec8\u4f1a\u56de\u8c03\u6211\u4eec\u81ea\u5b9a\u7684fallback\u65b9\u6cd5\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u56de\u5230executeCommandAndObserve\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u505a\u4e86\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5b9a\u4e49\u4e0d\u540c\u7684\u56de\u8c03\uff0cdoOnNext\u3001doOnCompleted\u3001onErrorResumeNext\u3001doOnEach\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u8c03\u7528executeCommandWithSpecifiedIsolation\u3002"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u82e5\u6267\u884c\u547d\u4ee4\u8d85\u65f6\u7279\u6027\u5f00\u542f\uff0c\u8c03\u7528 Observable.lift\u65b9\u6cd5\u5b9e\u73b0\u6267\u884c\u547d\u4ee4\u8d85\u65f6\u529f\u80fd\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"    private Observable<R> executeCommandAndObserve(final AbstractCommand<R> _cmd) {\n        final HystrixRequestContext currentRequestContext = HystrixRequestContext.getContextForCurrentThread();\n        // Action\u548cFunc\u90fd\u662f\u5b9a\u4e49\u7684\u4e00\u4e2a\u52a8\u4f5c\uff0cAction\u662f\u65e0\u8fd4\u56de\u503c\uff0cFunc\u662f\u6709\u8fd4\u56de\u503c\n        // doOnNext\u4e2d\u7684\u56de\u8c03\u3002\u5373\u547d\u4ee4\u6267\u884c\u4e4b\u524d\u6267\u884c\u7684\u64cd\u4f5c\n        final Action1<R> markEmits = new Action1<R>() {\n            @Override\n            public void call(R r) {\n                if (shouldOutputOnNextEvents()) {\n                    executionResult = executionResult.addEvent(HystrixEventType.EMIT);\n                    eventNotifier.markEvent(HystrixEventType.EMIT, commandKey);\n                }\n                if (commandIsScalar()) {\n                    long latency = System.currentTimeMillis() - executionResult.getStartTimestamp();\n                    eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) latency, executionResult.getOrderedList());\n                    eventNotifier.markEvent(HystrixEventType.SUCCESS, commandKey);\n                    executionResult = executionResult.addEvent((int) latency, HystrixEventType.SUCCESS);\n                    circuitBreaker.markSuccess();\n                }\n            }\n        };\n        // doOnCompleted\u4e2d\u7684\u56de\u8c03\u3002\u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u6267\u884c\u7684\u64cd\u4f5c\n        final Action0 markOnCompleted = new Action0() {\n            @Override\n            public void call() {\n                if (!commandIsScalar()) {\n                    long latency = System.currentTimeMillis() - executionResult.getStartTimestamp();\n                    eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) latency, executionResult.getOrderedList());\n                    eventNotifier.markEvent(HystrixEventType.SUCCESS, commandKey);\n                    executionResult = executionResult.addEvent((int) latency, HystrixEventType.SUCCESS);\n                    circuitBreaker.markSuccess();\n                }\n            }\n        };\n        // onErrorResumeNext\u4e2d\u7684\u56de\u8c03\u3002\u547d\u4ee4\u6267\u884c\u5931\u8d25\u540e\u7684\u56de\u9000\u903b\u8f91\n        final Func1<Throwable, Observable<R>> handleFallback = new Func1<Throwable, Observable<R>>() {\n            @Override\n            public Observable<R> call(Throwable t) {\n                Exception e = getExceptionFromThrowable(t);\n                executionResult = executionResult.setExecutionException(e);\n                if (e instanceof RejectedExecutionException) {\n                    // \u7ebf\u7a0b\u8c03\u5ea6\u5931\u8d25\u56de\u8c03\n                    return handleThreadPoolRejectionViaFallback(e);\n                } else if (t instanceof HystrixTimeoutException) {\n                    // \u8d85\u65f6\u56de\u8c03\n                    return handleTimeoutViaFallback();\n                } else if (t instanceof HystrixBadRequestException) {\n                    // HystrixBadRequestException \u5f02\u5e38\u56de\u8c03\n                    return handleBadRequestByEmittingError(e);\n                } else {\n                    if (e instanceof HystrixBadRequestException) {\n                        eventNotifier.markEvent(HystrixEventType.BAD_REQUEST, commandKey);\n                        return Observable.error(e);\n                    }\n                    // \u964d\u7ea7\u5904\u7406\n                    return handleFailureViaFallback(e);\n                }\n            }\n        };\n        // doOnEach\u4e2d\u7684\u56de\u8c03\u3002`Observable`\u6bcf\u53d1\u5c04\u4e00\u4e2a\u6570\u636e\u90fd\u4f1a\u6267\u884c\u8fd9\u4e2a\u56de\u8c03\uff0c\u8bbe\u7f6e\u8bf7\u6c42\u4e0a\u4e0b\u6587\n        final Action1<Notification<? super R>> setRequestContext = new Action1<Notification<? super R>>() {\n            @Override\n            public void call(Notification<? super R> rNotification) {\n                setRequestContextIfNeeded(currentRequestContext);\n            }\n        };\n        // \u521b\u5efa\u5bf9\u5e94\u7684 Observable\uff0c\u5b9e\u73b0 \u7ebf\u7a0b\u9694\u79bb\u3001\u8bf7\u6c42\u53d1\u9001 \u7b49\u64cd\u4f5c\n        Observable<R> execution;\n        // \u5224\u65ad \u8d85\u65f6\u76d1\u63a7\u529f\u80fd\u662f\u5426\u6253\u5f00\n        if (properties.executionTimeoutEnabled().get()) {\n            // HystrixObservableTimeoutOperator  \u8f6c\u6362\u5bf9\u5e94\u7684 Observable\n            execution = executeCommandWithSpecifiedIsolation(_cmd)\n                .lift(new HystrixObservableTimeoutOperator<R>(_cmd));\n        } else {\n            execution = executeCommandWithSpecifiedIsolation(_cmd);\n        }\n        //\u8bbe\u7f6e\u56de\u8c03\n        return execution.doOnNext(markEmits)\n            .doOnCompleted(markOnCompleted)\n            .onErrorResumeNext(handleFallback)\n            .doOnEach(setRequestContext);\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"3.3 executeCommandWithSpecifiedIsolation\n\u8fd9\u4e2a\u65b9\u6cd5\u9996\u5148\u662f\u6839\u636e\u5f53\u524d\u4e0d\u540c\u7684\u8d44\u6e90\u9694\u79bb\u7b56\u7565\u6267\u884c\u4e0d\u540c\u7684\u903b\u8f91\uff0cTHREAD\u3001SEMAPHORE\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n    private Observable<R> executeCommandWithSpecifiedIsolation(final AbstractCommand<R> _cmd) {\n        // \u7ebf\u7a0b\u9694\u79bb, \u662f\u5426\u5f00\u542f THREAD \u8d44\u6e90\u9694\u79bb\u964d\u7ea7\n        if (properties.executionIsolationStrategy().get() == ExecutionIsolationStrategy.THREAD) {\n            //\u521b\u5efa\u4e00\u4e2aObservable\n            return Observable.defer(new Func0<Observable<R>>() {\n                @Override\n                public Observable<R> call() {\n                    executionResult = executionResult.setExecutionOccurred();\n                    if (!commandState.compareAndSet(CommandState.OBSERVABLE_CHAIN_CREATED, CommandState.USER_CODE_EXECUTED)) {\n                        return Observable.error(new IllegalStateException("execution attempted while in state : " + commandState.get().name()));\n                    }\n    \n                    metrics.markCommandStart(commandKey, threadPoolKey, ExecutionIsolationStrategy.THREAD);\n    \n                    // \u8be5\u547d\u4ee4\u5728\u5305\u88c5\u7ebf\u7a0b\u4e2d\u8d85\u65f6\uff0c\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u5e76\u4e14\u4e0d\u4f1a\u589e\u52a0\u4efb\u4f55\u8ba1\u6570\u5668\u6216\u5176\u4ed6\u6b64\u7c7b\u903b\u8f91\n                    if (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT) {\n                        // the command timed out in the wrapping thread so we will return immediately\n                        // and not increment any of the counters below or other such logic\n                        return Observable.error(new RuntimeException("timed out before executing run()"));\n                    }\n    \n                    // \u8bbe\u7f6e\u7ebf\u7a0b\u542f\u52a8\n                    if (threadState.compareAndSet(ThreadState.NOT_USING_THREAD, ThreadState.STARTED)) {\n                        //we have not been unsubscribed, so should proceed\n                        HystrixCounters.incrementGlobalConcurrentThreads();\n                        threadPool.markThreadExecution();\n                        // store the command that is being run\n                        endCurrentThreadExecutingCommand = Hystrix.startCurrentThreadExecutingCommand(getCommandKey());\n                        executionResult = executionResult.setExecutedInThread();\n    \n                        try {\n                            executionHook.onThreadStart(_cmd);\n                            executionHook.onRunStart(_cmd);\n                            executionHook.onExecutionStart(_cmd);\n                            //\u8fd4\u56de Observable,\u8fd9\u4e2a\u51fd\u6570\u6700\u7ec8\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5c01\u88c5\u4e86\u6211\u4eec\u7684run()\u903b\u8f91\u7684Observable\n                            return getUserExecutionObservable(_cmd);\n                        } catch (Throwable ex) {\n                            return Observable.error(ex);\n                        }\n                    } else {\n                        //command has already been unsubscribed, so return immediately\n                        return Observable.error(new RuntimeException("unsubscribed before executing run()"));\n                    }\n                }\n            }).doOnTerminate(new Action0() {\n                @Override\n                public void call() {\n                    if (threadState.compareAndSet(ThreadState.STARTED, ThreadState.TERMINAL)) {\n                        handleThreadEnd(_cmd);\n                    }\n                    if (threadState.compareAndSet(ThreadState.NOT_USING_THREAD, ThreadState.TERMINAL)) {\n                    }\n                }\n            }).doOnUnsubscribe(new Action0() {\n                @Override\n                public void call() {\n                    if (threadState.compareAndSet(ThreadState.STARTED, ThreadState.UNSUBSCRIBED)) {\n                        handleThreadEnd(_cmd);\n                    }\n                    if (threadState.compareAndSet(ThreadState.NOT_USING_THREAD, ThreadState.UNSUBSCRIBED)) {\n                    }\n                }\n            }).subscribeOn(threadPool.getScheduler(new Func0<Boolean>() {\n                @Override\n                public Boolean call() {\n                    return properties.executionIsolationThreadInterruptOnTimeout().get() && _cmd.isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT;\n                }\n            }));\n        } else {\n            // \u4fe1\u53f7\u91cf\u9694\u79bb\n            return Observable.defer(new Func0<Observable<R>>() {\n                @Override\n                public Observable<R> call() {\n                    executionResult = executionResult.setExecutionOccurred();\n                    if (!commandState.compareAndSet(CommandState.OBSERVABLE_CHAIN_CREATED, CommandState.USER_CODE_EXECUTED)) {\n                        return Observable.error(new IllegalStateException("execution attempted while in state : " + commandState.get().name()));\n                    }\n                    metrics.markCommandStart(commandKey, threadPoolKey, ExecutionIsolationStrategy.SEMAPHORE);\n                    endCurrentThreadExecutingCommand = Hystrix.startCurrentThreadExecutingCommand(getCommandKey());\n                    try {\n                        executionHook.onRunStart(_cmd);\n                        executionHook.onExecutionStart(_cmd);\n                        // \u771f\u6b63\u7684\u6267\u884c\n                        return getUserExecutionObservable(_cmd); \n                    } catch (Throwable ex) {\n                        //If the above hooks throw, then use that as the result of the run method\n                        return Observable.error(ex);\n                    }\n                }\n            });\n        }\n    }\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5224\u65ad\u662f\u5426\u5141\u8bb8\u53d1\u9001\u8bf7\u6c42\uff0c\u8fd9\u662f\u57fa\u4e8e\u65ad\u8def\u5668\u5b9e\u73b0\uff0c\u5982\u679c\u65ad\u8def\u5668\u6253\u5f00\uff0c\u5219\u8fdb\u884c\u5bf9\u5e94\u56de\u8c03\u5904\u7406\uff08\u5931\u8d25\u6216\u964d\u7ea7\uff09\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u5982\u679c \u65ad\u8def\u5668 \u5173\u95ed\uff0c\u5219\u8fdb\u884c\u8bf7\u6c42\uff0c\u5148\u83b7\u53d6\u4fe1\u53f7\uff0c\u83b7\u53d6\u5931\u8d25\u5219\u5904\u7406\u5bf9\u5e94\u56de\u8c03\u3002"}),"\n",(0,r.jsx)(n.li,{children:"\u83b7\u53d6\u6210\u529f\uff0c\u5219\u7531\u65b9\u6cd5 executeCommandAndObserve \u521b\u5efa\u5bf9\u5e94\u7684 Observable \u5b9e\u73b0 \u7ebf\u7a0b\u9694\u79bb\u3001\u8bf7\u6c42\u53d1\u9001 \u7b49\u64cd\u4f5c\uff0c\u540c\u65f6\u6ce8\u518c\u4e86\u5bf9\u5e94\u7684 \u751f\u547d\u5468\u671f\u56de\u8c03\u3002\n3.4 getUserExecutionObservable\n\u7136\u540e\u4f1a\u6267\u884c HystrixCommand#getExecutionObservable"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n    abstract class AbstractCommand<R> implements HystrixInvokableInfo<R>, HystrixObservable<R> {\n        private Observable<R> getUserExecutionObservable(final AbstractCommand<R> _cmd) {\n            Observable<R> userObservable;\n            try {\n                userObservable = getExecutionObservable();\n            } catch (Throwable ex) {\n                userObservable = Observable.error(ex);\n            }\n            return userObservable\n                    .lift(new ExecutionHookApplication(_cmd))\n                    .lift(new DeprecatedOnRunHookApplication(_cmd));\n        }\n    }\n    public abstract class HystrixCommand<R> extends AbstractCommand<R> implements HystrixExecutable<R>, HystrixInvokableInfo<R>, HystrixObservable<R> {\n        @Override\n        final protected Observable<R> getExecutionObservable() {\n            return Observable.defer(new Func0<Observable<R>>() {\n                @Override\n                public Observable<R> call() {\n                    try {\n                        return Observable.just(run());\n                    } catch (Throwable ex) {\n                        return Observable.error(ex);\n                    }\n                }\n            }).doOnSubscribe(new Action0() {\n                @Override\n                public void call() {\n                    // Save thread on which we get subscribed so that we can interrupt it later if needed\n                    executionThread.set(Thread.currentThread());\n                }\n            });\n        }\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fd9\u4e2a run() \u65b9\u6cd5\u5728\u4e0a\u9762\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u5c31\u662f\u771f\u6b63\u7684\u4e1a\u52a1\u6267\u884c\u65b9\u6cd5\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\n    @ThreadSafe\n    public class GenericCommand extends AbstractHystrixCommand<Object> {\n        @Override\n        protected Object run() throws Exception {\n            LOGGER.debug("execute command: {}", getCommandKey().name());\n            return process(new Action() {\n                @Override\n                Object execute() {\n                    return getCommandAction().execute(getExecutionType());\n                }\n            });\n        }\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u6700\u7ec8\u8c03\u7528\u5230\u6211\u4eec\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002"}),"\n",(0,r.jsx)(n.h1,{id:"\u53c2\u8003\u6587\u7ae0",children:"\u53c2\u8003\u6587\u7ae0"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF",children:"https://lijunyi.xyz/docs/SpringCloud/SpringCloud.html#_2-2-x-%E5%88%86%E6%94%AF"}),"\n",(0,r.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA",children:"https://mp.weixin.qq.com/s/2jeovmj77O9Ux96v3A0NtA"}),"\n",(0,r.jsx)(n.a,{href:"https://juejin.cn/post/6931922457741770760",children:"https://juejin.cn/post/6931922457741770760"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/D2C-Cai/herring",children:"https://github.com/D2C-Cai/herring"}),"\n",(0,r.jsx)(n.a,{href:"http://c.biancheng.net/springcloud",children:"http://c.biancheng.net/springcloud"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/macrozheng/springcloud-learning",children:"https://github.com/macrozheng/springcloud-learning"})]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},88672:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var r=t(50959);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);